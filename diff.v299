? config.log
? config.status
? make.out
? makefile
? pad/bin-i686-Linux
? pad/pad
? pad/paddraw
? pad/paddraw.install
? pad/unix/Makefile
? pad/unix/config.h
? pad/unix/config.log
? pad/unix/config.status
cvs server: Diffing .
Index: dynapad-c-api.ss
===================================================================
RCS file: /home/cvs/dynapad/dynapad-c-api.ss,v
retrieving revision 1.205
diff -r1.205 dynapad-c-api.ss
87d86
<     (rename (super-delete delete))
90c89
<       (super-delete))
---
>       (super delete))
316d314
<     (rename (super-delete delete))
319c317
<       (super-delete)
---
>       (super delete)
969d966
<     (rename (super-update-position update-position))
971c968
<       (super-update-position dx dy)
---
>       (super update-position dx dy)
975d971
<     (rename (super-update-size update-size))
978c974
< ;       ((arg) (super-update-size arg))
---
> ;       ((arg) (super update-size arg))
996d991
<     (rename (super-writeoptions writeoptions) (super-fix fix) (super-delete delete))
1025c1020
<       (super-fix alist))
---
>       (super fix alist))
1038c1033
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
1053c1048
<       (super-delete))      
---
>       (super delete))      
1065d1059
<     (rename (super-select select))
1067c1061
<       (if (null? args) (super-select)
---
>       (if (null? args) (super select)
1084,1085d1077
<     (rename (super-writeoptions writeoptions) (super-fix fix) (super-delete delete))
<     (rename (super-anchor anchor) (super-re-anchor re-anchor))
1092c1084
<       ((newanchor) (super-anchor "sw")) ))
---
>       ((newanchor) (super anchor "sw")) ))
1094c1086
<     (define (re-anchor newanchor) (super-re-anchor "sw"))
---
>     (define (re-anchor newanchor) (super re-anchor "sw"))
1119c1111
<       (super-fix alist))
---
>       (super fix alist))
1132c1124
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
1139c1131
<       (super-delete))
---
>       (super delete))
1146d1137
<     (rename (super-select select))
1148c1139
<       (if (null? args) (super-select)
---
>       (if (null? args) (super select)
1183c1174
<       select-render-script cursor cursorname
---
>       select-render-script cursor
1437,1441d1427
<     (define (cursorname name color)
<       (let ((filename (build-path *dynapad-directory* "pad" "bitmaps" name)))
<         (if (not (file-exists? filename))
< 	  (error "file not found: " filename)
< 	  (sch_cursor_by_name cptr (string-append "@" filename " " color)) )))
1566d1551
<     (rename (super-writeoptions writeoptions))
1609c1594
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
1645d1629
<     (rename (super-writeoptions writeoptions))
1655c1639
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
1730d1713
<     (rename (super-writeoptions writeoptions))
1742c1725
< 	(export-link (saveimagepath) (build-path dir myname))))
---
> 	(export-link (saveimagepath) (build-path->string dir myname))))
1745c1728
<       `(,@(super-writeoptions)))
---
>       `(,@(super writeoptions)))
1795d1777
<     (rename (super-delete delete))
1797d1778
<     (rename (super-writeoptions writeoptions) (super-center center))
1799,1800d1779
<     (rename (super-width width)) (override width)
<     (rename (super-height height)) (override height)
1833,1835c1812,1814
<     (define width (case-lambda
<       (() (super-width))
<       ((new) (set! _use_bbox #t) (super-width new))
---
>     (define/override width (case-lambda
>       (() (super width))
>       ((new) (set! _use_bbox #t) (super width new))
1838,1840c1817,1819
<     (define height (case-lambda
<       (() (super-height))
<       ((new) (set! _use_bbox #t) (super-height new))
---
>     (define/override height (case-lambda
>       (() (super height))
>       ((new) (set! _use_bbox #t) (super height new))
1845c1824
< 	(export-link (hirespath) (build-path dir myname))))
---
> 	(export-link (hirespath) (build-path->string dir myname))))
1851c1830
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
1894c1873
<       (super-delete))
---
>       (super delete))
1908c1887
<       (super-center . args)
---
>       (super center . args)
1926d1904
<     (rename (super-writeoptions writeoptions))
1940c1918
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
2121c2099,2103
<         (sch_bind_to_tag (send pad get-cptr) tag event bindings)))))
---
>         (sch_bind_to_tag
> 	  (send pad get-cptr)
> 	  tag
> 	  event
> 	  bindings)))))
Index: dynapad.cpp
===================================================================
RCS file: /home/cvs/dynapad/dynapad.cpp,v
retrieving revision 1.111
diff -r1.111 dynapad.cpp
2a3,8
> #define SCH_UNIXSTR(arg) \
>   SCHEME_BYTE_STR_VAL(scheme_char_string_to_byte_string(arg))
> 
> #define UNIX_SCHSTR(arg) \
>   scheme_byte_string_to_char_string(scheme_make_byte_string(arg))
> 
33c39,50
< extern "C" int		isatty (int fd);
---
> Scheme_Object *dynapad_typetag = NULL;
> Scheme_Object *rect_typetag = NULL;
> Scheme_Object *oval_typetag = NULL;
> Scheme_Object *button_typetag = NULL;
> Scheme_Object *line_typetag = NULL;
> Scheme_Object *polygon_typetag = NULL;
> Scheme_Object *imagedata_typetag = NULL;
> Scheme_Object *image_typetag = NULL;
> Scheme_Object *text_typetag = NULL;
> Scheme_Object *panel_typetag = NULL;
> Scheme_Object *group_typetag = NULL;
> Scheme_Object *layer_typetag = NULL;
39c56
<   return scheme_make_string("Dynapad created");
---
>   return UNIX_SCHSTR("Dynapad created");
49c66
<   if (!SCHEME_STRINGP(argv[0]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]))
54c71
<   name = SCHEME_STR_VAL(argv[0]);
---
>   name = SCH_UNIXSTR(argv[0]);
69d85
<   obj = scheme_make_cptr(pad, "dynapad");
70a87
>   obj = scheme_make_cptr(pad, dynapad_typetag);
86c103
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
138c155
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
188c205
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
232c249
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
255c272
<   if (!SCHEME_CPTRP(argv[2]) || strcmp("polygon", SCHEME_CPTR_TYPE(argv[2])))
---
>   if (!SCHEME_CPTRP(argv[2]) || polygon_typetag != SCHEME_CPTR_TYPE(argv[2]))
290c307
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
320c337
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
329c346
<     return scheme_make_string(pad->Get_modifier());
---
>     return UNIX_SCHSTR(pad->Get_modifier());
335c352
<   if (!SCHEME_STRINGP(argv[2]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[2]))
338c355
<   modifier = SCHEME_STR_VAL(argv[2]);
---
>   modifier = SCH_UNIXSTR(argv[2]);
385c402
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
457c474
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
485c502
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
509c526
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
520c537
<   obj = scheme_make_cptr(padrect, "rect");
---
>   obj = scheme_make_cptr(padrect, rect_typetag);
528c545
<   char *ctype;
---
>   Scheme_Object *ctype;
542,543c559,560
<   if (strcmp("rect", ctype) && strcmp("oval", ctype) &&
<       strcmp("line", ctype) && strcmp("polygon", ctype))
---
>   if (rect_typetag != ctype && oval_typetag != ctype &&
>       line_typetag != ctype && polygon_typetag != ctype)
574c591
<   if ((!strcmp("rect", ctype) || !strcmp("oval", ctype)) && listlen != 4)
---
>   if ((rect_typetag == ctype || oval_typetag == ctype) && listlen != 4)
628c645
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
639c656
<   obj = scheme_make_cptr(padoval, "oval");
---
>   obj = scheme_make_cptr(padoval, oval_typetag);
651c668
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
662c679
<   obj = scheme_make_cptr(padbutton, "button");
---
>   obj = scheme_make_cptr(padbutton, button_typetag);
674c691
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
685c702
<   obj = scheme_make_cptr(padline, "line");
---
>   obj = scheme_make_cptr(padline, line_typetag);
697c714
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
708c725
<   obj = scheme_make_cptr(padpolygon, "polygon");
---
>   obj = scheme_make_cptr(padpolygon, polygon_typetag);
904a922,923
> /* not used ??? */
> /* used directly, ugh, as sch_imagep */
910,911c929,930
<   if (!SCHEME_STRINGP(argv[0]))
<     scheme_wrong_type("sch_imagep", "string imagepath", 0, argc, argv);
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]) && !SCHEME_PATHP(argv[0]))
>     scheme_wrong_type("sch_imagep", "string or path imagepath", 0, argc, argv);
913c932,935
<   imagepath = SCHEME_STR_VAL(argv[0]);
---
>   if (SCHEME_CHAR_STRINGP(argv[0]))
>     imagepath = SCH_UNIXSTR(argv[0]);
>   else
>     imagepath = SCHEME_PATH_VAL(argv[0]);
928c950
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
933,934c955,956
<   if (!SCHEME_STRINGP(argv[2]))
<     scheme_wrong_type("sch_makeimagedata", "string imagepath", 2, argc, argv);
---
>   if (!SCHEME_CHAR_STRINGP(argv[2]) && !SCHEME_PATHP(argv[2]))
>     scheme_wrong_type("sch_makeimagedata", "string or path imagepath", 2, argc, argv);
939c961,965
<   imagepath = SCHEME_STR_VAL(argv[2]);
---
> 
>   if (SCHEME_CHAR_STRINGP(argv[2]))
>     imagepath = SCH_UNIXSTR(argv[2]);
>   else
>     imagepath = SCHEME_PATH_VAL(argv[2]);
955c981
<   obj = scheme_make_cptr(imagedata, "imagedata");
---
>   obj = scheme_make_cptr(imagedata, imagedata_typetag);
968c994
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
971c997
<       strcmp("imagedata", SCHEME_CPTR_TYPE(argv[1])))
---
>       imagedata_typetag != SCHEME_CPTR_TYPE(argv[1]))
992c1018
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
1003c1029
<   obj = scheme_make_cptr(image, "image");
---
>   obj = scheme_make_cptr(image, image_typetag);
1015c1041
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("image", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || image_typetag != SCHEME_CPTR_TYPE(argv[0]))
1031c1057
<       strcmp("imagedata", SCHEME_CPTR_TYPE(argv[1])))
---
>       imagedata_typetag != SCHEME_CPTR_TYPE(argv[1]))
1048c1074
<         strcmp("imagedata", SCHEME_CPTR_TYPE(argv[0])))
---
>         imagedata_typetag != SCHEME_CPTR_TYPE(argv[0]))
1052c1078
<   result = scheme_make_string(imagedata->name);
---
>   result = scheme_make_path(imagedata->name);
1064c1090
<         strcmp("imagedata", SCHEME_CPTR_TYPE(argv[0])))
---
>         imagedata_typetag != SCHEME_CPTR_TYPE(argv[0]))
1085c1111
<         strcmp("imagedata", SCHEME_CPTR_TYPE(argv[0])))
---
>         imagedata_typetag != SCHEME_CPTR_TYPE(argv[0]))
1162c1188
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
1173c1199
<   obj = scheme_make_cptr(padtext, "text");
---
>   obj = scheme_make_cptr(padtext, text_typetag);
1185c1211
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("text", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || text_typetag != SCHEME_CPTR_TYPE(argv[0]))
1187c1213
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
1191c1217
<   text = SCHEME_STR_VAL(argv[1]);
---
>   text = SCH_UNIXSTR(argv[1]);
1206c1232
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("text", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || text_typetag != SCHEME_CPTR_TYPE(argv[0]))
1214c1240
<   return scheme_make_string(padstring.Get());
---
>   return UNIX_SCHSTR(padstring.Get());
1226c1252
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("text", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || text_typetag != SCHEME_CPTR_TYPE(argv[0]))
1228c1254
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
1230c1256
<   if (!SCHEME_STRINGP(argv[2]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[2]))
1234,1235c1260,1261
<   index = SCHEME_STR_VAL(argv[1]);
<   str = SCHEME_STR_VAL(argv[2]);
---
>   index = SCH_UNIXSTR(argv[1]);
>   str = SCH_UNIXSTR(argv[2]);
1257c1283
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("text", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || text_typetag != SCHEME_CPTR_TYPE(argv[0]))
1263c1289
<     if (!SCHEME_STRINGP(argv[i]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[i]))
1267c1293
<   op = SCHEME_STR_VAL(argv[1]);
---
>   op = SCH_UNIXSTR(argv[1]);
1270,1271c1296,1297
<     mark = SCHEME_STR_VAL(argv[2]);
<     index = SCHEME_STR_VAL(argv[3]);
---
>     mark = SCH_UNIXSTR(argv[2]);
>     index = SCH_UNIXSTR(argv[3]);
1295c1321
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("text", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || text_typetag != SCHEME_CPTR_TYPE(argv[0]))
1297c1323
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
1301c1327
<     if (!SCHEME_STRINGP(argv[i]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[i]))
1305c1331
<   index = SCHEME_STR_VAL(argv[1]);
---
>   index = SCH_UNIXSTR(argv[1]);
1323c1349
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
1333c1359
<     name = scheme_make_string(device->name);
---
>     name = UNIX_SCHSTR(device->name);
1417c1443
<       key = scheme_make_string(numStorage);
---
>       key = UNIX_SCHSTR(numStorage);
1442c1468
<       scheme_get_env(scheme_config)),
---
>       scheme_get_env(scheme_current_config())),
1447c1473
<       scheme_get_env(scheme_config)),
---
>       scheme_get_env(scheme_current_config())),
1461c1487
<         scheme_get_env(scheme_config));
---
>         scheme_get_env(scheme_current_config()));
1493c1519
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
1496c1522
<     event = SCHEME_STR_VAL(sevent);
---
>     event = SCH_UNIXSTR(sevent);
1501c1527
<       if (!strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0]))) {
---
>       if (dynapad_typetag == SCHEME_CPTR_TYPE(argv[0])) {
1533c1559
<     if (!strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0]))) {
---
>     if (dynapad_typetag == SCHEME_CPTR_TYPE(argv[0])) {
1552c1578
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
1555c1581
<     event = SCHEME_STR_VAL(sevent);
---
>     event = SCH_UNIXSTR(sevent);
1559c1585
<     if (!strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (dynapad_typetag == SCHEME_CPTR_TYPE(argv[0]))
1575c1601
<     if (!strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (dynapad_typetag == SCHEME_CPTR_TYPE(argv[0]))
1583c1609
<         scheme_make_pair(scheme_make_string(event->Get()), scheme_null));
---
>         scheme_make_pair(UNIX_SCHSTR(event->Get()), scheme_null));
1606c1632
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
1611c1637
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
1614c1640
<   tagname = SCHEME_STR_VAL(stagname);
---
>   tagname = SCH_UNIXSTR(stagname);
1617c1643
<     if (!SCHEME_STRINGP(argv[2]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[2]))
1620c1646
<     event = SCHEME_STR_VAL(sevent);
---
>     event = SCH_UNIXSTR(sevent);
1664c1690
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
1667c1693
<     event = SCHEME_STR_VAL(sevent);
---
>     event = SCH_UNIXSTR(sevent);
1689c1715
<         scheme_make_pair(scheme_make_string(event->Get()), scheme_null));
---
>         scheme_make_pair(UNIX_SCHSTR(event->Get()), scheme_null));
1697a1724
> /* not used ??? */
1710c1737
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
1713c1740
<   tagname = SCHEME_STR_VAL(argv[1]);
---
>   tagname = SCH_UNIXSTR(argv[1]);
1719a1747
> /* not used ??? */
1732c1760
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
1735c1763
<   tagname = SCHEME_STR_VAL(argv[1]);
---
>   tagname = SCH_UNIXSTR(argv[1]);
1757c1785
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
1759c1787
<     order = SCHEME_STR_VAL(argv[1]);
---
>     order = SCH_UNIXSTR(argv[1]);
1764c1792
<     if (!strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0]))) {
---
>     if (dynapad_typetag == SCHEME_CPTR_TYPE(argv[0])) {
1780c1808
<   if (!strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0]))) {
---
>   if (dynapad_typetag == SCHEME_CPTR_TYPE(argv[0])) {
1791c1819
<   return scheme_make_string(order);
---
>   return UNIX_SCHSTR(order);
1800c1828
<   scheme_eval((Scheme_Object *)data, scheme_get_env(scheme_config));
---
>   scheme_eval((Scheme_Object *)data, scheme_get_env(scheme_current_config()));
1939c1967
<   if (!SCHEME_CPTRP(argv[1]) || strcmp("imagedata", SCHEME_CPTR_TYPE(argv[1])))
---
>   if (!SCHEME_CPTRP(argv[1]) || imagedata_typetag != SCHEME_CPTR_TYPE(argv[1]))
2075c2103
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
2083c2111
<   str = SCHEME_STR_VAL(argv[1]);
---
>   str = SCH_UNIXSTR(argv[1]);
2106c2134
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
2110c2138
<   color = SCHEME_STR_VAL(argv[1]);
---
>   color = SCH_UNIXSTR(argv[1]);
2137c2165
<     return scheme_make_string(padstring.Get());
---
>     return UNIX_SCHSTR(padstring.Get());
2140c2168
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
2143c2171
<   color = SCHEME_STR_VAL(argv[1]);
---
>   color = SCH_UNIXSTR(argv[1]);
2170c2198
<     return scheme_make_string(padstring.Get());
---
>     return UNIX_SCHSTR(padstring.Get());
2173c2201
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
2176c2204
<   color = SCHEME_STR_VAL(argv[1]);
---
>   color = SCH_UNIXSTR(argv[1]);
2254c2282
<   if (!focus && !strcmp("text", SCHEME_CPTR_TYPE(argv[0]))) {
---
>   if (!focus && text_typetag == SCHEME_CPTR_TYPE(argv[0])) {
2271c2299
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2308c2336
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("text", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || text_typetag != SCHEME_CPTR_TYPE(argv[0]))
2315c2343
<     return scheme_make_string(padstring.Get());
---
>     return UNIX_SCHSTR(padstring.Get());
2318c2346
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
2321c2349
<   font = SCHEME_STR_VAL(argv[1]);
---
>   font = SCH_UNIXSTR(argv[1]);
2337c2365
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2346c2374
<       scheme_make_pair(scheme_make_string(name->Get()), scheme_null));
---
>       scheme_make_pair(UNIX_SCHSTR(name->Get()), scheme_null));
2363c2391
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2372c2400
<     return scheme_make_string(padstring.Get());
---
>     return UNIX_SCHSTR(padstring.Get());
2375c2403
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
2378c2406
<   color = SCHEME_STR_VAL(argv[1]);
---
>   color = SCH_UNIXSTR(argv[1]);
2398c2426
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2428c2456
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2446,2475d2473
< sch_cursor_by_name(int argc, Scheme_Object **argv)
< {
<   Pad *pad;
<   Pad_Win *win;
<   char *passargv[2];
<   Scheme_Object *result = scheme_true;
< 
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0]))){
<     scheme_wrong_type("sch_cursor_by_name", "dynapad%", 0, argc, argv);
<   }
<   
<   pad = (Pad *)SCHEME_CPTR_VAL(argv[0]);
<   win = pad->Get_win();
< 
<   if (!SCHEME_STRINGP(argv[1])){
<     scheme_wrong_type("sch_cursor_by_name", "cursor filename and color", 1, argc, argv);
<   }
< 
<   passargv[0] = strdup("-cursor");
<   passargv[1] = strdup( SCHEME_STR_VAL(argv[1]) );
< 
<   if (Pad_Configure_widget((ClientData)win, 2, passargv) == PAD_ERROR){
<     scheme_warning("sch_cursor_by_name: failed on constructed argument:\n-->%s<--", passargv[1]);
<   }
<   //win->view->Damage();
< 
<   return result;
< }
< 
< static Scheme_Object *
2489c2487
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2530c2528
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2564c2562
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2589c2587
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2621c2619
<     return scheme_make_string(Pad_NameOfAnchor(padobject->Get_anchor()));
---
>     return UNIX_SCHSTR(Pad_NameOfAnchor(padobject->Get_anchor()));
2624c2622
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
2627c2625
<   anchor = SCHEME_STR_VAL(argv[1]);
---
>   anchor = SCH_UNIXSTR(argv[1]);
2787c2785
<     if ( SCHEME_STRINGP(argv[1]) &&  strcmp( SCHEME_STR_VAL(argv[1]) ,"one")==0 ){
---
>     if ( SCHEME_CHAR_STRINGP(argv[1]) &&  strcmp( SCH_UNIXSTR(argv[1]) ,"one")==0 ){
2822c2820
<     if ( SCHEME_STRINGP(argv[1]) &&  strcmp( SCHEME_STR_VAL(argv[1]) ,"one")==0 ){
---
>     if ( SCHEME_CHAR_STRINGP(argv[1]) &&  strcmp( SCH_UNIXSTR(argv[1]) ,"one")==0 ){
2846c2844
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
2948c2946
<         return scheme_make_string("x");
---
>         return UNIX_SCHSTR("x");
2950c2948
<         return scheme_make_string("y");
---
>         return UNIX_SCHSTR("y");
2952c2950
<         return scheme_make_string("z");
---
>         return UNIX_SCHSTR("z");
2954c2952
<         return scheme_make_string("view");
---
>         return UNIX_SCHSTR("view");
2964,2965c2962,2963
<   else if (SCHEME_STRINGP(argv[1])) {
<     p = SCHEME_STR_VAL(argv[1]);
---
>   else if (SCHEME_CHAR_STRINGP(argv[1])) {
>     p = SCH_UNIXSTR(argv[1]);
3149c3147
<   if (!SCHEME_CPTRP(argv[1]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[1])))
---
>   if (!SCHEME_CPTRP(argv[1]) || layer_typetag != SCHEME_CPTR_TYPE(argv[1]))
3167c3165
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3178c3176
<   obj = scheme_make_cptr(padpanel, "panel");
---
>   obj = scheme_make_cptr(padpanel, panel_typetag);
3200c3198
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("panel", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || panel_typetag != SCHEME_CPTR_TYPE(argv[0]))
3247c3245
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
3250c3248
<   color = SCHEME_STR_VAL(argv[1]);
---
>   color = SCH_UNIXSTR(argv[1]);
3268c3266
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3279c3277
<   obj = scheme_make_cptr(padgroup, "group");
---
>   obj = scheme_make_cptr(padgroup, group_typetag);
3295,3296c3293,3294
<       ( strcmp("group", SCHEME_CPTR_TYPE(argv[0])) &&
<         strcmp("panel", SCHEME_CPTR_TYPE(argv[0])) ))
---
>       ( group_typetag != SCHEME_CPTR_TYPE(argv[0]) &&
>         panel_typetag != SCHEME_CPTR_TYPE(argv[0]) ))
3337,3338c3335,3336
<       ( strcmp("group", SCHEME_CPTR_TYPE(argv[0])) &&
<         strcmp("panel", SCHEME_CPTR_TYPE(argv[0])) ))
---
>       ( group_typetag != SCHEME_CPTR_TYPE(argv[0]) &&
>         panel_typetag != SCHEME_CPTR_TYPE(argv[0]) ))
3361,3362c3359,3360
<       ( strcmp("group", SCHEME_CPTR_TYPE(argv[0])) &&
<         strcmp("panel", SCHEME_CPTR_TYPE(argv[0])) ))
---
>       ( group_typetag != SCHEME_CPTR_TYPE(argv[0]) &&
>         panel_typetag != SCHEME_CPTR_TYPE(argv[0]) ))
3385c3383
<        strcmp("group", SCHEME_CPTR_TYPE(argv[0]))
---
>        group_typetag != SCHEME_CPTR_TYPE(argv[0])
3387c3385
<        strcmp("panel", SCHEME_CPTR_TYPE(argv[0])))
---
>        panel_typetag != SCHEME_CPTR_TYPE(argv[0]))
3435c3433
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3440c3438
<   if (!SCHEME_STRINGP(argv[2]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[2]))
3445c3443
<   name = SCHEME_STR_VAL(argv[2]);
---
>   name = SCH_UNIXSTR(argv[2]);
3456c3454
<   obj = scheme_make_cptr(padlayer, "layer");
---
>   obj = scheme_make_cptr(padlayer, layer_typetag);
3468c3466
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || layer_typetag != SCHEME_CPTR_TYPE(argv[0]))
3487c3485
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || layer_typetag != SCHEME_CPTR_TYPE(argv[0]))
3492c3490
<   result = scheme_make_string(padlayer->name);
---
>   result = UNIX_SCHSTR(padlayer->name);
3507c3505
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || layer_typetag != SCHEME_CPTR_TYPE(argv[0]))
3534c3532
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3558c3556
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || layer_typetag != SCHEME_CPTR_TYPE(argv[0]))
3592c3590
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || layer_typetag != SCHEME_CPTR_TYPE(argv[0]))
3610c3608
<     if (!SCHEME_CPTRP(argv[1]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[1])))
---
>     if (!SCHEME_CPTRP(argv[1]) || layer_typetag != SCHEME_CPTR_TYPE(argv[1]))
3630c3628
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || layer_typetag != SCHEME_CPTR_TYPE(argv[0]))
3648c3646
<     if (!SCHEME_CPTRP(argv[1]) || strcmp("layer", SCHEME_CPTR_TYPE(argv[1])))
---
>     if (!SCHEME_CPTRP(argv[1]) || layer_typetag != SCHEME_CPTR_TYPE(argv[1]))
3669c3667
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3708c3706
<   obj = scheme_make_cptr(imagedata, "imagedata");
---
>   obj = scheme_make_cptr(imagedata, imagedata_typetag);
3721c3719
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3739c3737
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3762c3760
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3797c3795
<       if (!SCHEME_STRINGP(argv[1]))
---
>       if (!SCHEME_CHAR_STRINGP(argv[1]))
3800c3798
<       char *parsestring = SCHEME_STR_VAL(argv[1]);
---
>       char *parsestring = SCH_UNIXSTR(argv[1]);
3853c3851
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3871c3869
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3887c3885
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3904c3902
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3928c3926
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3952c3950
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
3976c3974
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
4000c3998
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
4024c4022
<   if (!SCHEME_CPTRP(argv[0]) || strcmp("dynapad", SCHEME_CPTR_TYPE(argv[0])))
---
>   if (!SCHEME_CPTRP(argv[0]) || dynapad_typetag != SCHEME_CPTR_TYPE(argv[0]))
4040a4039
> /* not used ??? */
4048,4049c4047,4048
<   if (!SCHEME_STRINGP(argv[0]))
<     scheme_wrong_type("sch_truncatefile", "string", 0, argc, argv);
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]) && !SCHEME_PATHP(argv[0]))
>     scheme_wrong_type("sch_truncatefile", "string or path", 0, argc, argv);
4053c4052,4056
<   filename = SCHEME_STR_VAL(argv[0]);
---
> 
>   if (SCHEME_CHAR_STRINGP(argv[0]))
>     filename = SCH_UNIXSTR(argv[0]);
>   else
>     filename = SCHEME_PATH_VAL(argv[0]);
4060a4064
> /* not used ??? */
4067c4071
<   if (!SCHEME_STRINGP(argv[0]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]))
4069c4073
<   path = SCHEME_STR_VAL(argv[0]);
---
>   path = SCH_UNIXSTR(argv[0]);
4076c4080
<   return scheme_make_string(path);
---
>   return UNIX_SCHSTR(path);
4078a4083
> /* not used ??? */
4085c4090
<   if (!SCHEME_STRINGP(argv[0]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]))
4087c4092
<   path = SCHEME_STR_VAL(argv[0]);
---
>   path = SCH_UNIXSTR(argv[0]);
4094c4099
<   return scheme_make_string(path);
---
>   return UNIX_SCHSTR(path);
4134,4135d4138
<   scheme_add_global("sch_cursor_by_name",
<     scheme_make_prim_w_arity(sch_cursor_by_name, "sch_cursor_by_name", 2, 2), env);
4349c4352,4375
<   return scheme_make_string("Hello Pad!");
---
>   dynapad_typetag = scheme_intern_symbol("dynapad");
>   scheme_dont_gc_ptr(dynapad_typetag);
>   rect_typetag = scheme_intern_symbol("rect");
>   scheme_dont_gc_ptr(rect_typetag);
>   oval_typetag = scheme_intern_symbol("oval");
>   scheme_dont_gc_ptr(oval_typetag);
>   button_typetag = scheme_intern_symbol("button");
>   scheme_dont_gc_ptr(button_typetag);
>   line_typetag = scheme_intern_symbol("line");
>   scheme_dont_gc_ptr(line_typetag);
>   polygon_typetag = scheme_intern_symbol("polygon");
>   scheme_dont_gc_ptr(polygon_typetag);
>   imagedata_typetag = scheme_intern_symbol("imagedata");
>   scheme_dont_gc_ptr(imagedata_typetag);
>   image_typetag = scheme_intern_symbol("image");
>   scheme_dont_gc_ptr(image_typetag);
>   text_typetag = scheme_intern_symbol("text");
>   scheme_dont_gc_ptr(text_typetag);
>   panel_typetag = scheme_intern_symbol("panel");
>   scheme_dont_gc_ptr(panel_typetag);
>   group_typetag = scheme_intern_symbol("group");
>   scheme_dont_gc_ptr(group_typetag);
> 
>   return UNIX_SCHSTR("Hello Pad!");
Index: dynapad.ss
===================================================================
RCS file: /home/cvs/dynapad/dynapad.ss,v
retrieving revision 1.104
diff -r1.104 dynapad.ss
18a19
> (require (lib "pathhack.ss" "misc"))
78c79
<       (set! load-on-startup (build-path (getenv "DYNAHOME") "apps.ss"))
---
>       (set! load-on-startup (build-path->string (getenv "DYNAHOME") "apps.ss"))
cvs server: Diffing NOTES
cvs server: Diffing NOTES/freetype
cvs server: Diffing NOTES/freetype/examples
cvs server: Diffing NOTES/visionmaker
cvs server: Diffing NOTES/visionmaker/doc
cvs server: Diffing NOTES/visionmaker/driver
cvs server: Diffing NOTES/visionmaker/xinput-1.2
cvs server: Diffing apps
cvs server: Diffing apps/amaya
cvs server: Diffing apps/anno
cvs server: Diffing apps/anno/icons
cvs server: Diffing apps/bshapiro
Index: apps/bshapiro/file-browser-backup7.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/bshapiro/file-browser-backup7.ss,v
retrieving revision 1.1
diff -r1.1 file-browser-backup7.ss
173,174c173,174
< (define temp-path (find-system-path 'temp-dir))               ;;the designated operating system temporary directory
< (define thumbnails-path (build-path temp-path "thumbnails"))  ;;the location of the thumbnails that will be generated for non-image files
---
> (define temp-path (find-system-path->string 'temp-dir))               ;;the designated operating system temporary directory
> (define thumbnails-path (build-path->string temp-path "thumbnails"))  ;;the location of the thumbnails that will be generated for non-image files
303,305c303,305
<     ;;(system (string-append "cp /home/alvin/dynapad/pad/images/padicon.gif" (build-path thumbnails-path directory (car file-list))))
<     ;;(system (string-append "./KPreviewer 300 " (build-path directory (car file-list)) 
<     ;;                       (build-path thumbnails-path directory (car file-list)) ))))
---
>     ;;(system (string-append "cp /home/alvin/dynapad/pad/images/padicon.gif" (build-path->string thumbnails-path directory (car file-list))))
>     ;;(system (string-append "./KPreviewer 300 " (build-path->string directory (car file-list)) 
>     ;;                       (build-path->string thumbnails-path directory (car file-list)) ))))
334,335c334,335
<                           (build-path directory item )))  
<                        (directory-list directory )))
---
>                           (build-path->string directory item )))  
>                        (directory-list->string directory )))
339,340c339,340
<                        (not (directory-exists? (build-path directory file))))
<                      (directory-list directory))))
---
>                        (not (directory-exists? (build-path->string directory file))))
>                      (directory-list->string directory))))
344c344
<                            (build-path directory file)) file-list))
---
>                            (build-path->string directory file)) file-list))
348c348
<                                (build-path directory relative-dir)) directories))
---
>                                (build-path->string directory relative-dir)) directories))
423,424c423,424
<                                  (build-path directory item )))  ;;build-path concatenates paths together
<                                (directory-list directory )))
---
>                                  (build-path->string directory item )))  ;;build-path->string concatenates paths together
>                                (directory-list->string directory )))
430c430
<                                (directory-list (build-path directory subdir)))
---
>                                (directory-list->string (build-path->string directory subdir)))
437c437
<                                 (directory-list directory))))
---
>                                 (directory-list->string directory))))
448c448
<                                    (build-path directory image ))
---
>                                    (build-path->string directory image ))
475c475
<            ;;(set! path-icon-list (append path-icon-list (list (cons (build-path directory (car non-image-file-list)) file-box))))
---
>            ;;(set! path-icon-list (append path-icon-list (list (cons (build-path->string directory (car non-image-file-list)) file-box))))
510c510
<            (set! file-path (make-object text% dynapad (build-path directory (car non-image-file-list))))
---
>            (set! file-path (make-object text% dynapad (build-path->string directory (car non-image-file-list))))
518c518
<            (set! modify-text (make-object text% dynapad (modify-time (build-path directory (car non-image-file-list)))))
---
>            (set! modify-text (make-object text% dynapad (modify-time (build-path->string directory (car non-image-file-list)))))
523c523
<            (set! file-size-text (make-object text% dynapad (string-append (insert-commas (expr->string (file-size (build-path directory (car non-image-file-list)))))
---
>            (set! file-size-text (make-object text% dynapad (string-append (insert-commas (expr->string (file-size (build-path->string directory (car non-image-file-list)))))
596c596
<                       (draw-subdirectories-helper (build-path directory dir)  (alternate-color dir-color) (alternate-color subdir-color) ))
---
>                       (draw-subdirectories-helper (build-path->string directory dir)  (alternate-color dir-color) (alternate-color subdir-color) ))
732c732
<             (delete-directory-icon (build-path directory (car subdirectories))))))))
---
>             (delete-directory-icon (build-path->string directory (car subdirectories))))))))
cvs server: Diffing apps/directory-browser
Index: apps/directory-browser/dir-browser.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/directory-browser/dir-browser.ss,v
retrieving revision 1.12
diff -r1.12 dir-browser.ss
63c63
< 		      (build-path _path item)))
---
> 		      (build-path->string _path item)))
69c69
< 		       (build-path _path item)))
---
> 		       (build-path->string _path item)))
176c176
< 				(make-file-icon (build-path _path file)
---
> 				(make-file-icon (build-path->string _path file)
210c210
< 					 (build-path _path subdir) rect 
---
> 					 (build-path->string _path subdir) rect 
Index: apps/directory-browser/directory-browser.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/directory-browser/directory-browser.ss,v
retrieving revision 1.18
diff -r1.18 directory-browser.ss
21c21
<      (directory-list directory)))
---
>      (directory-list->string directory)))
Index: apps/directory-browser/icons.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/directory-browser/icons.ss,v
retrieving revision 1.1
diff -r1.1 icons.ss
145c145
< (define icon-path (build-path *dynapad-directory* "apps/directory-browser/icons"))
---
> (define icon-path (build-path->string *dynapad-directory* "apps/directory-browser/icons"))
147,157c147,157
< (define id_image (make-object imagedata% dynapad (build-path icon-path "image.png")))
< (define id_pdf (make-object imagedata% dynapad (build-path icon-path "pdf.png")))
< (define id_txt (make-object imagedata% dynapad (build-path icon-path "txt.png")))
< (define id_source_cpp (make-object imagedata% dynapad (build-path icon-path "source_cpp.png")))
< (define id_source_c (make-object imagedata% dynapad (build-path icon-path "source_c.png")))
< (define id_source_h (make-object imagedata% dynapad (build-path icon-path "source_h.png")))
< (define id_source_o (make-object imagedata% dynapad (build-path icon-path "source_o.png")))
< (define id_unknown (make-object imagedata% dynapad (build-path icon-path "unknown.png")))
< (define id_folder (make-object imagedata% dynapad (build-path icon-path "folder.png")))
< (define id_up (make-object imagedata% dynapad (build-path icon-path "up.png")))
< (define id_top (make-object imagedata% dynapad (build-path icon-path "top.png")))
---
> (define id_image (make-object imagedata% dynapad (build-path->string icon-path "image.png")))
> (define id_pdf (make-object imagedata% dynapad (build-path->string icon-path "pdf.png")))
> (define id_txt (make-object imagedata% dynapad (build-path->string icon-path "txt.png")))
> (define id_source_cpp (make-object imagedata% dynapad (build-path->string icon-path "source_cpp.png")))
> (define id_source_c (make-object imagedata% dynapad (build-path->string icon-path "source_c.png")))
> (define id_source_h (make-object imagedata% dynapad (build-path->string icon-path "source_h.png")))
> (define id_source_o (make-object imagedata% dynapad (build-path->string icon-path "source_o.png")))
> (define id_unknown (make-object imagedata% dynapad (build-path->string icon-path "unknown.png")))
> (define id_folder (make-object imagedata% dynapad (build-path->string icon-path "folder.png")))
> (define id_up (make-object imagedata% dynapad (build-path->string icon-path "up.png")))
> (define id_top (make-object imagedata% dynapad (build-path->string icon-path "top.png")))
197,198c197,198
< 	 (img_path (if a (build-path icon-path (cadr a))
< 		         (build-path icon-path "unknown.png")))
---
> 	 (img_path (if a (build-path->string icon-path (cadr a))
> 		         (build-path->string icon-path "unknown.png")))
202,203c202,203
< 	      (set! img_path (build-path icon-path "folder.png"))
< 	      (set! img_path (build-path icon-path "unknown.png"))))
---
> 	      (set! img_path (build-path->string icon-path "folder.png"))
> 	      (set! img_path (build-path->string icon-path "unknown.png"))))
cvs server: Diffing apps/directory-browser/icons
cvs server: Diffing apps/dt
cvs server: Diffing apps/dt/dt_xmouse
cvs server: Diffing apps/dt/dtviz
cvs server: Diffing apps/dt/libdt
cvs server: Diffing apps/dt/libdt/doc
cvs server: Diffing apps/dt/mzdt
cvs server: Diffing apps/dt/touchd
cvs server: Diffing apps/dt-dynapad
Index: apps/dt-dynapad/dt-buttons.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/dt-dynapad/dt-buttons.ss,v
retrieving revision 1.14
diff -r1.14 dt-buttons.ss
41c41
<       (let* ((path (build-path *dynapad-directory* (string-append "apps/dt-dynapad/" label)))
---
>       (let* ((path (build-path->string *dynapad-directory* (string-append "apps/dt-dynapad/" label)))
223c223
<   (system (string-append (build-path *dynapad-directory* "apps/dt/dt_xmouse/dt_xmouse") " 5" " &"))
---
>   (system (string-append (build-path->string *dynapad-directory* "apps/dt/dt_xmouse/dt_xmouse") " 5" " &"))
228c228
<   (system (string-append (build-path *dynapad-directory* "apps/dt/touchd/touchd") " &")))
---
>   (system (string-append (build-path->string *dynapad-directory* "apps/dt/touchd/touchd") " &")))
Index: apps/dt-dynapad/dt.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/dt-dynapad/dt.ss,v
retrieving revision 1.4
diff -r1.4 dt.ss
1c1
< (load-extension (build-path *dynapad-directory* "apps/dt/mzdt/mzdt.so"))
---
> (load-extension (build-path->string *dynapad-directory* "apps/dt/mzdt/mzdt.so"))
cvs server: Diffing apps/dtread
cvs server: Diffing apps/etienne
cvs server: Diffing apps/etienne/padwedge
cvs server: Diffing apps/etienne/piles
cvs server: Diffing apps/etienne/task-region
cvs server: Diffing apps/flow
Index: apps/flow/flowdemo.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/flow/flowdemo.ss,v
retrieving revision 1.5
diff -r1.5 flowdemo.ss
53c53
<      (dir (build-path *dynapad-directory* "images/people")))
---
>      (dir (build-path->string *dynapad-directory* "images/people")))
55c55
<       (list (make-object image% dynapad (build-path dir "dbauer.gif"))
---
>       (list (make-object image% dynapad (build-path->string dir "dbauer.gif"))
59c59
<       (list (make-object image% dynapad (build-path dir "mhayward.gif"))
---
>       (list (make-object image% dynapad (build-path->string dir "mhayward.gif"))
63c63
<       (list (make-object image% dynapad (build-path dir "apoon.jpg"))
---
>       (list (make-object image% dynapad (build-path->string dir "apoon.jpg"))
67c67
<       (list (make-object image% dynapad (build-path dir "jhollan.gif"))
---
>       (list (make-object image% dynapad (build-path->string dir "jhollan.gif"))
71c71
<       (list (make-object image% dynapad (build-path dir "ehutchins.gif"))
---
>       (list (make-object image% dynapad (build-path->string dir "ehutchins.gif"))
75c75
<       (list (make-object image% dynapad (build-path dir "rstanonik.gif"))
---
>       (list (make-object image% dynapad (build-path->string dir "rstanonik.gif"))
83c83
<       (list (make-object image% dynapad (build-path dir "rstanonik.gif"))
---
>       (list (make-object image% dynapad (build-path->string dir "rstanonik.gif"))
Index: apps/flow/menudemo.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/flow/menudemo.ss,v
retrieving revision 1.4
diff -r1.4 menudemo.ss
9c9
<   (make-object image% dynapad (build-path 
---
>   (make-object image% dynapad (build-path->string 
cvs server: Diffing apps/googlerip
Index: apps/googlerip/googlerip.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/googlerip/googlerip.ss,v
retrieving revision 1.5
diff -r1.5 googlerip.ss
40,41c40,41
<       (delete-file (build-path dir x)))
<     (directory-list dir))
---
>       (delete-file (build-path->string dir x)))
>     (directory-list->string dir))
58c58
<       (set! images (arrangegoogleimages (map (lambda (file) (build-path dir file)) filelist)))
---
>       (set! images (arrangegoogleimages (map (lambda (file) (build-path->string dir file)) filelist)))
cvs server: Diffing apps/logsummary
Index: apps/logsummary/summarize-log.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/logsummary/summarize-log.ss,v
retrieving revision 1.1
diff -r1.1 summarize-log.ss
9c9
< 	 (newpath (build-path dir newfile)))
---
> 	 (newpath (build-path->string dir newfile)))
cvs server: Diffing apps/mysql
Index: apps/mysql/workspace.ss
===================================================================
RCS file: /home/cvs/dynapad/apps/mysql/workspace.ss,v
retrieving revision 1.2
diff -r1.2 workspace.ss
1c1
< (load (build-path (getenv "DYNAHOME") "lib" "mysql.ss"))
---
> (load (build-path->string (getenv "DYNAHOME") "lib" "mysql.ss"))
cvs server: Diffing apps/mysterx
cvs server: Diffing apps/paddraw
cvs server: Diffing apps/pdfrip
cvs server: Diffing apps/photo_op
cvs server: Diffing apps/stanonik
cvs server: Diffing apps/uberapp
cvs server: Diffing apps/vc
cvs server: Diffing apps/vc/vcplt1
cvs server: Diffing apps/vcdtread
cvs server: Diffing bin
cvs server: Diffing collects
cvs server: Diffing collects/imagemagick
Index: collects/imagemagick/imagemagick.c
===================================================================
RCS file: /home/cvs/dynapad/collects/imagemagick/imagemagick.c,v
retrieving revision 1.1
diff -r1.1 imagemagick.c
18a19,24
> #define SCH_UNIXSTR(arg) \
>   SCHEME_BYTE_STR_VAL(scheme_char_string_to_byte_string(arg))
> 
> #define UNIX_SCHSTR(arg) \
>   scheme_byte_string_to_char_string(scheme_make_byte_string(arg))
> 
27c33
<   if (!SCHEME_STRINGP(argv[0]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]))
29c35
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
36,37c42,43
<   char *src = SCHEME_STR_VAL(argv[0]);
<   char *dst = SCHEME_STR_VAL(argv[1]);
---
>   char *src = SCH_UNIXSTR(argv[0]);
>   char *dst = SCH_UNIXSTR(argv[1]);
84c90
<   if (!SCHEME_STRINGP(argv[0]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]))
86c92
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
91,92c97,98
<   char *src = SCHEME_STR_VAL(argv[0]);
<   char *dst = SCHEME_STR_VAL(argv[1]);
---
>   char *src = SCH_UNIXSTR(argv[0]);
>   char *dst = SCH_UNIXSTR(argv[1]);
135c141
<   if (!SCHEME_STRINGP(argv[0]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]))
137c143
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
140,141c146,147
<   char *src = SCHEME_STR_VAL(argv[0]);
<   char *dst = SCHEME_STR_VAL(argv[1]);
---
>   char *src = SCH_UNIXSTR(argv[0]);
>   char *dst = SCH_UNIXSTR(argv[1]);
183c189
<   if (!SCHEME_STRINGP(argv[0]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[0]))
185c191
<   if (!SCHEME_STRINGP(argv[1]))
---
>   if (!SCHEME_CHAR_STRINGP(argv[1]))
188,189c194,195
<   char *src = SCHEME_STR_VAL(argv[0]);
<   char *dst = SCHEME_STR_VAL(argv[1]);
---
>   char *src = SCH_UNIXSTR(argv[0]);
>   char *dst = SCH_UNIXSTR(argv[1]);
246c252
<   return scheme_make_string("ImageMagick");
---
>   return UNIX_SCHSTR("ImageMagick");
cvs server: Diffing collects/misc
cvs server: Diffing collects/mysql
Index: collects/mysql/makefile
===================================================================
RCS file: /home/cvs/dynapad/collects/mysql/makefile,v
retrieving revision 1.1
diff -r1.1 makefile
1c1
< PLT=/home/hci/plt
---
> PLT=/home/stanonik/plt
Index: collects/mysql/mysql-prims.c
===================================================================
RCS file: /home/cvs/dynapad/collects/mysql/mysql-prims.c,v
retrieving revision 1.3
diff -r1.3 mysql-prims.c
4a5,12
> #define SCH_UNIXSTR(arg) \
>   SCHEME_BYTE_STR_VAL(scheme_char_string_to_byte_string(arg))
> 
> #define UNIX_SCHSTR(arg) \
>   scheme_byte_string_to_char_string(scheme_make_byte_string(arg))
> 
> Scheme_Object *mysql_typetag = NULL;
> 
12c20
<       result = scheme_make_cptr(conn, "MYSQL");
---
>       result = scheme_make_cptr(conn, mysql_typetag);
22c30
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
36c44
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
38c46
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
40c48
<     if (!SCHEME_STRINGP(argv[2]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[2]))
42c50
<     if (!SCHEME_STRINGP(argv[3]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[3]))
45,47c53,55
<     host = SCHEME_STR_VAL(argv[1]);
<     user = SCHEME_STR_VAL(argv[2]);
<     password = SCHEME_STR_VAL(argv[3]);
---
>     host = SCH_UNIXSTR(argv[1]);
>     user = SCH_UNIXSTR(argv[2]);
>     password = SCH_UNIXSTR(argv[3]);
60c68
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
62c70
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
65c73
<     database = SCHEME_STR_VAL(argv[1]);
---
>     database = SCH_UNIXSTR(argv[1]);
77c85
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
79c87
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
82c90
<     query = SCHEME_STR_VAL(argv[1]);
---
>     query = SCH_UNIXSTR(argv[1]);
99c107
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
115c123
< 	  scheme_make_pair(scheme_make_string(mysql_row[j]), scheme_null));
---
> 	  scheme_make_pair(UNIX_SCHSTR(mysql_row[j]), scheme_null));
130c138
<     if (!SCHEME_STRINGP(argv[0]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[0]))
132c140
<     from = SCHEME_STR_VAL(argv[0]);
---
>     from = SCH_UNIXSTR(argv[0]);
137c145
<     result = scheme_make_string(to);
---
>     result = UNIX_SCHSTR(to);
147c155
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
158c166
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
171c179
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
173c181
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
175c183
<     if (!SCHEME_STRINGP(argv[2]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[2]))
177c185
<     if (!SCHEME_STRINGP(argv[3]) && argv[3] != scheme_false)
---
>     if (!SCHEME_CHAR_STRINGP(argv[3]) && argv[3] != scheme_false)
180,182c188,190
<     user = SCHEME_STR_VAL(argv[1]);
<     password = SCHEME_STR_VAL(argv[2]);
<     database = argv[3] == scheme_false ? NULL : SCHEME_STR_VAL(argv[3]);
---
>     user = SCH_UNIXSTR(argv[1]);
>     password = SCH_UNIXSTR(argv[2]);
>     database = argv[3] == scheme_false ? NULL : SCH_UNIXSTR(argv[3]);
193c201
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
204c212
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
207c215
<     return scheme_make_string(mysql_error(conn));
---
>     return UNIX_SCHSTR(mysql_error(conn));
218c226
<     if (!SCHEME_CPTRP(argv[0]) || strcmp("MYSQL", SCHEME_CPTR_TYPE(argv[0])))
---
>     if (!SCHEME_CPTRP(argv[0]) || mysql_typetag != SCHEME_CPTR_TYPE(argv[0]))
220c228
<     if (!SCHEME_STRINGP(argv[1]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[1]))
222c230
<     if (!SCHEME_STRINGP(argv[2]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[2]))
224c232
<     if (!SCHEME_STRINGP(argv[3]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[3]))
226c234
<     if (!SCHEME_STRINGP(argv[4]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[4]))
230c238
<     if (!SCHEME_STRINGP(argv[6]))
---
>     if (!SCHEME_CHAR_STRINGP(argv[6]))
235,238c243,246
<     host = SCHEME_STR_VAL(argv[1]);
<     user = SCHEME_STR_VAL(argv[2]);
<     password = SCHEME_STR_VAL(argv[3]);
<     db = SCHEME_STR_VAL(argv[4]);
---
>     host = SCH_UNIXSTR(argv[1]);
>     user = SCH_UNIXSTR(argv[2]);
>     password = SCH_UNIXSTR(argv[3]);
>     db = SCH_UNIXSTR(argv[4]);
242c250
<     socket = SCHEME_STR_VAL(argv[6]);
---
>     socket = SCH_UNIXSTR(argv[6]);
280a289,291
> 
>   mysql_typetag = scheme_intern_symbol("MYSQL");
>   scheme_dont_gc_ptr(mysql_typetag);
cvs server: Diffing collects/pdfrip
Index: collects/pdfrip/composite.ss
===================================================================
RCS file: /home/cvs/dynapad/collects/pdfrip/composite.ss,v
retrieving revision 1.6
diff -r1.6 composite.ss
5a6
>   (require "../misc/pathhack.ss")
20,21c21,22
<       (map (lambda(x) (build-path dir x))
<         (filter image-NNN? (directory-list dir)))))
---
>       (map (lambda(x) (build-path->string dir x))
>         (filter image-NNN? (directory-list->string dir)))))
24c25
<     (build-path (ripdir path) "firstpage.jpg"))
---
>     (build-path->string (ripdir path) "firstpage.jpg"))
27c28
<     (build-path (ripdir path) "largest.jpg"))
---
>     (build-path->string (ripdir path) "largest.jpg"))
35c36
<        (tile (build-path dir "tile.jpg")))
---
>        (tile (build-path->string dir "tile.jpg")))
97c98
<     (build-path (ripdir path) (format "composite.jpg")))
---
>     (build-path->string (ripdir path) (format "composite.jpg")))
113,114c114,115
<       (map (lambda(x) (build-path dir x))
<         (filter composite-NNN? (directory-list dir)))))
---
>       (map (lambda(x) (build-path->string dir x))
>         (filter composite-NNN? (directory-list->string dir)))))
145,146c146,147
<         (composite (build-path dir x)))
<       (filter pdf? (directory-list dir)))))
---
>         (composite (build-path->string dir x)))
>       (filter pdf? (directory-list->string dir)))))
Index: collects/pdfrip/import.ss
===================================================================
RCS file: /home/cvs/dynapad/collects/pdfrip/import.ss,v
retrieving revision 1.7
diff -r1.7 import.ss
5a6
>   (require "../misc/pathhack.ss")
14c15
<         (let ((port (open-output-file (build-path dest "map") 'append)))
---
>         (let ((port (open-output-file (build-path->string dest "map") 'append)))
28c29
< 		  ((not (file-exists? (build-path dest x)))
---
> 		  ((not (file-exists? (build-path->string dest x)))
30,31c31,32
< 		    ;  (build-path dir x)
< 		    ;  (build-path dest x))
---
> 		    ;  (build-path->string dir x)
> 		    ;  (build-path->string dest x))
34c35
< 		      (build-path dir x))
---
> 		      (build-path->string dir x))
36,37c37,38
< 		      (build-path dir x)
< 		      (build-path dest x)))
---
> 		      (build-path->string dir x)
> 		      (build-path->string dest x)))
42c43
< 		        ((file-exists? (build-path dest newx))
---
> 		        ((file-exists? (build-path->string dest newx))
47,48c48,49
< 		          ;  (build-path dir x)
< 		          ;  (build-path dest newx))
---
> 		          ;  (build-path->string dir x)
> 		          ;  (build-path->string dest newx))
51c52
< 		            (build-path dir x))
---
> 		            (build-path->string dir x))
53,57c54,58
< 			    (build-path dir x)
< 			    (build-path dest newx))))))))
< 	      ((directory-exists? (build-path dir x))
< 	        (flatten (build-path dir x) dest))))
<           (directory-list dir)))))
---
> 			    (build-path->string dir x)
> 			    (build-path->string dest newx))))))))
> 	      ((directory-exists? (build-path->string dir x))
> 	        (flatten (build-path->string dir x) dest))))
>           (directory-list->string dir)))))
69,71c70,72
< 	    (printf "removing ~a~%" (build-path dir x))
< 	    (delete-directory/files (build-path dir x)))))
<       (directory-list dir)))
---
> 	    (printf "removing ~a~%" (build-path->string dir x))
> 	    (delete-directory/files (build-path->string dir x)))))
>       (directory-list->string dir)))
74,75c75,76
<     (if (not (directory-exists? (build-path dir "bad")))
<       (make-directory (build-path dir "bad")))
---
>     (if (not (directory-exists? (build-path->string dir "bad")))
>       (make-directory (build-path->string dir "bad")))
78,79c79,80
<         (when (not (ripokay? (build-path dir x)))
< 	  (printf "pdfrip of ~a failed~%" (build-path dir x))
---
>         (when (not (ripokay? (build-path->string dir x)))
> 	  (printf "pdfrip of ~a failed~%" (build-path->string dir x))
81,83c82,84
< 	    (build-path dir x)
< 	    (build-path dir "bad" x))
< 	  (if (directory-exists? (ripdir (build-path dir x)))
---
> 	    (build-path->string dir x)
> 	    (build-path->string dir "bad" x))
> 	  (if (directory-exists? (ripdir (build-path->string dir x)))
85,87c86,88
< 	    (ripdir (build-path dir x))
< 	    (build-path dir "bad" (ripdir x))))))
<       (filter pdf? (directory-list dir))))
---
> 	    (ripdir (build-path->string dir x))
> 	    (build-path->string dir "bad" (ripdir x))))))
>       (filter pdf? (directory-list->string dir))))
103c104
< 	  (else (importtree (build-path dir x)))))
---
> 	  (else (importtree (build-path->string dir x)))))
105,106c106,107
<         (lambda(x) (directory-exists? (build-path dir x)))
< 	(directory-list dir))))
---
>         (lambda(x) (directory-exists? (build-path->string dir x)))
> 	(directory-list->string dir))))
Index: collects/pdfrip/misc.ss
===================================================================
RCS file: /home/cvs/dynapad/collects/pdfrip/misc.ss,v
retrieving revision 1.3
diff -r1.3 misc.ss
2a3,4
>   (require "../misc/pathhack.ss")
> 
13c15
<           (((dir name dir?) (split-path path))
---
>           (((dir name dir?) (split-path->string path))
39c41
<           (((dir name dir?) (split-path path))
---
>           (((dir name dir?) (split-path->string path))
Index: collects/pdfrip/movebad.ss
===================================================================
RCS file: /home/cvs/dynapad/collects/pdfrip/movebad.ss,v
retrieving revision 1.1
diff -r1.1 movebad.ss
6a7
>   (require "../misc/pathhack.ss")
22c23
< 	  (else (movebadtree (build-path dir x)))))
---
> 	  (else (movebadtree (build-path->string dir x)))))
24,25c25,26
<         (lambda(x) (directory-exists? (build-path dir x)))
< 	(directory-list dir)))))
---
>         (lambda(x) (directory-exists? (build-path->string dir x)))
> 	(directory-list->string dir)))))
Index: collects/pdfrip/pdfrip.ss
===================================================================
RCS file: /home/cvs/dynapad/collects/pdfrip/pdfrip.ss,v
retrieving revision 1.14
diff -r1.14 pdfrip.ss
8a9
>   (require "../misc/pathhack.ss")
23c24
<     (build-path (dirname path) (string-append "." (basename path))))
---
>     (build-path->string (dirname path) (string-append "." (basename path))))
50,51c51,52
<        (firstpage (build-path ripdir "firstpage.jpg"))
<        (largest (build-path ripdir "largest.jpg")))
---
>        (firstpage (build-path->string ripdir "firstpage.jpg"))
>        (largest (build-path->string ripdir "largest.jpg")))
176,177c177,178
<       (lambda(x) (pdfrip (build-path dir x)))
<       (filter pdf?  (directory-list dir))))
---
>       (lambda(x) (pdfrip (build-path->string dir x)))
>       (filter pdf?  (directory-list->string dir))))
183c184
<         (lambda(x) (pdfriptree (build-path dir x)))
---
>         (lambda(x) (pdfriptree (build-path->string dir x)))
187c188
< 	      (directory-exists? (build-path dir x))
---
> 	      (directory-exists? (build-path->string dir x))
191c192
< 	  (directory-list dir))))))
---
> 	  (directory-list->string dir))))))
cvs server: Diffing collects/thumbify
Index: collects/thumbify/thumbify.ss
===================================================================
RCS file: /home/cvs/dynapad/collects/thumbify/thumbify.ss,v
retrieving revision 1.6
diff -r1.6 thumbify.ss
21a22
>   (require "../misc/pathhack.ss")
50c51
<           (((dir name dir?) (split-path path))
---
>           (((dir name dir?) (split-path->string path))
59c60
<           (((dir name dir?) (split-path path)))
---
>           (((dir name dir?) (split-path->string path)))
69c70
<         (build-path (dirname path) "thumbs"))))
---
>         (build-path->string (dirname path) "thumbs"))))
86c87
<         (build-path (thumbsdir path) (number->string res)))))
---
>         (build-path->string (thumbsdir path) (number->string res)))))
103c104
<            (thumbs/res (build-path thumbs (number->string res))))
---
>            (thumbs/res (build-path->string thumbs (number->string res))))
121c122
< 	       (build-path
---
> 	       (build-path->string
184,185c185,186
< 		(thumbify (build-path dir x) res))
< 	      (filter image? (directory-list dir))))))))
---
> 		(thumbify (build-path->string dir x) res))
> 	      (filter image? (directory-list->string dir))))))))
201c202
<   	          (thumbifytree (build-path dir x) res))
---
>   	          (thumbifytree (build-path->string dir x) res))
204c205
< 		    (let ((path (build-path dir x)))
---
> 		    (let ((path (build-path->string dir x)))
207c208
< 		  (directory-list dir))))))))))
---
> 		  (directory-list->string dir))))))))))
cvs server: Diffing collects/xpdf
cvs server: Diffing documentation
cvs server: Diffing documentation/examples
cvs server: Diffing guide
cvs server: Diffing images
cvs server: Diffing images/people
cvs server: Diffing pad
cvs server: Diffing pad/bitmaps
cvs server: Diffing pad/bitmaps/animation
cvs server: Diffing pad/bitmaps/thumbs
cvs server: Diffing pad/bitmaps/thumbs/125
cvs server: Diffing pad/doc
cvs server: Diffing pad/doc/images
cvs server: Diffing pad/draw
cvs server: Diffing pad/draw/fonts
cvs server: Diffing pad/draw/scrapbook
cvs server: Diffing pad/draw/window_shapes
cvs server: Diffing pad/generic
Index: pad/generic/tkwin.cpp
===================================================================
RCS file: /home/cvs/dynapad/pad/generic/tkwin.cpp,v
retrieving revision 1.27
diff -r1.27 tkwin.cpp
334,338d333
<     if (Pad_Configure_widget(win, argc-2, argv+2) == PAD_ERROR)
<       {
< 	  return(PAD_ERROR);
<       }
< 
354,361d348
< 
< int
< Pad_Configure_widget(ClientData clientData, int argc, char *argv[])
< {
<     Pad_Win *win = (Pad_Win *)clientData;
< 
<     return(PAD_OK);
< }
cvs server: Diffing pad/html
cvs server: Diffing pad/images
cvs server: Diffing pad/kpl
cvs server: Diffing pad/kpl/lib
cvs server: Diffing pad/kpl/src
cvs server: Diffing pad/perl
cvs server: Diffing pad/testapi
cvs server: Diffing pad/unix
cvs server: Diffing pad/win
cvs server: Diffing pad/win/rc
cvs server: Diffing pad/win/sys
cvs server: Diffing src
cvs server: Diffing src/events
Index: src/events/mode.ss
===================================================================
RCS file: /home/cvs/dynapad/src/events/mode.ss,v
retrieving revision 1.5
diff -r1.5 mode.ss
126c126
<   (unless (member mode (Send argPAD eventModeStack)) ;dont push same mode twice
---
>   (unless (member mode (send argPAD eventModeStack)) ;dont push same mode twice
Index: src/events/zoom-classic.ss
===================================================================
RCS file: /home/cvs/dynapad/src/events/zoom-classic.ss,v
retrieving revision 1.1
diff -r1.1 zoom-classic.ss
7d6
<     (rename (super-start start))
20c19
<       (super-start interval))
---
>       (super start interval))
cvs server: Diffing src/history
Index: src/history/ids.ss
===================================================================
RCS file: /home/cvs/dynapad/src/history/ids.ss,v
retrieving revision 1.15
diff -r1.15 ids.ss
51c51
< (define objID id->obj) ;terse version for save files
---
> (define ObjID id->obj) ;terse version for save files
Index: src/history/logbead.ss
===================================================================
RCS file: /home/cvs/dynapad/src/history/logbead.ss,v
retrieving revision 1.4
diff -r1.4 logbead.ss
62d61
<      (rename (super-refresh-layout refresh-layout))
64c63
<        (super-refresh-layout)
---
>        (super refresh-layout)
Index: src/history/logbranch.ss
===================================================================
RCS file: /home/cvs/dynapad/src/history/logbranch.ss,v
retrieving revision 1.7
diff -r1.7 logbranch.ss
28c28
<   (let-values (((dir file dir?) (split-path logpath)))
---
>   (let-values (((dir file dir?) (split-path->string logpath)))
75c75
<   (let-values (((dir file dir?) (split-path logpath)))
---
>   (let-values (((dir file dir?) (split-path->string logpath)))
119c119
< 			(filenames (directory-list (directory)))
---
> 			(filenames (directory-list->string (directory)))
179c179
<       (let* ((allfiles (directory-list (send this directory)))
---
>       (let* ((allfiles (directory-list->string (send this directory)))
189c189
< 	  (set! logfilename (build-path (send this directory) logfilename)))
---
> 	  (set! logfilename (build-path->string (send this directory) logfilename)))
219c219
<       (build-path (directory) (format ".~a" (treename))))
---
>       (build-path->string (directory) (format ".~a" (treename))))
263c263
< 		   (logpaths (map (lambda (file) (build-path (directory) file)) logfiles))
---
> 		   (logpaths (map (lambda (file) (build-path->string (directory) file)) logfiles))
337c337
< 	  (cset! _path (build-path (directory) (file)))))
---
> 	  (cset! _path (build-path->string (directory) (file)))))
Index: src/history/lognodes.ss
===================================================================
RCS file: /home/cvs/dynapad/src/history/lognodes.ss,v
retrieving revision 1.3
diff -r1.3 lognodes.ss
5c5
<   (let* ((allfiles (directory-list dir))
---
>   (let* ((allfiles (directory-list->string dir))
12c12
<   (let* ((allfiles (directory-list dir))
---
>   (let* ((allfiles (directory-list->string dir))
90d89
<     (rename (super-add add))
97c96
<       (super-add lst))
---
>       (super add lst))
99,100c98
<     (rename (super-members members))
<     (define/override (members) (super-members))
---
>     (define/override (members) (super members))
103d100
<     (rename (super-delete delete))
107c104
<       (super-delete))
---
>       (super delete))
361c358
<   (if *current-logbranch* (send *current-logbranch* split newlogid)))
\ No newline at end of file
---
>   (if *current-logbranch* (send *current-logbranch* split newlogid)))
Index: src/history/logs.ss
===================================================================
RCS file: /home/cvs/dynapad/src/history/logs.ss,v
retrieving revision 1.15
diff -r1.15 logs.ss
203c203
<      (let-values (((dir file dir?) (split-path fullpath)))
---
>      (let-values (((dir file dir?) (split-path->string fullpath)))
545c545
< ; any --> load, N or S
\ No newline at end of file
---
> ; any --> load, N or S
Index: src/history/showlogs.ss
===================================================================
RCS file: /home/cvs/dynapad/src/history/showlogs.ss,v
retrieving revision 1.6
diff -r1.6 showlogs.ss
94,95c94
<     (rename (super-members members))
<     (define/override (members) (super-members)) ;disable settable members
---
>     (define/override (members) (super members)) ;disable settable members
98d96
<     (rename (super-delete delete))
102c100
<       (super-delete))
---
>       (super delete))
206d203
<     (rename (super-split-at-entry split-at-entry))
208c205
<       (let* ((tail-branch (super-split-at-entry state-id build-expr 'no-autolink))
---
>       (let* ((tail-branch (super split-at-entry state-id build-expr 'no-autolink))
cvs server: Diffing src/image-utils
Index: src/image-utils/arrangeimages.ss
===================================================================
RCS file: /home/cvs/dynapad/src/image-utils/arrangeimages.ss,v
retrieving revision 1.34
diff -r1.34 arrangeimages.ss
13,14c13,14
<     (lambda(x) (sch_imagep (build-path dir x)))
<     (directory-list dir)))
---
>     (lambda(x) (sch_imagep (build-path->string dir x)))
>     (directory-list->string dir)))
21c21
< 	((sch_imagep (build-path dir x)) x)
---
> 	((sch_imagep (build-path->string dir x)) x)
26c26
<       (directory-list dir))))
---
>       (directory-list->string dir))))
30,31c30,31
< 		   (lambda (f) (sch_imagep (build-path dir f)))
< 		   (directory-list dir))))
---
> 		   (lambda (f) (sch_imagep (build-path->string dir f)))
> 		   (directory-list->string dir))))
33c33
< 	   (> (file-size (build-path dir a)) (file-size (build-path dir b))))
---
> 	   (> (file-size (build-path->string dir a)) (file-size (build-path->string dir b))))
56c56
<       (set! images (arrangeimages (map (lambda (file) (build-path dir file)) filelist)))
---
>       (set! images (arrangeimages (map (lambda (file) (build-path->string dir file)) filelist)))
100c100
<     (map (lambda (d) (build-path dir d)) (directory-list dir))))
---
>     (map (lambda (d) (build-path->string dir d)) (directory-list->string dir))))
108c108
<       (set! filelist (map (lambda (file) (build-path dir file)) filelist))
---
>       (set! filelist (map (lambda (file) (build-path->string dir file)) filelist))
111c111
<           (map (lambda (file) (build-path subdir file)) (hires-list subdir))
---
>           (map (lambda (file) (build-path->string subdir file)) (hires-list subdir))
182c182
<     (let-values (((base name dir?) (split-path _path)))
---
>     (let-values (((base name dir?) (split-path->string _path)))
184c184
<       (set! _dotdir (build-path base (string-append "." name))))
---
>       (set! _dotdir (build-path->string base (string-append "." name))))
187c187
<       (let ((x (build-path _dotdir name)))
---
>       (let ((x (build-path->string _dotdir name)))
201c201
<           (sort string<? (directory-list _dotdir)))))
---
>           (sort string<? (directory-list->string _dotdir)))))
210c210
<           (sort string<? (directory-list _dotdir)))))
---
>           (sort string<? (directory-list->string _dotdir)))))
228c228
< 	(file-exists? (build-path dir x))))
---
> 	(file-exists? (build-path->string dir x))))
232c232
<       (directory-list dir))))
---
>       (directory-list->string dir))))
270c270
<         (map (lambda (file) (build-path dir file)) pdfs)))
---
>         (map (lambda (file) (build-path->string dir file)) pdfs)))
Index: src/image-utils/image-dates.ss
===================================================================
RCS file: /home/cvs/dynapad/src/image-utils/image-dates.ss,v
retrieving revision 1.6
diff -r1.6 image-dates.ss
26c26
<   (define datefile (build-path dir "thumbs" "dates.txt"))
---
>   (define datefile (build-path->string dir "thumbs" "dates.txt"))
46c46
<               (list (build-path dir name)
---
>               (list (build-path->string dir name)
Index: src/image-utils/thumbs.ss
===================================================================
RCS file: /home/cvs/dynapad/src/image-utils/thumbs.ss,v
retrieving revision 1.3
diff -r1.3 thumbs.ss
12c12
< 	(thumb-dir (build-path hires-dir "thumbs" size-string)))
---
> 	(thumb-dir (build-path->string hires-dir "thumbs" size-string)))
17c17
< 		  (let* ((hires-path (build-path hires-dir h))
---
> 		  (let* ((hires-path (build-path->string hires-dir h))
22c22
< 			(thumb-path (build-path thumb-dir thumb-name)))
---
> 			(thumb-path (build-path->string thumb-dir thumb-name)))
cvs server: Diffing src/image-utils/thumbify
cvs server: Diffing src/image-utils/thumbify/imago
cvs server: Diffing src/layout
Index: src/layout/composite.ss
===================================================================
RCS file: /home/cvs/dynapad/src/layout/composite.ss,v
retrieving revision 1.21
diff -r1.21 composite.ss
131d130
<     (rename (super-add add))
138c137
<       (super-add obj))
---
>       (super add obj))
140d138
<     (rename (super-remove remove))
143c141
<       (super-remove obj))
---
>       (super remove obj))
145d142
<     (rename (super-contents contents))
148c145
<        (() (super-contents))
---
>        (() (super contents))
155,156c152,153
<   (let* ((basefilepath (build-path dir basename))
< 	 (outfilepath  (build-path dir outname)))
---
>   (let* ((basefilepath (build-path->string dir basename))
> 	 (outfilepath  (build-path->string dir outname)))
201d197
<     (rename (super-add add))
203c199
<       (super-add (prepare-image obj)))
---
>       (super add (prepare-image obj)))
206d201
<     (rename (super-contents contents))
209c204
<        (() (super-contents))
---
>        (() (super contents))
241c236
< 		(basepath (build-path dir name))
---
> 		(basepath (build-path->string dir name))
265c260
< 		 (destfile (build-path dir name)))
---
> 		 (destfile (build-path->string dir name)))
285c280
<       (let-values (((dir name junk) (split-path filepath)))
---
>       (let-values (((dir name junk) (split-path->string filepath)))
300c295
<   (let-values (((path end result) (split-path path)))
---
>   (let-values (((path end result) (split-path->string path)))
355c350
< 	 (let* ((path (build-path dir "config.ss"))
---
> 	 (let* ((path (build-path->string dir "config.ss"))
358c353
< 				       (relpath ,(build-path "../"
---
> 				       (relpath ,(build-path->string "../"
420c415
<    (build-path *dynapad-directory* "pad/bitmaps/blank.jpg"))
---
>    (build-path->string *dynapad-directory* "pad/bitmaps/blank.jpg"))
444d438
<     (rename (super-delete delete))
447c441
<       (super-delete))
---
>       (super delete))
486c480
< 	(export-link (url) (build-path dir myname))))
---
> 	(export-link (url) (build-path->string dir myname))))
488d481
<     (rename (super-writeoptions writeoptions))
490c483
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
495,496c488,489
<       (let* ((basepath (build-path (dir) (baseimage-file)))
< 	     (comppath (build-path (dir) (composite-file)))
---
>       (let* ((basepath (build-path->string (dir) (baseimage-file)))
> 	     (comppath (build-path->string (dir) (composite-file)))
523c516
< 	     (basefile (build-path (dir) (baseimage-file)))
---
> 	     (basefile (build-path->string (dir) (baseimage-file)))
540c533
< 			  (path (build-path (dir) filename))
---
> 			  (path (build-path->string (dir) filename))
579c572
< 	(graphic (ic (make-object image% pad (build-path (dir) (composite-file))
---
> 	(graphic (ic (make-object image% pad (build-path->string (dir) (composite-file))
592c585
< (say "gathering..." (Send this url))
---
> (say "gathering..." (send this url))
648c641
<     (or (let ((config-file (build-path dir "config.ss")))
---
>     (or (let ((config-file (build-path->string dir "config.ss")))
679c672
< ;      (make-object image% dynapad (build-path (send test dir) "firstpage.jpg")
---
> ;      (make-object image% dynapad (build-path->string (send test dir) "firstpage.jpg")
Index: src/layout/layout.ss
===================================================================
RCS file: /home/cvs/dynapad/src/layout/layout.ss,v
retrieving revision 1.34
diff -r1.34 layout.ss
279d278
<     (rename (super-delete delete))
288c287
< 	(super-delete)))
---
> 	(super delete)))
651d649
<     (rename (super-render render))
655c653
<       (super-render)
---
>       (super render)
658d655
<     (rename (super-delete delete))
661c658
<       (super-delete))
---
>       (super delete))
Index: src/layout/trees.ss
===================================================================
RCS file: /home/cvs/dynapad/src/layout/trees.ss,v
retrieving revision 1.3
diff -r1.3 trees.ss
127,129d126
< 	 (rename (super-column column))
< 	 (rename (super-depth depth))
< 
132,133c129,130
< 		 (* _depth-gap  (super-depth))
< 		 (* _column-gap (super-column)))))
---
> 		 (* _depth-gap  (super depth))
> 		 (* _column-gap (super column)))))
144,145c141,142
< 	    (() (super-column))
< 	    ((c) (super-column c)
---
> 	    (() (super column))
> 	    ((c) (super column c)
150,151c147,148
< 	    (() (super-depth))
< 	    ((c) (super-depth c)
---
> 	    (() (super depth))
> 	    ((c) (super depth c)
174c171
< |#
\ No newline at end of file
---
> |#
cvs server: Diffing src/menu
Index: src/menu/dynamenubar.ss
===================================================================
RCS file: /home/cvs/dynapad/src/menu/dynamenubar.ss,v
retrieving revision 1.5
diff -r1.5 dynamenubar.ss
52c52
<   (let ((filename (build-path *dynapad-directory* bitmapfile)))
---
>   (let ((filename (build-path->string *dynapad-directory* bitmapfile)))
194c194
<       (send button set-label on_Oval)
---
>       (send button set-label on_oval)
Index: src/menu/menu-draw.ss
===================================================================
RCS file: /home/cvs/dynapad/src/menu/menu-draw.ss,v
retrieving revision 1.2
diff -r1.2 menu-draw.ss
71c71
<       (send button set-label on_Oval)
---
>       (send button set-label on_oval)
Index: src/menu/menu_functions.ss
===================================================================
RCS file: /home/cvs/dynapad/src/menu/menu_functions.ss,v
retrieving revision 1.47
diff -r1.47 menu_functions.ss
39c39
<       (set!-values (dir filename dir?) (split-path path)))
---
>       (set!-values (dir filename dir?) (split-path->string path)))
269c269
< 	(set!-values (dir filename dir?) (split-path path)))
---
> 	(set!-values (dir filename dir?) (split-path->string path)))
366c366
< (Define (Save-All-To-Port port)
---
> (define (Save-All-To-Port port)
541c541
<   (set-Select--undoable currentPAD (send currentPAD objects)))
---
>   (Set-Select--undoable currentPAD (send currentPAD objects)))
Index: src/menu/menu_shared.ss
===================================================================
RCS file: /home/cvs/dynapad/src/menu/menu_shared.ss,v
retrieving revision 1.21
diff -r1.21 menu_shared.ss
115c115
<     (add-menu-item sb "Ungroup" Ungroup-Selected
---
>     (add-menu-item sb "Ungroup" UnGroup-Selected
Index: src/menu/menubar.ss
===================================================================
RCS file: /home/cvs/dynapad/src/menu/menubar.ss,v
retrieving revision 1.41
diff -r1.41 menubar.ss
67c67
<   (let ((filename (build-path *dynapad-directory* bitmapfile)))
---
>   (let ((filename (build-path->string *dynapad-directory* bitmapfile)))
Index: src/menu/wx_emulator.ss
===================================================================
RCS file: /home/cvs/dynapad/src/menu/wx_emulator.ss,v
retrieving revision 1.3
diff -r1.3 wx_emulator.ss
21d20
<     (rename (super-add add))
38c37
<       (super-add obj)
---
>       (super add obj)
79d77
<     (rename (super-add add))
93c91
<       (super-add obj)
---
>       (super add obj)
cvs server: Diffing src/misc
Index: src/misc/command-shortcuts.ss
===================================================================
RCS file: /home/cvs/dynapad/src/misc/command-shortcuts.ss,v
retrieving revision 1.5
diff -r1.5 command-shortcuts.ss
25c25
<   (let-values (((base name dir?) (split-path path)))
---
>   (let-values (((base name dir?) (split-path->string path)))
42c42
<   `(simplify-path (build-path (this-expression-source-directory) ,path)))
---
>   `(simplify-path (build-path->string (this-expression-source-directory) ,path)))
55c55
<     (directory-list dir)
---
>     (directory-list->string dir)
62c62
<       (filter (lambda (f) (regexp-match re f)) (directory-list dir)))))
---
>       (filter (lambda (f) (regexp-match re f)) (directory-list->string dir)))))
71c71
<       (directory-list (current-directory))
---
>       (directory-list->string (current-directory))
78c78
< 			   (found (directory-list absdir)))
---
> 			   (found (directory-list->string absdir)))
160c160
<                             (let-values ([(base file dir?) (split-path source)])
---
>                             (let-values ([(base file dir?) (split-path->string source)])
Index: src/misc/dynaload.ss
===================================================================
RCS file: /home/cvs/dynapad/src/misc/dynaload.ss,v
retrieving revision 1.2
diff -r1.2 dynaload.ss
26,35c26,35
<     ((file-if-exists? (build-path *dynapad-directory* "src" "utils" file)))
<     ((file-if-exists? (build-path *dynapad-directory* "src" "misc" file)))
<     ((file-if-exists? (build-path *dynapad-directory* "src" "layout" file)))
<     ((file-if-exists? (build-path *dynapad-directory* "src" "events" file)))
<     ((file-if-exists? (build-path *dynapad-directory* "src" "menu" file)))
<     ((file-if-exists? (build-path *dynapad-directory* "src" "image-utils" file)))
<     ((file-if-exists? (build-path *dynapad-directory* "src" "history" file)))
<     ((file-if-exists? (build-path *dynapad-directory* "src" "physics" file)))
<     ((file-if-exists? (build-path *dynapad-directory* "src" file)))
<     ((file-if-exists? (build-path *dynapad-directory* file)))
---
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" "utils" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" "misc" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" "layout" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" "events" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" "menu" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" "image-utils" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" "history" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" "physics" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* "src" file)))
>     ((file-if-exists? (build-path->string *dynapad-directory* file)))
47c47
<   (define filename (build-path *dynapad-directory* "apps" dirname appname ))
---
>   (define filename (build-path->string *dynapad-directory* "apps" dirname appname ))
Index: src/misc/filenames.ss
===================================================================
RCS file: /home/cvs/dynapad/src/misc/filenames.ss,v
retrieving revision 1.4
diff -r1.4 filenames.ss
101c101
<   (let ((path (construct-unique-filename-append-number (build-path dir namebase))))
---
>   (let ((path (construct-unique-filename-append-number (build-path->string dir namebase))))
106c106
<     (let ((path (build-path dir filename)))
---
>     (let ((path (build-path->string dir filename)))
114c114
< 		   (build-path dir (format "~a" namebase)))))
---
> 		   (build-path->string dir (format "~a" namebase)))))
131,132c131,132
<   (let* ((names (directory-list dir))
< 	 (fullnames (map (lambda (f) (build-path dir f)) names))
---
>   (let* ((names (directory-list->string dir))
> 	 (fullnames (map (lambda (f) (build-path->string dir f)) names))
151c151
< 			     sch_imagep))
\ No newline at end of file
---
> 			     sch_imagep))
Index: src/misc/user-preferences.ss
===================================================================
RCS file: /home/cvs/dynapad/src/misc/user-preferences.ss,v
retrieving revision 1.2
diff -r1.2 user-preferences.ss
17c17
<   (let ((home (find-system-path 'home-dir))
---
>   (let ((home (find-system-path->string 'home-dir))
26c26
<       (set! padsetup (build-path home ".padsetup.ss"))
---
>       (set! padsetup (build-path->string home ".padsetup.ss"))
32c32
<   (let ((path (apply build-path *home-directory* ".dynapad" args)))
---
>   (let ((path (apply build-path->string *home-directory* ".dynapad" args)))
cvs server: Diffing src/physics
Index: src/physics/actortimer.ss
===================================================================
RCS file: /home/cvs/dynapad/src/physics/actortimer.ss,v
retrieving revision 1.8
diff -r1.8 actortimer.ss
7d6
<     (rename (super-start start))
12c11
< 	(super-start interval)))
---
> 	(super start interval)))
47d45
<     (rename (super-start start))
52c50
< 	(super-start interval)))
---
> 	(super start interval)))
Index: src/physics/animate.ss
===================================================================
RCS file: /home/cvs/dynapad/src/physics/animate.ss,v
retrieving revision 1.3
diff -r1.3 animate.ss
104d103
<     (rename (super-delete delete))
107c106
<       (super-delete))
---
>       (super delete))
Index: src/physics/physics.ss
===================================================================
RCS file: /home/cvs/dynapad/src/physics/physics.ss,v
retrieving revision 1.10
diff -r1.10 physics.ss
100d99
< 	 (rename (super-delete delete))
103c102
< 	   (super-delete))
---
> 	   (super delete))
105d103
< 	 (rename (super-kick kick))
109c107
< 	   (super-kick until rel-time))
---
> 	   (super kick until rel-time))
168d165
< 	 (rename (super-update update))
175c172
< 	   (super-update abstime dtime))
---
> 	   (super update abstime dtime))
203d199
< 	 (rename (super-accumulate-force accumulate-force))
218c214
< 	     (super-accumulate-force radial)
---
> 	     (super accumulate-force radial)
255d250
< 	 (rename (super-apply-force apply-force))
258c253
< 	   (super-apply-force duration coast-time))
---
> 	   (super apply-force duration coast-time))
270d264
< 	 (rename (super-update update))
272c266
< 	   (super-update abstime dtime)
---
> 	   (super update abstime dtime)
355d348
< ; 	 (rename (super-delete delete))
359c352
< ; 	   (super-delete))
---
> ; 	   (super delete))
405d397
<  	 (rename (super-delete delete))
409c401
<  	   (super-delete))
---
>  	   (super delete))
637d628
< 	 (rename (super-delete delete))
641c632
< 	   (super-delete))
---
> 	   (super delete))
Index: src/physics/piles.ss
===================================================================
RCS file: /home/cvs/dynapad/src/physics/piles.ss,v
retrieving revision 1.39
diff -r1.39 piles.ss
229d228
<     (rename (super-decorate decorate))
231c230
<       (let* ((framecolor (super-decorate)) ;returns fill (dynacolor) of frame
---
>       (let* ((framecolor (super decorate)) ;returns fill (dynacolor) of frame
255d253
<     (rename (super-decorate decorate))
257c255
<       (super-decorate)
---
>       (super decorate)
Index: src/physics/regions.ss
===================================================================
RCS file: /home/cvs/dynapad/src/physics/regions.ss,v
retrieving revision 1.67
diff -r1.67 regions.ss
243d242
<       (rename (super-delete delete))
248c247
< 	(super-delete))
---
> 	(super delete))
545d543
<     (rename (super-decorate decorate))
561c559
< 	(super-decorate)))
---
> 	(super decorate)))
618d615
<     (rename (super-delete delete))
621c618
<       (super-delete))
---
>       (super delete))
651d647
<     (rename (super-decorate decorate))
664c660
<       (super-decorate))
---
>       (super decorate))
675d670
<     (rename (super-decorate decorate))
687c682
<       (super-decorate))
---
>       (super decorate))
752d746
<     (rename (super-decorate decorate))
754c748
<       (super-decorate)
---
>       (super decorate)
792d785
<     (rename (super-decorate decorate))
794c787
<       (super-decorate)
---
>       (super decorate)
cvs server: Diffing src/utils
Index: src/utils/colors.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/colors.ss,v
retrieving revision 1.3
diff -r1.3 colors.ss
49d48
<     (rename (super-red red))
52c51
<        (() (super-red))
---
>        (() (super red))
54d52
<     (rename (super-green green))
57c55
<        (() (super-green))
---
>        (() (super green))
59d56
<     (rename (super-blue blue))
62c59
<        (() (super-blue))
---
>        (() (super blue))
65d61
<     (rename (super-set set))
70,71c66,67
< 		    (else (super-set str str str))))
<        ((r g b) (super-set r g b))))
---
> 		    (else (super set str str str))))
>        ((r g b) (super set r g b))))
Index: src/utils/dir-brush.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/dir-brush.ss,v
retrieving revision 1.6
diff -r1.6 dir-brush.ss
56d55
<      (rename (super-activate-member activate-member))
58c57
<        (super-activate-member memb)
---
>        (super activate-member memb)
61d59
<      (rename (super-delete delete))
65c63
<        (super-delete))
---
>        (super delete))
81d78
< ; ;    (rename (super-add-member add-member))
83c80
< ; ;      (super-add-member obj)
---
> ; ;      (super add-member obj)
89d85
< ; ;    (rename (super-remove-member remove-member))
91c87
< ; ;      (super-remove-member obj)
---
> ; ;      (super remove-member obj)
Index: src/utils/edges.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/edges.ss,v
retrieving revision 1.5
diff -r1.5 edges.ss
216d215
<      (rename (super-delete delete))
220c219
<        (super-delete))
---
>        (super delete))
222d220
<      (rename (super-writeoptions writeoptions))
224c222
<        `(,@(super-writeoptions)
---
>        `(,@(super writeoptions)
343d340
<     (rename (super-update update))
345c342
<       (super-update)
---
>       (super update)
354d350
<     (rename (super-delete delete))
357c353
<       (super-delete))
---
>       (super delete))
422c418
< (update-progress 1)
\ No newline at end of file
---
> (update-progress 1)
Index: src/utils/formation.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/formation.ss,v
retrieving revision 1.47
diff -r1.47 formation.ss
31d30
<     (rename (super-writeoptions writeoptions) (super-delete delete))
71c70
< 	(super-delete))
---
> 	(super delete))
83c82
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
119d117
<     (rename (super-bbox bbox))
122c120
<        (() (super-bbox))
---
>        (() (super bbox))
127d124
<     (rename (super-width width))
130c127
<        (() (super-width))
---
>        (() (super width))
135d131
<     (rename (super-height height))
138c134
<        (() (super-height))
---
>        (() (super height))
171d166
<     (rename (super-writeoptions writeoptions))
173c168
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
305d299
<     (rename (super-writeoptions writeoptions))
307c301
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
456d449
<     (rename (super-writeoptions writeoptions))
458c451
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
500d492
<     (rename (super-writeoptions writeoptions))
502c494
<       `(,@(super-writeoptions)
---
>       `(,@(super writeoptions)
518d509
<     (rename (super-resize-frame resize-frame))
520c511
<       (super-resize-frame bbox)
---
>       (super resize-frame bbox)
541d531
< ;     (rename (super-frame frame))
544c534
< ;        (() (super-frame))
---
> ;        (() (super frame))
561d550
<     (rename (super-resize-frame resize-frame))
563c552
<       (super-resize-frame bbox)
---
>       (super resize-frame bbox)
593c582
< ))
\ No newline at end of file
---
> ))
Index: src/utils/geometry.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/geometry.ss,v
retrieving revision 1.34
diff -r1.34 geometry.ss
290d289
<     (rename (super-describe-fields describe-fields))
292c291
<       (string-append (super-describe-fields) (format "geo-point%: x:~a y:~a~%" _x _y)))
---
>       (string-append (super describe-fields) (format "geo-point%: x:~a y:~a~%" _x _y)))
420d418
<     (rename (super-describe-fields describe-fields))
422c420
<       (string-append (super-describe-fields)
---
>       (string-append (super describe-fields)
666d663
<     (rename (super-describe-fields describe-fields))
668c665
<       (string-append (super-describe-fields)
---
>       (string-append (super describe-fields)
795d791
<     (rename (super-attach-to attach-to))
798c794
< 	  (super-attach-to obj name)
---
> 	  (super attach-to obj name)
804d799
<     (rename (super-describe-fields describe-fields))
806c801
<       (string-append (super-describe-fields)
---
>       (string-append (super describe-fields)
964d958
<     (rename (super-describe-fields describe-fields))
966c960
<       (string-append (super-describe-fields)
---
>       (string-append (super describe-fields)
975d968
<     (rename (super-go-thru-point go-thru-point))
990c983
<       (super-go-thru-point _origin))
---
>       (super go-thru-point _origin))
1019d1011
<     (rename (super-closest-pt-to closest-pt-to))
1021c1013
<       (let ((int (super-closest-pt-to pt)))
---
>       (let ((int (super closest-pt-to pt)))
1083d1074
<     (rename (super-describe-fields describe-fields))
1085c1076
<       (string-append (super-describe-fields)
---
>       (string-append (super describe-fields)
1114d1104
<     (rename (super-closest-pt-to closest-pt-to))
1116c1106
<       (let ((int (super-closest-pt-to pt)))
---
>       (let ((int (super closest-pt-to pt)))
1154d1143
<     (rename (super-dxy dxy))
1157c1146
<        (() (super-dxy))
---
>        (() (super dxy))
1161d1149
<     (rename (super-angle angle))
1164c1152
<        (()   (super-angle))
---
>        (()   (super angle))
1335d1322
<     (rename (super-origin origin))
1338c1325
<        (() (super-origin))
---
>        (() (super origin))
1349d1335
<     (rename (super-endpoint endpoint))
1352c1338
<        (() (super-endpoint))
---
>        (() (super endpoint))
1367d1352
<     (rename (super-describe-fields describe-fields))
1369c1354
<       (string-append (super-describe-fields)
---
>       (string-append (super describe-fields)
1512d1496
<     (rename (super-describe-fields describe-fields))
1514c1498
<       (string-append (super-describe-fields)
---
>       (string-append (super describe-fields)
1519d1502
<     (rename (super-slide-alone-by-dxy! slide-alone-by-dxy!))
1521c1504
<       (super-slide-alone-by-dxy! dx dy)
---
>       (super slide-alone-by-dxy! dx dy)
1534,1535d1516
<     (rename (super-origin origin))
<     (rename (super-endpoint endpoint))
1538,1539c1519,1520
<        (() (super-origin))
<        ((pt) (super-origin pt)
---
>        (() (super origin))
>        ((pt) (super origin pt)
1723d1703
<     (rename (super-attach-to attach-to))
1725,1726c1705,1706
<       (super-attach-to obj name)
<       (super-attach-to obj 'reshape-sensitive))
---
>       (super attach-to obj name)
>       (super attach-to obj 'reshape-sensitive))
1728d1707
<     (rename (super-describe-fields describe-fields))
1730c1709
<       (string-append (super-describe-fields)
---
>       (string-append (super describe-fields)
Index: src/utils/handle.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/handle.ss,v
retrieving revision 1.16
diff -r1.16 handle.ss
62c62
<   (let-values (((pdfdir pdffile junk) (split-path pdfpath)))
---
>   (let-values (((pdfdir pdffile junk) (split-path->string pdfpath)))
Index: src/utils/icon.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/icon.ss,v
retrieving revision 1.45
diff -r1.45 icon.ss
335c335
< (define icon-path (build-path *dynapad-directory* "apps/directory-browser/icons"))
---
> (define icon-path (build-path->string *dynapad-directory* "apps/directory-browser/icons"))
337,347c337,347
< (define id_image (make-object imagedata% dynapad (build-path icon-path "image.png")))
< (define id_pdf (make-object imagedata% dynapad (build-path icon-path "pdf.png")))
< (define id_txt (make-object imagedata% dynapad (build-path icon-path "txt.png")))
< (define id_source_cpp (make-object imagedata% dynapad (build-path icon-path "source_cpp.png")))
< (define id_source_c (make-object imagedata% dynapad (build-path icon-path "source_c.png")))
< (define id_source_h (make-object imagedata% dynapad (build-path icon-path "source_h.png")))
< (define id_source_o (make-object imagedata% dynapad (build-path icon-path "source_o.png")))
< (define id_unknown (make-object imagedata% dynapad (build-path icon-path "unknown.png")))
< (define id_folder (make-object imagedata% dynapad (build-path icon-path "folder.png")))
< (define id_up (make-object imagedata% dynapad (build-path icon-path "up.png")))
< (define id_top (make-object imagedata% dynapad (build-path icon-path "top.png")))
---
> (define id_image (make-object imagedata% dynapad (build-path->string icon-path "image.png")))
> (define id_pdf (make-object imagedata% dynapad (build-path->string icon-path "pdf.png")))
> (define id_txt (make-object imagedata% dynapad (build-path->string icon-path "txt.png")))
> (define id_source_cpp (make-object imagedata% dynapad (build-path->string icon-path "source_cpp.png")))
> (define id_source_c (make-object imagedata% dynapad (build-path->string icon-path "source_c.png")))
> (define id_source_h (make-object imagedata% dynapad (build-path->string icon-path "source_h.png")))
> (define id_source_o (make-object imagedata% dynapad (build-path->string icon-path "source_o.png")))
> (define id_unknown (make-object imagedata% dynapad (build-path->string icon-path "unknown.png")))
> (define id_folder (make-object imagedata% dynapad (build-path->string icon-path "folder.png")))
> (define id_up (make-object imagedata% dynapad (build-path->string icon-path "up.png")))
> (define id_top (make-object imagedata% dynapad (build-path->string icon-path "top.png")))
387,388c387,388
< 	 (img_path (if a (build-path icon-path (cadr a))
< 		         (build-path icon-path "unknown.png")))
---
> 	 (img_path (if a (build-path->string icon-path (cadr a))
> 		         (build-path->string icon-path "unknown.png")))
392,393c392,393
< 	      (set! img_path (build-path icon-path "folder.png"))
< 	      (set! img_path (build-path icon-path "unknown.png"))))
---
> 	      (set! img_path (build-path->string icon-path "folder.png"))
> 	      (set! img_path (build-path->string icon-path "unknown.png"))))
Index: src/utils/import-dirs.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/import-dirs.ss,v
retrieving revision 1.4
diff -r1.4 import-dirs.ss
17c17
< ;  (map (lambda (name) (build-path (car lst) name)) (cdr lst))
---
> ;  (map (lambda (name) (build-path->string (car lst) name)) (cdr lst))
22c22
<   (let* ((local-names (directory-list dir))
---
>   (let* ((local-names (directory-list->string dir))
24c24
< ;			     (let ((fullname (build-path dir name)))
---
> ;			     (let ((fullname (build-path->string dir name)))
28c28
< 		      (let ((fullname (build-path dir name)))
---
> 		      (let ((fullname (build-path->string dir name)))
138c138
< 		     (fullname (build-path (parent-wrapper-dir parent) name))
---
> 		     (fullname (build-path->string (parent-wrapper-dir parent) name))
213c213
<     
\ No newline at end of file
---
>     
Index: src/utils/minipad.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/minipad.ss,v
retrieving revision 1.12
diff -r1.12 minipad.ss
9d8
<   (rename (super-add add))
14c13
<     (super-add obj)
---
>     (super add obj)
20d18
<   (rename (super-remove remove))
24c22
<     (super-remove obj)
---
>     (super remove obj)
Index: src/utils/resize.ss
===================================================================
RCS file: /home/cvs/dynapad/src/utils/resize.ss,v
retrieving revision 1.12
diff -r1.12 resize.ss
357d356
<     (rename (super-Resize_ButtonPress Resize_ButtonPress))
360c359
<       (super-Resize_ButtonPress evnt))
---
>       (super Resize_ButtonPress evnt))
362d360
<     (rename (super-Resize_ButtonRelease Resize_ButtonRelease))
364c362
<       (super-Resize_ButtonRelease evnt)
---
>       (super Resize_ButtonRelease evnt)
cvs server: Diffing src/yap
