%!PS-Adobe-3.0
%%Creator: groff version 1.11
%%CreationDate: Mon Dec 15 09:32:43 1997
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.11 0
%%Pages: 19
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.11 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 20/Times-Bold@0 SF
(X11 Input Extension P)118.75 216 Q(orting Document)-.4 E/F2 12
/Times-Bold@0 SF 3(XV)223.944 252 S(ersion 11, Release 6.4)-4.2 E/F3 15
/Times-Bold@0 SF(Geor)175.042 456 Q(ge Sachs)-.15 E(Hewlett-P)30 E
(ackard)-.15 E EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R(Cop)72 219.6 Q
(yright \251 1989, 1990, 1991 by He)-.1 E(wlett-P)-.25 E(ackard Compan)
-.15 E(y)-.15 E(Permission to use, cop)72 235.2 Q 1.3 -.65(y, m)-.1 H
(odify).65 E 2.5(,a)-.65 G(nd distrib)-2.5 E
(ute this documentation for an)-.2 E 2.5(yp)-.15 G
(urpose and without fee is)-2.5 E(hereby granted, pro)72 247.2 Q
(vided that the abo)-.15 E .3 -.15(ve c)-.15 H(op).15 E
(yright notice and this permission notice appear in all copies.)-.1 E
(He)72 259.2 Q(wlett-P)-.25 E(ackard mak)-.15 E
(es no representations about the suitability for an)-.1 E 2.5(yp)-.15 G
(urpose of the information in this)-2.5 E 2.5(document. It)72 271.2 R
(is pro)2.5 E(vided "as is" without e)-.15 E(xpress or implied w)-.15 E
(arranty)-.1 E 5(.T)-.65 G(his document is only a draft stan-)-5 E
(dard of the X Consortium and is therefore subject to change.)72 283.2 Q
(Cop)72 355.2 Q(yright \251 1989, 1990, 1991 X Consortium)-.1 E
(Permission is hereby granted, free of char)72 370.8 Q(ge, to an)-.18 E
2.5(yp)-.15 G(erson obtaining a cop)-2.5 E 2.5(yo)-.1 G 2.5(ft)-2.5 G
(his softw)-2.5 E(are and associated)-.1 E
(documentation \214les \(the `)72 382.8 Q(`Softw)-.74 E(are')-.1 E
('\), to deal in the Softw)-.74 E
(are without restriction, including without limita-)-.1 E
(tion the rights to use, cop)72 394.8 Q 1.3 -.65(y, m)-.1 H(odify).65 E
2.5(,m)-.65 G(er)-2.5 E(ge, publish, distrib)-.18 E
(ute, sublicense, and/or sell copies of the Soft-)-.2 E -.1(wa)72 406.8
S(re, and to permit persons to whom the Softw).1 E
(are is furnished to do so, subject to the follo)-.1 E(wing conditions:)
-.25 E(The abo)72 422.4 Q .3 -.15(ve c)-.15 H(op).15 E(yright notice an\
d this permission notice shall be included in all copies or substantial\
 portions)-.1 E(of the Softw)72 434.4 Q(are.)-.1 E(THE SOFTW)72 450 Q
(ARE IS PR)-1.2 E -.5(OV)-.4 G(IDED `).5 E -.8(`A)-.74 G 2.5(SI).8 G(S')
-2.5 E(', WITHOUT W)-.74 E(ARRANTY OF ANY KIND, EXPRESS OR)-1.2 E
(IMPLIED, INCLUDING B)72 462 Q(UT NO)-.1 E 2.5(TL)-.4 G(IMITED T)-2.5 E
2.5(OT)-.18 G(HE W)-2.5 E(ARRANTIES OF MERCHANT)-1.2 E(ABILITY)-.93 E
2.5(,F)-1.29 G(IT)-2.5 E(-)-.92 E(NESS FOR A P)72 474 Q(AR)-.92 E
(TICULAR PURPOSE AND NONINFRINGEMENT)-.6 E 5(.I)-.74 G 2.5(NN)-5 G 2.5
(OE)-2.5 G(VENT SHALL THE X)-2.5 E(CONSOR)72 486 Q
(TIUM BE LIABLE FOR ANY CLAIM, D)-.6 E(AMA)-.4 E(GES OR O)-.4 E
(THER LIABILITY)-.4 E 2.5(,W)-1.29 G(HETHER IN)-2.5 E(AN A)72 498 Q
(CTION OF CONTRA)-.4 E(CT)-.4 E 2.5(,T)-.74 G(OR)-2.68 E 2.5(TO)-.6 G
2.5(RO)-2.5 G(THER)-2.9 E(WISE, ARISING FR)-.55 E
(OM, OUT OF OR IN CONNEC-)-.4 E(TION WITH THE SOFTW)72 510 Q
(ARE OR THE USE OR O)-1.2 E(THER DEALINGS IN THE SOFTW)-.4 E(ARE.)-1.2 E
(Except as contained in this notice, the name of the X Consortium shall\
 not be used in adv)72 525.6 Q(ertising or other)-.15 E(-)-.2 E
(wise to promote the sale, use or other dealings in this Softw)72 537.6
Q(are without prior written authorization from the)-.1 E 2.5(XC)72 549.6
S(onsortium.)-2.5 E/F1 10/Times-Italic@0 SF 2.5(XW)72 597.6 S
(indow System)-3.05 E F0(is a trademark of X Consortium, Inc.)2.5 E EP
%%Page: 1 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R
(This document is intended to aid the process of inte)72 84 Q
(grating the X11 Input Extension into an X serv)-.15 E(er)-.15 E(.)-.55
E(Most of the functionality pro)72 99.6 Q(vided by the input e)-.15 E
(xtension is de)-.15 E(vice- and implementation-independent, and)-.25 E
(should require no changes.)72 111.6 Q(The functionality is implemented\
 by routines that typically reside in the serv)5 E(er)-.15 E
(source tree directory e)72 123.6 Q(xtensions/serv)-.15 E 2.5
(er/xinput. This)-.15 F -.15(ex)2.5 G
(tension includes functions to enable and disable).15 E(input e)72 135.6
Q(xtension de)-.15 E(vices, select input, grab and focus those de)-.25 E
(vice, query and change k)-.25 E .3 -.15(ey a)-.1 H(nd b).15 E
(utton map-)-.2 E(pings, and others.)72 147.6 Q(The only input e)5 E
(xtension requirements for the de)-.15 E
(vice-dependent part of X are that the)-.25 E(input de)72 159.6 Q
(vices be correctly initialized and input e)-.25 E -.15(ve)-.25 G
(nts from those de).15 E(vices be correctly generated.)-.25 E(De)5 E
(vice-)-.25 E
(dependent X is responsible for reading input data from the input de)72
171.6 Q(vice hardw)-.25 E(are and if necessary)-.1 E 2.5(,r)-.65 G(efor)
-2.5 E(-)-.2 E(matting it into X e)72 183.6 Q -.15(ve)-.25 G(nts.).15 E
(The process of initializing input e)72 199.2 Q(xtension de)-.15 E
(vices is similar to that used for the core de)-.25 E(vices, and is)-.25
E(described in the follo)72 211.2 Q(wing sections.)-.25 E
(When multiple input de)5 E(vices are attached to X serv)-.25 E(er)-.15
E 2.5(,t)-.4 G(he choice of)-2.5 E(which de)72 223.2 Q
(vices to initially use as the core X pointer and k)-.25 E -.15(ey)-.1 G
(board is left implementation-dependent.).15 E(It is)5 E
(also up to each implementation to decide whether all input de)72 235.2
Q(vices will be opened by the serv)-.25 E(er during its)-.15 E
(initialization and k)72 247.2 Q(ept open for the life of the serv)-.1 E
(er)-.15 E 5(.T)-.55 G(he alternati)-5 E .3 -.15(ve i)-.25 H 2.5(st).15
G 2.5(oo)-2.5 G(pen only the X k)-2.5 E -.15(ey)-.1 G(board and X).15 E
(pointer during serv)72 259.2 Q
(er initialization, and open other input de)-.15 E
(vices only when requested by a client to do so.)-.25 E
(Either type of implementation is supported by the input e)72 271.2 Q
(xtension.)-.15 E(Input e)72 286.8 Q(xtension e)-.15 E -.15(ve)-.25 G
(nts generated by the X serv).15 E(er use the same 32-byte xEv)-.15 E
(ent wire e)-.15 E -.15(ve)-.25 G(nt as do core input).15 E -2.15 -.25
(ev e)72 298.8 T 2.5(nts. Ho).25 F(we)-.25 E -.15(ve)-.25 G .8 -.4(r, a)
.15 H(dditional information must be sent for input e).4 E(xtension de)
-.15 E(vices, requiring that multiple)-.25 E(xEv)72 310.8 Q
(ents be generated each time data is recei)-.15 E -.15(ve)-.25 G 2.5(df)
.15 G(rom an input e)-2.5 E(xtension de)-.15 E 2.5(vice. These)-.25 F
(xEv)2.5 E(ents are com-)-.15 E(bined into a single client XEv)72 322.8
Q(ent by the input e)-.15 E(xtension library)-.15 E 5(.A)-.65 G
(later section of this document describes)-2.5 E
(the format and generation of input e)72 334.8 Q(xtension e)-.15 E -.15
(ve)-.25 G(nts.).15 E/F1 10/Times-Bold@0 SF 2.5(2. Initializing)72 358.8
R(Extension De)2.5 E(vices)-.15 E F0(Extension input de)72 374.4 Q
(vices are initialized in the same manner as the core X input de)-.25 E
2.5(vices. De)-.25 F(vice-Independent)-.25 E 2.5(Xp)72 386.4 S(ro)-2.5 E
(vides functions that can be called from DDX to initialize these de)-.15
E 2.5(vices. Which)-.25 F(functions are called)2.5 E(and when will v)72
398.4 Q(ary by implementation, and will depend on whether the implement\
ation opens all the input)-.25 E(de)72 410.4 Q(vices a)-.25 E -.25(va)
-.2 G(ilable to X when X is initialized, or w).25 E
(aits until a client requests that a de)-.1 E(vice be opened.)-.25 E
(In the)5 E(simplest case, DDX will open all input de)72 422.4 Q
(vices as part of its initialization, when the InitInput routine is)-.25
E(called.)72 434.4 Q F1 2.5(2.1. Summary)72 458.4 R(of Calling Sequence)
2.5 E(1)285.5 768 Q EP
%%Page: 2 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(De)108 90 Q(vice-Independent X)-.25 E 5(|D)17.5 G -.25(ev)-5
G(ice-Dependent X).25 E 15(-------------------- |)108 102 R
(-------------------)5 E(|)175.5 114 Q(InitInput -------------->)108 126
Q 5(|-)5 G(do de)-2.5 E(vice-speci\214c initialization)-.25 E(|)175.5
138 Q 5(|-)175.5 150 S(call AddInputDe)-2.5 E 2.5(vice \(de)-.25 F
(viceProc,AutoStart\))-.25 E(AddInputDe)108 162 Q 30(vice |)-.25 F 2.5
(-c)113 174 S(reates De)-2.5 E 5(viceIntRec |)-.25 F 2.5(-r)113 186 S
(ecords de)-2.5 E 10(viceProc |)-.25 F 2.5(-a)113 198 S(dds ne)-2.5 E
2.5(wd)-.25 G -.25(ev)-2.5 G(ice to).25 E(|)12.5 E(list of of)118 210 Q
(f_de)-.25 E 5(vices. |)-.25 F(sets de)108 222 Q(v->startup=AutoStart|)
-.25 E 5(|-)175.5 234 S(call one of:)-2.5 E 10(|-)175.5 246 S(Re)-7.5 E
(gisterPointerDe)-.15 E(vice \(X pointer\))-.25 E 15(|-)175.5 258 S
(processInputProc = ProcessPointerEv)-12.5 E(ents)-.15 E 10(|-)175.5 270
S(Re)-7.5 E(gisterK)-.15 E -.15(ey)-.25 G(boardDe).15 E(vice \(X k)-.25
E -.15(ey)-.1 G(board\)).15 E 15(|-)175.5 282 S
(processInputProc = ProcessK)-12.5 E -.15(ey)-.25 G(boardEv).15 E(ents)
-.15 E 10(|-)175.5 294 S(Re)-7.5 E(gisterOtherDe)-.15 E 2.5(vice \(e)
-.25 F(xtension de)-.15 E(vice\))-.25 E 15(|-)175.5 306 S
(processInputProc = ProcessOtherEv)-12.5 E(ents)-.15 E(|)175.5 318 Q(|)
175.5 330 Q(InitAndStartDe)108 342 Q(vices -----> |)-.25 E 2.5(-c)5 G
(alls de)-2.5 E(viceProc with parameters)-.25 E 10(|\()175.5 354 S
(DEVICE_INIT)-10 E 2.5(,A)-.74 G(utoStart\))-2.5 E(sets de)108 366 Q
(v->inited = return)-.25 E(|)5 E -.25(va)113 378 S(lue from de).25 E 7.5
(viceProc |)-.25 F(|)175.5 390 Q 5(|-)175.5 402 S(in de)-2.5 E
(viceProc, do one of:)-.25 E 10(|-)175.5 414 S(call InitPointerDe)-7.5 E
(viceStruct \(X pointer\))-.25 E 10(|-)175.5 426 S(call InitK)-7.5 E
-.15(ey)-.25 G(boardDe).15 E(viceStruct \(X k)-.25 E -.15(ey)-.1 G(bd\))
.15 E 10(|-)175.5 438 S(init e)-7.5 E(xtension de)-.15 E
(vice by calling some of:)-.25 E 15(|-)175.5 450 S(InitK)-12.5 E -.15
(ey)-.25 G(ClassDe).15 E(viceStruct)-.25 E 15(|-)175.5 462 S
(InitButtonClassDe)-12.5 E(viceStruct)-.25 E 15(|-)175.5 474 S(InitV)
-12.5 E(aluatorClassDe)-1.11 E(viceStruct)-.25 E 15(|-)175.5 486 S
(InitV)-12.5 E(aluatorAxisStruct)-1.11 E 15(|-)175.5 498 S(InitF)-12.5 E
(ocusClassDe)-.15 E(viceStruct)-.25 E 15(|-)175.5 510 S
(InitProximityClassDe)-12.5 E(viceStruct)-.25 E 15(|-)175.5 522 S
(InitKbdFeedbackClassDe)-12.5 E(viceStruct)-.25 E 15(|-)175.5 534 S
(InitPtrFeedbackClassDe)-12.5 E(viceStruct)-.25 E 15(|-)175.5 546 S
(InitLedFeedbackClassDe)-12.5 E(viceStruct)-.25 E 15(|-)175.5 558 S
(InitStringFeedbackClassDe)-12.5 E(viceStruct)-.25 E 15(|-)175.5 570 S
(InitInte)-12.5 E(gerFeedbackClassDe)-.15 E(viceStruct)-.25 E 15(|-)
175.5 582 S(InitBellFeedbackClassDe)-12.5 E(viceStruct)-.25 E 10(|-)
175.5 594 S(init de)-7.5 E(vice name and type by:)-.25 E 15(|-)175.5 606
S(calling Mak)-12.5 E(eAtom with one of the)-.1 E 20(|p)175.5 618 S
(rede\214ned names)-20 E 15(|-)175.5 630 S(calling AssignT)-12.5 E
(ypeAndName)-.8 E(|)175.5 642 Q(|)175.5 654 Q(for each de)108 666 Q
(vice added)-.25 E(|)15 E(by AddInputDe)118 678 Q 10(vice, |)-.25 F
(InitAndStartDe)118 690 Q 7.5(vices |)-.25 F(calls EnableDe)118 702 Q
(vice if)-.25 E 5(|-)5 G(EnableDe)-2.5 E(vice calls de)-.25 E
(viceProc with)-.25 E(de)118 714 Q(v->startup &)-.25 E 10(|\()22.5 G
(DEVICE_ON, AutoStart\))-10 E(de)118 726 Q 27.5(v->inited |)-.25 F F1(2)
285.5 768 Q EP
%%Page: 3 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(|)175.5 84 Q(If de)108 96 Q(viceProc returns)-.25 E 5(|-)15
G(core de)-2.5 E(vices are no)-.25 E 2.5(we)-.25 G(nabled, e)-2.5 E
(xtension)-.15 E(Success, EnableDe)118 108 Q 2.5(vice |)-.25 F(de)10 E
(vices are no)-.25 E 2.5(wa)-.25 G -.25(va)-2.7 G(ilable to be accessed)
.25 E(mo)118 120 Q .3 -.15(ve t)-.15 H(he de).15 E(vice from)-.25 E 10
(|t)7.5 G(hrough the input e)-10 E(xtension protocol)-.15 E
(inputInfo.of)118 132 Q(f_de)-.25 E 2.5(vices |)-.25 F(requests.)10 E
(to inputInfo.de)118 144 Q 5(vices |)-.25 F F1 2.5(2.2. Initialization)
72 174 R(Called Fr)2.5 E(om InitInput)-.18 E F0
(InitInput is the \214rst DDX input entry point called during X serv)72
189.6 Q(er startup.)-.15 E(This routine is responsible for)5 E(de)72
201.6 Q(vice- and implementation- speci\214c initialization, and for ca\
lling AddInputDe)-.25 E(vice to create and initialize)-.25 E(the De)72
213.6 Q(viceIntRec structure for each input de)-.25 E 2.5
(vice. AddInputDe)-.25 F(vice is passed the address of a procedure to)
-.25 E(be called by the DIX routine InitAndStartDe)72 225.6 Q
(vices when input de)-.25 E(vices are enabled.)-.25 E(This procedure is)
5 E -.15(ex)72 237.6 S
(pected to perform X initialization for the input de).15 E(vice.)-.25 E
(If the de)72 253.2 Q(vice is to be used as the X pointer)-.25 E 2.5(,D)
-.4 G(DX should then call Re)-2.5 E(gisterPointerDe)-.15 E
(vice, passing the De)-.25 E(vi-)-.25 E(ceIntRec pointer)72 265.2 Q 2.5
(,t)-.4 G 2.5(oi)-2.5 G(nitialize the de)-2.5 E(vice as the X pointer)
-.25 E(.)-.55 E(If the de)72 280.8 Q(vice is to be used as the X k)-.25
E -.15(ey)-.1 G(board, DDX should instead call Re).15 E(gisterK)-.15 E
-.15(ey)-.25 G(boardDe).15 E(vice to initialize)-.25 E(the de)72 292.8 Q
(vice as the X k)-.25 E -.15(ey)-.1 G(board.).15 E(If the de)72 308.4 Q
(vice is to be used as an e)-.25 E(xtension de)-.15 E
(vice, DDX should instead call Re)-.25 E(gisterOtherDe)-.15 E
(vice, passing)-.25 E(the De)72 320.4 Q
(viceIntPtr returned by AddInputDe)-.25 E(vice.)-.25 E 2.5(As)72 336 S
(ample InitInput implementation is sho)-2.5 E(wn belo)-.25 E -.65(w.)
-.25 G F1(3)285.5 768 Q EP
%%Page: 4 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(InitInput\(ar)108 90 Q(gc,ar)-.18 E(gv\))-.18 E({)118 102 Q
(int i, numde)118 114 Q(vs, ReadInput\(\);)-.25 E(De)118 126 Q
(viceIntPtr de)-.25 E(v;)-.25 E(LocalDe)118 138 Q(vice localde)-.25 E
(vs[LOCAL_MAX_DEVS];)-.25 E(De)118 150 Q(viceProc kbdproc, ptrproc, e)
-.25 E(xtproc;)-.15 E
(/**************************************************************)118 174
Q 2.5(*O)120.5 186 S(pen the appropriate input de)-2.5 E
(vices, determine which are)-.25 E 2.5(*a)120.5 198 S -.25(va)-2.7 G
(ilable, and choose an X pointer and X k).25 E -.15(ey)-.1 G(board de)
.15 E(vice)-.25 E 2.5(*i)120.5 210 S 2.5(ns)-2.5 G
(ome implementation-dependent manner)-2.5 E(.)-.55 E
(***************************************************************/)120.5
222 Q(open_input_de)118 246 Q(vices \(&numde)-.25 E(vs, localde)-.25 E
(vs\);)-.25 E
(/**************************************************************)118 270
Q 2.5(*R)120.5 282 S -.15(eg)-2.5 G(ister a W).15 E(ak)-.8 E
(eupHandler to handle input when it is generated.)-.1 E
(***************************************************************/)120.5
294 Q(Re)118 318 Q(gisterBlockAndW)-.15 E(ak)-.8 E(eupHandlers \(NoopDD)
-.1 E(A, ReadInput, NULL\);)-.4 E
(/**************************************************************)118 342
Q 2.5(*R)120.5 354 S -.15(eg)-2.5 G(ister the input de).15 E
(vices with DIX.)-.25 E
(***************************************************************/)120.5
366 Q(for \(i=0; i<numde)118 390 Q(vs; i++\))-.25 E({)128 402 Q
(if \(localde)128 414 Q(vs[i].use == IsXK)-.25 E -.15(ey)-.25 G(board\))
.15 E({)138 426 Q(de)138 438 Q 2.5(v=A)-.25 G(ddInputDe)-2.5 E
(vice \(kbdproc, TR)-.25 E(UE\);)-.4 E(Re)138 450 Q(gisterK)-.15 E -.15
(ey)-.25 G(boardDe).15 E(vice \(de)-.25 E(v\);)-.25 E(})138 462 Q
(else if \(localde)128 474 Q(vs[i].use == IsXPointer\))-.25 E({)138 486
Q(de)138 498 Q 2.5(v=A)-.25 G(ddInputDe)-2.5 E(vice \(ptrproc, TR)-.25 E
(UE\);)-.4 E(Re)138 510 Q(gisterPointerDe)-.15 E(vice \(de)-.25 E(v\);)
-.25 E(})138 522 Q(else)128 534 Q({)138 546 Q(de)138 558 Q 2.5(v=A)-.25
G(ddInputDe)-2.5 E(vice \(e)-.25 E(xtproc, F)-.15 E(ALSE\);)-.74 E(Re)
138 570 Q(gisterOtherDe)-.15 E(vice \(de)-.25 E(v\);)-.25 E(})138 582 Q
(if \(de)128 594 Q 2.5(v=)-.25 G 2.5(=N)-2.5 G(ULL\))-2.5 E -.15(Fa)138
606 S(talError \("T).15 E(oo man)-.8 E 2.5(yi)-.15 G(nput de)-2.5 E
(vices."\);)-.25 E(de)128 618 Q(v->de)-.25 E(vicePri)-.25 E -.25(va)-.25
G(te = \(pointer\) &localde).25 E(vs[i];)-.25 E(})128 630 Q F1 2.5
(2.3. Initialization)72 660 R(Called Fr)2.5 E(om InitAndStartDe)-.18 E
(vices)-.15 E F0(After InitInput has returned, InitAndStartDe)72 675.6 Q
(vices is the DIX routine that is called to enable input de)-.25 E
(vices.)-.25 E(It calls the de)72 687.6 Q(vice control routine that w)
-.25 E(as passed to AddInputDe)-.1 E(vice, with a mode v)-.25 E
(alue of DEVICE_INIT)-.25 E(.)-.74 E(The action tak)72 699.6 Q
(en by the de)-.1 E(vice control routine depends on ho)-.25 E 2.5(wt)
-.25 G(he de)-2.5 E(vice is to be used.)-.25 E(If the de)5 E(vice is to)
-.25 E(be the X pointer)72 711.6 Q 2.5(,t)-.4 G(he de)-2.5 E
(vice control routine should call InitPointerDe)-.25 E
(viceStruct to initialize it.)-.25 E(If the de)5 E(vice)-.25 E
(is to be the X k)72 723.6 Q -.15(ey)-.1 G(board, the de).15 E
(vice control routine should call InitK)-.25 E -.15(ey)-.25 G(boardDe)
.15 E 2.5(viceStruct. Since)-.25 F(input)2.5 E F1(4)285.5 768 Q EP
%%Page: 5 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0 -.15(ex)72 84 S(tension de).15 E(vices may support v)-.25 E
(arious combinations of k)-.25 E -.15(ey)-.1 G(s, b).15 E(uttons, v)-.2
E(aluators, and feedbacks, each class)-.25 E
(of input that it supports must be initialized.)72 96 Q
(Entry points are de\214ned by DIX to initialize each of the sup-)5 E
(ported classes of input, and are described in the follo)72 108 Q
(wing sections.)-.25 E 2.5(As)72 123.6 S(ample de)-2.5 E
(vice control routine called from InitAndStartDe)-.25 E(vices is sho)
-.25 E(wn belo)-.25 E -.65(w.)-.25 G F1(5)285.5 768 Q EP
%%Page: 6 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(Bool e)108 90 Q(xtproc \(de)-.15 E 1.3 -.65(v, m)-.25 H
(ode\)).65 E(De)118 102 Q(viceIntPtr de)-.25 E(v;)-.25 E(int mode;)118
114 Q({)118 126 Q(LocalDe)118 138 Q(vice *localde)-.25 E 2.5(v=\()-.25 G
(LocalDe)-2.5 E(vice *\) de)-.25 E(v->de)-.25 E(vicePri)-.25 E -.25(va)
-.25 G(te;).25 E(switch \(mode\))118 162 Q({)128 174 Q(case DEVICE_INIT)
128 186 Q(:)-.5 E(if \(strcmp\(localde)138 198 Q(v->name, XI_T)-.25 E
(ABLET\) == 0\))-.93 E({)148 210 Q
(/****************************************************)148 222 Q 2.5(*T)
150.5 234 S(his de)-2.5 E(vice reports proximity)-.25 E 2.5(,h)-.65 G
(as b)-2.5 E(uttons,)-.2 E 2.5(*r)150.5 246 S(eports tw)-2.5 E 2.5(oa)
-.1 G -.15(xe)-2.5 G 2.5(so).15 G 2.5(fm)-2.5 G
(otion, and can be focused.)-2.5 E 2.5(*I)150.5 258 S 2.5(ta)-2.5 G
(lso supports the same feedbacks as the X pointer)-2.5 E 2.5(*\()150.5
270 S(acceleration and threshold can be set\).)-2.5 E
(****************************************************/)150.5 282 Q
(InitButtonClassDe)148 306 Q(viceStruct \(de)-.25 E 1.3 -.65(v, b)-.25 H
(utton_count, b).45 E(utton_map\);)-.2 E(InitV)148 318 Q(aluatorClassDe)
-1.11 E(viceStruct \(de)-.25 E 1.3 -.65(v, l)-.25 H(ocalde).65 E
(v->n_ax)-.25 E(es,\);)-.15 E(motionproc, MO)158 330 Q(TION_B)-.4 E
(UF_SIZE, Absolute\);)-.1 E(for \(i=0; i<localde)148 342 Q(v->n_ax)-.25
E(es; i++\))-.15 E(InitV)158 354 Q(aluatorAxisStruct \(de)-1.11 E 1.3
-.65(v, i)-.25 H 2.5(,m).65 G(in_v)-2.5 E(al, max_v)-.25 E(al,)-.25 E
(resolution\);)168 366 Q(InitF)148 378 Q(ocusClassDe)-.15 E
(viceStruct \(de)-.25 E(v\);)-.25 E(InitProximityClassDe)148 390 Q
(viceStruct \(de)-.25 E(v\);)-.25 E(InitPtrFeedbackClassDe)148 402 Q
(viceStruct \(de)-.25 E 1.3 -.65(v, p)-.25 H(_controlproc\);).65 E(})148
414 Q(else if \(strcmp\(localde)138 426 Q(v->name, XI_B)-.25 E(UTT)-.1 E
(ONBO)-.18 E(X\) == 0\))-.4 E({)148 438 Q
(/****************************************************)148 450 Q 2.5(*T)
150.5 462 S(his de)-2.5 E(vice has k)-.25 E -.15(ey)-.1 G 2.5(sa).15 G
(nd LEDs, and can be focused.)-2.5 E
(****************************************************/)150.5 474 Q
(InitK)148 498 Q -.15(ey)-.25 G(ClassDe).15 E(viceStruct \(de)-.25 E 1.3
-.65(v, s)-.25 H(yms, modmap\);).65 E(InitF)148 510 Q(ocusClassDe)-.15 E
(viceStruct \(de)-.25 E(v\);)-.25 E(InitLedFeedbackClassDe)148 522 Q
(viceStruct \(de)-.25 E 1.3 -.65(v, l)-.25 H(edcontrol\);).65 E(})148
534 Q(else if \(strcmp\(localde)138 546 Q(v->name, XI_KNOBBO)-.25 E
(X\) == 0\))-.4 E({)148 558 Q
(/****************************************************)148 570 Q 2.5(*T)
150.5 582 S(his de)-2.5 E(vice reports motion.)-.25 E 2.5(*I)150.5 594 S
2.5(tc)-2.5 G(an be focused.)-2.5 E
(****************************************************/)150.5 606 Q
(InitV)148 630 Q(aluatorClassDe)-1.11 E(viceStruct \(de)-.25 E 1.3 -.65
(v, l)-.25 H(ocalde).65 E(v->n_ax)-.25 E(es,\);)-.15 E(motionproc, MO)
158 642 Q(TION_B)-.4 E(UF_SIZE, Absolute\);)-.1 E(for \(i=0; i<localde)
148 654 Q(v->n_ax)-.25 E(es; i++\))-.15 E(InitV)158 666 Q
(aluatorAxisStruct \(de)-1.11 E 1.3 -.65(v, i)-.25 H 2.5(,m).65 G(in_v)
-2.5 E(al, max_v)-.25 E(al,)-.25 E(resolution\);)168 678 Q(InitF)148 690
Q(ocusClassDe)-.15 E(viceStruct \(de)-.25 E(v\);)-.25 E(})148 702 Q
(localde)138 714 Q(v->atom =)-.25 E(Mak)148 726 Q(eAtom\(localde)-.1 E
(v->name, strlen\(localde)-.25 E(v->name\), F)-.25 E(ALSE\);)-.74 E F1
(6)285.5 768 Q EP
%%Page: 7 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(AssignT)138 84 Q(ypeAndName \(de)-.8 E 1.3 -.65(v, l)-.25 H
(ocalde).65 E(v->atom, localde)-.25 E(v->name\);)-.25 E(break;)138 96 Q
(case DEVICE_ON:)128 108 Q(AddEnabledDe)138 120 Q(vice \(localde)-.25 E
(v->\214le_ds\);)-.25 E(de)138 132 Q(v->on = TR)-.25 E(UE;)-.4 E(break;)
138 144 Q(case DEVICE_OFF:)128 156 Q(de)138 168 Q(v->on = F)-.25 E
(ALSE;)-.74 E(Remo)138 180 Q -.15(ve)-.15 G(EnabledDe).15 E
(vice \(localde)-.25 E(v->\214le_ds\);)-.25 E(break;)138 192 Q
(case DEVICE_CLOSE:)128 204 Q(break;)138 216 Q(})128 228 Q(})118 240 Q
(The de)72 261.6 Q(vice control routine is called with a mode v)-.25 E
(alue of DEVICE_ON by the DIX routine EnableDe)-.25 E(vice,)-.25 E
(which is called from InitAndStartDe)72 273.6 Q 2.5(vices. When)-.25 F
(called with this mode, it should call AddEnabledDe)2.5 E(vice)-.25 E
(to cause the serv)72 285.6 Q(er to be)-.15 E(gin checking for a)-.15 E
-.25(va)-.2 G(ilable input from this de).25 E(vice.)-.25 E
(>From InitAndStartDe)72 301.2 Q(vices, EnableDe)-.25 E
(vice is called for all de)-.25 E(vices that ha)-.25 E .3 -.15(ve t)-.2
H(he "inited" and "startup").15 E(\214elds in the De)72 313.2 Q
(viceIntRec set to TR)-.25 E 2.5(UE. The)-.4 F
("inited" \214eld is set by InitAndStartDe)2.5 E(vices to the v)-.25 E
(alue)-.25 E(returned by the de)72 325.2 Q
(viceproc when called with a mode v)-.25 E(alue of DEVICE_INIT)-.25 E 5
(.T)-.74 G(he "startup" \214eld is set by)-5 E(AddInputDe)72 337.2 Q
(vice to v)-.25 E(alue of the second parameter \(autoStart\).)-.25 E
(When the serv)72 352.8 Q(er is \214rst initialized, it should only be \
checking for input from the core X k)-.15 E -.15(ey)-.1 G(board and).15
E(pointer)72 364.8 Q 5(.O)-.55 G(ne w)-5 E
(ay to accomplish this is to call AddInputDe)-.1 E
(vice for the core X k)-.25 E -.15(ey)-.1 G(board and pointer with an)
.15 E(autoStart v)72 376.8 Q(alue equal to TR)-.25 E
(UE, while calling AddInputDe)-.4 E(vice for input e)-.25 E(xtension de)
-.15 E(vices with an autoStart)-.25 E -.25(va)72 388.8 S(lue equal to F)
.25 E 2.5(ALSE. If)-.74 F(this is done, EnableDe)2.5 E
(vice will skip all input e)-.25 E(xtension de)-.15 E(vices during serv)
-.25 E(er ini-)-.15 E 2.5(tialization. In)72 400.8 R
(this case, the OpenInputDe)2.5 E
(vice routine should set the "startup" \214eld to TR)-.25 E
(UE when called)-.4 E(for input e)72 412.8 Q(xtension de)-.15 E 2.5
(vices. This)-.25 F(will cause ProcXOpenInputDe)2.5 E
(vice to call EnableDe)-.25 E(vice for those de)-.25 E(vices)-.25 E
(when a client \214rst does an XOpenDe)72 424.8 Q(vice request.)-.25 E
F1 2.5(2.4. DIX)72 448.8 R(Input Class Initialization Routines)2.5 E F0
(DIX routines are de\214ned to initialize each of the de\214ned input c\
lasses.)72 464.4 Q(The de\214ned classes are:)5 E 11.67(-K)122 480 S
-.15(ey)-11.92 G(Class - the de).15 E(vice has k)-.25 E -.15(ey)-.1 G
(s.).15 E 11.67(-B)122 495.6 S(uttonClass - the de)-11.67 E(vice has b)
-.25 E(uttons.)-.2 E 11.67(-V)122 511.2 S(aluatorClass - the de)-12.78 E
(vice reports motion data or positional data.)-.25 E 11.67(-P)122 526.8
S(roximitylass - the de)-11.67 E(vice reports proximity information.)
-.25 E 11.67(-F)122 542.4 S(ocusClass - the de)-11.82 E
(vice can be focused.)-.25 E 11.67(-F)122 558 S(eedbackClass - the de)
-11.67 E(vice supports some kind of feedback)-.25 E
(DIX routines are pro)72 573.6 Q
(vided to initialize the X pointer and k)-.15 E -.15(ey)-.1 G
(board, as in pre).15 E(vious releases of X.)-.25 E(During X)5 E
(initialization, InitPointerDe)72 585.6 Q
(viceStruct is called to initialize the X pointer)-.25 E 2.5(,a)-.4 G
(nd InitK)-2.5 E -.15(ey)-.25 G(boardDe).15 E(viceStruct is)-.25 E
(called to initialize the X k)72 597.6 Q -.15(ey)-.1 G 2.5(board. There)
.15 F(is no corresponding routine for e)2.5 E(xtension input de)-.15 E
(vices, since)-.25 E(the)72 609.6 Q 2.5(yd)-.15 G 2.5(on)-2.5 G
(ot all support the same classes of input.)-2.5 E
(Instead, DDX is responsible for the initialization of the)5 E
(input classes supported by e)72 621.6 Q(xtension de)-.15 E 2.5
(vices. A)-.25 F(description of the routines pro)2.5 E
(vided by DIX to perform)-.15 E(that initialization follo)72 633.6 Q
(ws.)-.25 E F1 2.5(2.4.1. InitK)72 657.6 R(eyClassDe)-.25 E(viceStruct)
-.15 E F0(This function is pro)72 673.2 Q
(vided to allocate and initialize a K)-.15 E -.15(ey)-.25 G
(ClassRec, and should be called for e).15 E(xtension)-.15 E(de)72 685.2
Q(vices that ha)-.25 E .3 -.15(ve k)-.2 H -.15(ey).05 G 2.5(s. It).15 F
(is passed a pointer to the de)2.5 E(vice, and pointers to arrays of k)
-.25 E -.15(ey)-.1 G(syms and modi\214ers).15 E(reported by the de)72
697.2 Q 2.5(vice. It)-.25 F(returns F)2.5 E(ALSE if the K)-.74 E -.15
(ey)-.25 G(ClassRec could not be allocated, or if the maps for the).15 E
-.1(ke)72 709.2 S(ysyms and and modi\214ers could not be allocated.)-.05
E(Its parameters are:)5 E F1(7)285.5 768 Q EP
%%Page: 8 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(Bool)108 90 Q(InitK)108 102 Q -.15(ey)-.25 G(ClassDe).15 E
(viceStruct\(de)-.25 E 1.3 -.65(v, p)-.25 H -2.15 -.25(Ke y).65 H
(Syms, pModi\214ers\)).25 E(De)118 114 Q(viceIntPtr de)-.25 E(v;)-.25 E
-2.15 -.25(Ke y)118 126 T(SymsPtr pK).25 E -.15(ey)-.25 G(Syms;).15 E
(CARD8 pModi\214ers[];)118 138 Q(The DIX entry point InitK)72 159.6 Q
-.15(ey)-.25 G(boardDe).15 E
(viceStruct calls this routine for the core X k)-.25 E -.15(ey)-.1 G 2.5
(board. It).15 F(must be called)2.5 E -.15(ex)72 171.6 S(plicitly for e)
.15 E(xtension de)-.15 E(vices that ha)-.25 E .3 -.15(ve k)-.2 H -.15
(ey).05 G(s.).15 E F1 2.5(2.4.2. InitButtonClassDe)72 195.6 R
(viceStruct)-.15 E F0(This function is pro)72 211.2 Q(vided to allocate\
 and initialize a ButtonClassRec, and should be called for e)-.15 E
(xtension)-.15 E(de)72 223.2 Q(vices that ha)-.25 E .3 -.15(ve b)-.2 H
2.5(uttons. It)-.05 F(is passed a pointer to the de)2.5 E
(vice, the number of b)-.25 E(uttons supported, and a map)-.2 E
(of the reported b)72 235.2 Q(utton codes.)-.2 E(It returns F)5 E
(ALSE if the ButtonClassRec could not be allocated.)-.74 E(Its parame-)5
E(ters are:)72 247.2 Q(Bool)108 268.8 Q(InitButtonClassDe)108 280.8 Q
(viceStruct\(de)-.25 E 1.3 -.65(v, n)-.25 H(umButtons, map\)).65 E(re)
118 292.8 Q(gister De)-.15 E(viceIntPtr de)-.25 E(v;)-.25 E
(int numButtons;)118 304.8 Q(CARD8 *map;)118 316.8 Q
(The DIX entry point InitPointerDe)72 338.4 Q
(viceStruct calls this routine for the core X pointer)-.25 E 5(.I)-.55 G
2.5(tm)-5 G(ust be called)-2.5 E -.15(ex)72 350.4 S(plicitly for e).15 E
(xtension de)-.15 E(vices that ha)-.25 E .3 -.15(ve b)-.2 H(uttons.)-.05
E F1 2.5(2.4.3. InitV)72 374.4 R(aluatorClassDe)-.92 E(viceStruct)-.15 E
F0(This function is pro)72 390 Q(vided to allocate and initialize a V)
-.15 E(aluatorClassRec, and should be called for e)-1.11 E(xtension)-.15
E(de)72 402 Q(vices that ha)-.25 E .3 -.15(ve v)-.2 H 2.5(aluators. It)
-.1 F(is passed the number of ax)2.5 E(es of motion reported by the de)
-.15 E(vice, the address of)-.25 E
(the motion history procedure for the de)72 414 Q
(vice, the size of the motion history b)-.25 E(uf)-.2 E(fer)-.25 E 2.5
(,a)-.4 G(nd the mode \(Absolute)-2.5 E(or Relati)72 426 Q -.15(ve)-.25
G 2.5(\)o).15 G 2.5(ft)-2.5 G(he de)-2.5 E 2.5(vice. It)-.25 F
(returns F)2.5 E(ALSE if the V)-.74 E
(aluatorClassRec could not be allocated.)-1.11 E(Its parameters)5 E
(are:)72 438 Q(Bool)108 459.6 Q(InitV)108 471.6 Q(aluatorClassDe)-1.11 E
(viceStruct\(de)-.25 E 1.3 -.65(v, n)-.25 H(umAx).65 E
(es, motionProc, numMotionEv)-.15 E(ents, mode\))-.15 E(De)118 483.6 Q
(viceIntPtr de)-.25 E(v;)-.25 E(int \(*motionProc\)\(\);)118 495.6 Q
(int numAx)118 507.6 Q(es;)-.15 E(int numMotionEv)118 519.6 Q(ents;)-.15
E(int mode;)118 531.6 Q(The DIX entry point InitPointerDe)72 553.2 Q
(viceStruct calls this routine for the core X pointer)-.25 E 5(.I)-.55 G
2.5(tm)-5 G(ust be called)-2.5 E -.15(ex)72 565.2 S(plicitly for e).15 E
(xtension de)-.15 E(vices that report motion.)-.25 E F1 2.5
(2.4.4. InitV)72 589.2 R(aluatorAxisStruct)-.92 E F0
(This function is pro)72 604.8 Q(vided to initialize an XAxisInfoRec, a\
nd should be called for core and e)-.15 E(xtension de)-.15 E(vices)-.25
E(that ha)72 616.8 Q .3 -.15(ve v)-.2 H 2.5(aluators. The)-.1 F
(space for the XAxisInfoRec is allocated by the InitV)2.5 E
(aluatorClassDe)-1.11 E(viceStruct)-.25 E(function, b)72 628.8 Q
(ut is not initialized.)-.2 E(InitV)72 644.4 Q(aluatorAxisStruct should\
 be called once for each axis of motion reported by the de)-1.11 E 2.5
(vice. Each)-.25 F(in)2.5 E -.2(vo)-.4 G(ca-).2 E(tion should be passed\
 the axis number \(starting with 0\), the minimum v)72 656.4 Q
(alue for that axis, the maximum)-.25 E -.25(va)72 668.4 S
(lue for that axis, and the resolution of the de).25 E
(vice in counts per meter)-.25 E 5(.I)-.55 G 2.5(ft)-5 G(he de)-2.5 E
(vice reports relati)-.25 E -.15(ve)-.25 G
(motion, 0 should be reported as the minimum and maximum v)72 680.4 Q
2.5(alues. InitV)-.25 F(aluatorAxisStruct has the follo)-1.11 E(w-)-.25
E(ing parameters:)72 692.4 Q F1(8)285.5 768 Q EP
%%Page: 9 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(InitV)108 90 Q(aluatorAxisStruct\(de)-1.11 E 1.3 -.65(v, a)
-.25 H(xnum, min).65 E -.25(va)-.4 G(l, maxv).25 E(al, resolution\))-.25
E(De)118 102 Q(viceIntPtr de)-.25 E(v;)-.25 E(int axnum;)118 114 Q
(int min)118 126 Q -.25(va)-.4 G(l;).25 E(int maxv)118 138 Q(al;)-.25 E
(int resolution;)118 150 Q(This routine is not called by InitPointerDe)
72 171.6 Q(viceStruct for the core X pointer)-.25 E 5(.I)-.55 G 2.5(tm)
-5 G(ust be called e)-2.5 E(xplicitly for)-.15 E(core and e)72 183.6 Q
(xtension de)-.15 E(vices that report motion.)-.25 E F1 2.5
(2.4.5. InitF)72 207.6 R(ocusClassDe)-.25 E(viceStruct)-.15 E F0
(This function is pro)72 223.2 Q(vided to allocate and initialize a F)
-.15 E(ocusClassRec, and should be called for e)-.15 E(xtension)-.15 E
(de)72 235.2 Q(vices that can be focused.)-.25 E
(It is passed a pointer to the de)5 E(vice, and returns F)-.25 E
(ALSE if the allocation f)-.74 E(ails.)-.1 E(It has the follo)72 247.2 Q
(wing parameter:)-.25 E(Bool)108 265.2 Q(InitF)108 277.2 Q(ocusClassDe)
-.15 E(viceStruct\(de)-.25 E(v\))-.25 E(De)118 289.2 Q(viceIntPtr de)
-.25 E(v;)-.25 E(The DIX entry point InitK)72 310.8 Q -.15(ey)-.25 G
(boardDe).15 E(viceStruct calls this routine for the core X k)-.25 E
-.15(ey)-.1 G 2.5(board. It).15 F(must be called)2.5 E -.15(ex)72 322.8
S(plicitly for e).15 E(xtension de)-.15 E(vices that can be focused.)
-.25 E(Whether or not a particular de)5 E(vice can be focused is)-.25 E
(left implementation-dependent.)72 334.8 Q F1 2.5(2.4.6. InitPr)72 358.8
R(oximityClassDe)-.18 E(viceStruct)-.15 E F0(This function is pro)72
374.4 Q(vided to allocate and initialize a ProximityClassRec, and shoul\
d be called for e)-.15 E(xtension)-.15 E(absolute pointing de)72 386.4 Q
(vices that report proximity)-.25 E 5(.I)-.65 G 2.5(ti)-5 G 2.5(sp)-2.5
G(assed a pointer to the de)-2.5 E(vice, and returns F)-.25 E(ALSE if)
-.74 E(the allocation f)72 398.4 Q 2.5(ails. It)-.1 F(has the follo)2.5
E(wing parameter:)-.25 E(Bool)108 416.4 Q(InitProximityClassDe)108 428.4
Q(viceStruct\(de)-.25 E(v\))-.25 E(De)118 440.4 Q(viceIntPtr de)-.25 E
(v;)-.25 E F1 2.5(2.4.7. Initializing)72 470.4 R -.25(Fe)2.5 G(edbacks)
.25 E 2.5(2.4.7.1. InitKbdF)72 498 R(eedbackClassDe)-.25 E(viceStruct)
-.15 E F0(This function is pro)72 513.6 Q(vided to allocate and initial\
ize a KbdFeedbackClassRec, and may be called for e)-.15 E(xten-)-.15 E
(sion de)72 525.6 Q
(vices that support some or all of the feedbacks that the core k)-.25 E
-.15(ey)-.1 G(board supports.).15 E(It is passed a pointer)5 E
(to the de)72 537.6 Q(vice, a pointer to the procedure that sounds the \
bell, and a pointer to the de)-.25 E(vice control procedure.)-.25 E
(It returns F)72 549.6 Q(ALSE if the allocation f)-.74 E
(ails, and has the follo)-.1 E(wing parameters:)-.25 E(Bool)108 567.6 Q
(InitKbdFeedbackClassDe)108 579.6 Q(viceStruct\(de)-.25 E 1.3 -.65(v, b)
-.25 H(ellProc, controlProc\)).65 E(De)118 591.6 Q(viceIntPtr de)-.25 E
(v;)-.25 E -.2(vo)118 603.6 S(id \(*bellProc\)\(\);).2 E -.2(vo)118
615.6 S(id \(*controlProc\)\(\);).2 E(The DIX entry point InitK)72 633.6
Q -.15(ey)-.25 G(boardDe).15 E
(viceStruct calls this routine for the core X k)-.25 E -.15(ey)-.1 G 2.5
(board. It).15 F(must be called)2.5 E -.15(ex)72 645.6 S(plicitly for e)
.15 E(xtension de)-.15 E(vices that ha)-.25 E .3 -.15(ve t)-.2 H
(he same feedbacks as a k).15 E -.15(ey)-.1 G 2.5(board. Some).15 F
(feedbacks, such as)2.5 E(LEDs and bell, can be supported either with a\
 KbdFeedbackClass or with BellFeedbackClass and LedFeed-)72 657.6 Q
(backClass feedbacks.)72 669.6 Q F1 2.5(2.4.7.2. InitPtrF)72 693.6 R
(eedbackClassDe)-.25 E(viceStruct)-.15 E F0(This function is pro)72
709.2 Q(vided to allocate and initialize a PtrFeedbackClassRec, and sho\
uld be called for e)-.15 E(xten-)-.15 E(sion de)72 721.2 Q
(vices that allo)-.25 E 2.5(wt)-.25 G
(he setting of acceleration and threshold.)-2.5 E
(It is passed a pointer to the de)5 E(vice, and a)-.25 E F1(9)285.5 768
Q EP
%%Page: 10 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(pointer to the de)72 84 Q(vice control procedure.)-.25 E
(It returns F)5 E(ALSE if the allocation f)-.74 E
(ails, and has the follo)-.1 E(wing)-.25 E(parameters:)72 96 Q(Bool)108
114 Q(InitPtrFeedbackClassDe)108 126 Q(viceStruct\(de)-.25 E 1.3 -.65
(v, c)-.25 H(ontrolProc\)).65 E(De)118 138 Q(viceIntPtr de)-.25 E(v;)
-.25 E -.2(vo)118 150 S(id \(*controlProc\)\(\);).2 E
(The DIX entry point InitPointerDe)72 171.6 Q
(viceStruct calls this routine for the core X pointer)-.25 E 5(.I)-.55 G
2.5(tm)-5 G(ust be called)-2.5 E -.15(ex)72 183.6 S(plicitly for e).15 E
(xtension de)-.15 E
(vices that support the setting of acceleration and threshold.)-.25 E F1
2.5(2.4.7.3. InitLedF)72 207.6 R(eedbackClassDe)-.25 E(viceStruct)-.15 E
F0(This function is pro)72 223.2 Q(vided to allocate and initialize a L\
edFeedbackClassRec, and should be called for e)-.15 E(xten-)-.15 E
(sion de)72 235.2 Q(vices that ha)-.25 E .3 -.15(ve L)-.2 H 2.5(EDs. It)
.15 F(is passed a pointer to the de)2.5 E(vice, and a pointer to the de)
-.25 E(vice control proce-)-.25 E 2.5(dure. It)72 247.2 R(returns F)2.5
E(ALSE if the allocation f)-.74 E(ails, and has the follo)-.1 E
(wing parameters:)-.25 E(Bool)108 265.2 Q(InitLedFeedbackClassDe)108
277.2 Q(viceStruct\(de)-.25 E 1.3 -.65(v, c)-.25 H(ontrolProc\)).65 E
(De)118 289.2 Q(viceIntPtr de)-.25 E(v;)-.25 E -.2(vo)118 301.2 S
(id \(*controlProc\)\(\);).2 E
(Up to 32 LEDs per feedback can be supported, and a de)72 322.8 Q
(vice may ha)-.25 E .3 -.15(ve m)-.2 H
(ultiple feedbacks of the same type.).15 E F1 2.5(2.4.7.4. InitBellF)72
346.8 R(eedbackClassDe)-.25 E(viceStruct)-.15 E F0(This function is pro)
72 362.4 Q(vided to allocate and initialize a BellFeedbackClassRec, and\
 should be called for e)-.15 E(xten-)-.15 E(sion de)72 374.4 Q
(vices that ha)-.25 E .3 -.15(ve a b)-.2 H 2.5(ell. It).15 F
(is passed a pointer to the de)2.5 E(vice, and a pointer to the de)-.25
E(vice control proce-)-.25 E 2.5(dure. It)72 386.4 R(returns F)2.5 E
(ALSE if the allocation f)-.74 E(ails, and has the follo)-.1 E
(wing parameters:)-.25 E(Bool)108 404.4 Q(InitBellFeedbackClassDe)108
416.4 Q(viceStruct\(de)-.25 E 1.3 -.65(v, b)-.25 H
(ellProc, controlProc\)).65 E(De)118 428.4 Q(viceIntPtr de)-.25 E(v;)
-.25 E -.2(vo)118 440.4 S(id \(*bellProc\)\(\);).2 E -.2(vo)118 452.4 S
(id \(*controlProc\)\(\);).2 E F1 2.5(2.4.7.5. InitStringF)72 482.4 R
(eedbackClassDe)-.25 E(viceStruct)-.15 E F0(This function is pro)72 498
Q(vided to allocate and initialize a StringFeedbackClassRec, and should\
 be called for)-.15 E -.15(ex)72 510 S(tension de).15 E(vices that ha)
-.25 E .3 -.15(ve a d)-.2 H
(isplay upon which a string can be displayed.).15 E
(It is passed a pointer to the)5 E(de)72 522 Q
(vice, and a pointer to the de)-.25 E(vice control procedure.)-.25 E
(It returns F)5 E(ALSE if the allocation f)-.74 E(ails, and has the)-.1
E(follo)72 534 Q(wing parameters:)-.25 E(Bool)108 552 Q
(InitStringFeedbackClassDe)108 564 Q(viceStruct\(de)-.25 E 1.3 -.65
(v, c)-.25 H(ontrolProc, max_symbols,).65 E
(num_symbols_supported, symbols\))133 576 Q(De)118 588 Q(viceIntPtr de)
-.25 E(v;)-.25 E -.2(vo)118 600 S(id \(*controlProc\)\(\);).2 E
(int max_symbols:)118 612 Q(int num_symbols_supported;)118 624 Q -2.15
-.25(Ke y)118 636 T(Sym *symbols;).25 E F1 2.5(2.4.7.6. InitIntegerF)72
666 R(eedbackClassDe)-.25 E(viceStruct)-.15 E F0(This function is pro)72
681.6 Q(vided to allocate and initialize an Inte)-.15 E
(gerFeedbackClassRec, and should be called for)-.15 E -.15(ex)72 693.6 S
(tension de).15 E(vices that ha)-.25 E .3 -.15(ve a d)-.2 H
(isplay upon which an inte).15 E(ger can be displayed.)-.15 E
(It is passed a pointer to the)5 E(de)72 705.6 Q
(vice, and a pointer to the de)-.25 E(vice control procedure.)-.25 E
(It returns F)5 E(ALSE if the allocation f)-.74 E(ails, and has the)-.1
E(follo)72 717.6 Q(wing parameters:)-.25 E F1(10)283 768 Q EP
%%Page: 11 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(Bool)108 90 Q(InitInte)108 102 Q(gerFeedbackClassDe)-.15 E
(viceStruct\(de)-.25 E 1.3 -.65(v, c)-.25 H(ontrolProc\)).65 E(De)118
114 Q(viceIntPtr de)-.25 E(v;)-.25 E -.2(vo)118 126 S
(id \(*controlProc\)\(\);).2 E F1 2.5(2.5. Initializing)72 156 R(The De)
2.5 E(vice Name And T)-.15 E(ype)-.74 E F0(The de)72 171.6 Q
(vice name and type can be initialized by calling AssignT)-.25 E
(ypeAndName with the follo)-.8 E(wing parame-)-.25 E(ters:)72 183.6 Q
-.2(vo)108 201.6 S(id).2 E(AssignT)108 213.6 Q(ypeAndName\(de)-.8 E 1.3
-.65(v, t)-.25 H(ype, name\)).65 E(De)118 225.6 Q(viceIntPtr de)-.25 E
(v;)-.25 E(Atom type;)118 237.6 Q(char *name;)118 249.6 Q
(This will allocate space for the de)72 271.2 Q(vice name and cop)-.25 E
2.5(yt)-.1 G(he name that w)-2.5 E(as passed.)-.1 E(The de)5 E
(vice type can be)-.25 E(obtained by calling Mak)72 283.2 Q
(eAtom with one of the names de\214ned for input de)-.1 E 2.5
(vices. Mak)-.25 F(eAtom has the fol-)-.1 E(lo)72 295.2 Q
(wing parameters:)-.25 E(Atom)108 313.2 Q(Mak)108 325.2 Q
(eAtom\(name, len, mak)-.1 E(eit\))-.1 E(char *name;)118 337.2 Q
(int len;)118 349.2 Q(Bool mak)118 361.2 Q(eit;)-.1 E(Since the atom w)
72 382.8 Q(as already made when the input e)-.1 E(xtension w)-.15 E
(as initialized, the v)-.1 E(alue of mak)-.25 E(eit should be)-.1 E -.74
(FA)72 394.8 S(LSE;).74 E F1 2.5(3. Closing)72 418.8 R(Extension De)2.5
E(vices)-.15 E F0(The DisableDe)72 434.4 Q(vice entry point is pro)-.25
E(vided by DIX to disable input de)-.15 E 2.5(vices. It)-.25 F
(calls the de)2.5 E(vice control rou-)-.25 E
(tine for the speci\214ed de)72 446.4 Q(vice with a mode v)-.25 E
(alue of DEVICE_OFF)-.25 E 5(.T)-.8 G(he de)-5 E
(vice control routine should call)-.25 E(Remo)72 458.4 Q -.15(ve)-.15 G
(EnabledDe).15 E(vice to stop the serv)-.25 E
(er from checking for input from that de)-.15 E(vice.)-.25 E(DisableDe)
72 474 Q(vice is not called by an)-.25 E 2.5(yi)-.15 G(nput e)-2.5 E
(xtension routines.)-.15 E(It can be called from the CloseInputDe)5 E
(vice)-.25 E(routine, which is called by ProcXCloseDe)72 486 Q
(vice when a client mak)-.25 E(es an XCloseDe)-.1 E(vice request.)-.25 E
(If Dis-)5 E(ableDe)72 498 Q(vice is called, it should only be called w\
hen the last client using the e)-.25 E(xtension de)-.15 E
(vice has terminated)-.25 E(or called XCloseDe)72 510 Q(vice.)-.25 E F1
2.5(4. Implementation-Dependent)72 534 R(Routines)2.5 E F0(Se)72 549.6 Q
-.15(ve)-.25 G(ral input e).15 E(xtension protocol requests ha)-.15 E .3
-.15(ve i)-.2 H 2.5(mplementation-dependent entry).15 F 2.5(points. Def)
2.5 F(ault routines)-.1 E(are de\214ned for these entry points and cont\
ained in the source \214le e)72 561.6 Q(xtensions/serv)-.15 E 2.5
(er/xinput/xstubs.c. Some)-.15 F
(implementations may be able to use the def)72 573.6 Q
(ault routines without change.)-.1 E(The follo)5 E
(wing sections describe)-.25 E(each of these routines.)72 585.6 Q F1 2.5
(4.1. AddOtherInputDe)72 609.6 R(vices)-.15 E F0(AddOtherInputDe)72
625.2 Q(vice is called from ProcXListInputDe)-.25 E
(vices as a result of an XListInputDe)-.25 E(vices protocol)-.25 E 2.5
(request. It)72 637.2 R
(may be needed by implementations that do not open e)2.5 E
(xtension input de)-.15 E(vices until requested to)-.25 E
(do so by some client.)72 649.2 Q
(These implementations may not initialize all de)5 E
(vices when the X serv)-.25 E(er starts up,)-.15 E
(because some of those de)72 661.2 Q(vices may be in use.)-.25 E
(Since the XListInputDe)5 E(vices function only lists those)-.25 E(de)72
673.2 Q(vices that ha)-.25 E .3 -.15(ve b)-.2 H
(een initialized, AddOtherInputDe).15 E(vices is called to gi)-.25 E .3
-.15(ve D)-.25 H(DX a chance to initialize an).15 E(y)-.15 E(pre)72
685.2 Q(viously una)-.25 E -.25(va)-.2 G(ilable input de).25 E(vices.)
-.25 E 2.5(As)72 700.8 S(ample AddOtherInputDe)-2.5 E
(vices routine might look lik)-.25 E 2.5(et)-.1 G(he follo)-2.5 E(wing:)
-.25 E F1(11)283 768 Q EP
%%Page: 12 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0 -.2(vo)108 90 S(id).2 E(AddOtherInputDe)108 102 Q
(vices \(\))-.25 E({)118 114 Q(De)118 126 Q(viceIntPtr de)-.25 E(v;)-.25
E(int i;)118 138 Q(for \(i=0; i<MAX_DEVICES; i++\))118 162 Q({)128 174 Q
(if \(!local_de)128 186 Q(v[i].initialized && a)-.25 E -.25(va)-.2 G
(ilable\(local_de).25 E(v[i]\)\))-.25 E({)138 198 Q(de)138 210 Q 2.5
(v=\()-.25 G(De)-2.5 E(viceIntPtr\) AddInputDe)-.25 E(vice \(local_de)
-.25 E(v[i].de)-.25 E(viceProc, TR)-.25 E(UE\);)-.4 E(de)138 222 Q
(v->public.de)-.25 E(vicePri)-.25 E -.25(va)-.25 G(te = local_de).25 E
(v[i];)-.25 E(Re)138 234 Q(gisterOtherDe)-.15 E(vice \(de)-.25 E(v\);)
-.25 E(de)138 246 Q(v->inited = \(\(*de)-.25 E(v->de)-.25 E
(viceProc\)\(de)-.25 E 1.3 -.65(v, D)-.25 H(EVICE_INIT\) == Success\);)
.65 E(})138 258 Q(})128 270 Q(})118 282 Q(The def)72 303.6 Q
(ault AddOtherInputDe)-.1 E(vices routine in xstubs.c does nothing.)-.25
E(If all input e)5 E(xtension de)-.15 E(vices are ini-)-.25 E
(tialized when the serv)72 315.6 Q
(er starts up, it can be left as a null routine.)-.15 E F1 2.5
(4.2. OpenInputDe)72 339.6 R(vice)-.15 E F0(Some X serv)72 355.2 Q
(er implementations open all input de)-.15 E(vices when the serv)-.25 E
(er is initialized and ne)-.15 E -.15(ve)-.25 G 2.5(rc).15 G(lose them.)
-2.5 E(Other implementations may open only the X pointer and k)72 367.2
Q -.15(ey)-.1 G(board de).15 E(vices during serv)-.25 E
(er initialization, and)-.15 E(open other input de)72 379.2 Q
(vices only when some client mak)-.25 E(es an XOpenDe)-.1 E
(vice request.)-.25 E(This entry point is for the)5 E
(latter type of implementation.)72 391.2 Q(If the ph)72 406.8 Q
(ysical de)-.05 E
(vice is not already open, it can be done in this routine.)-.25 E
(In this case, the serv)5 E(er must k)-.15 E(eep)-.1 E(track of the f)72
418.8 Q(act that one or more clients ha)-.1 E .3 -.15(ve t)-.2 H(he de)
.15 E(vice open, and ph)-.25 E(ysically close it when the last client)
-.05 E(that has it open mak)72 430.8 Q(es an XCloseDe)-.1 E
(vice request.)-.25 E(The def)72 446.4 Q
(ault implementation is to do nothing \(assume all input de)-.1 E
(vices are opened during X serv)-.25 E(er initializa-)-.15 E(tion and k)
72 458.4 Q(ept open\).)-.1 E F1 2.5(4.3. CloseInputDe)72 482.4 R(vice)
-.15 E F0(Some implementations may close an input de)72 498 Q
(vice when the last client using that de)-.25 E
(vice requests that it be)-.25 E(closed, or terminates.)72 510 Q
(CloseInputDe)5 E(vice is called from ProcXCloseDe)-.25 E
(vice when a client mak)-.25 E(es an)-.1 E(XCloseDe)72 522 Q
(vice protocol request.)-.25 E(The def)72 537.6 Q
(ault implementation is to do nothing \(assume all input de)-.1 E
(vices are opened during X serv)-.25 E(er initializa-)-.15 E(tion and k)
72 549.6 Q(ept open\).)-.1 E F1 2.5(4.4. SetDe)72 573.6 R(viceMode)-.15
E F0(Some implementations support input de)72 589.2 Q
(vices that can report either absolute positional data or relati)-.25 E
-.15(ve)-.25 G 2.5(motion. The)72 601.2 R(XSetDe)2.5 E
(viceMode protocol request is pro)-.25 E(vided to allo)-.15 E 2.5(wD)
-.25 G(DX to change the current mode of)-2.5 E(such a de)72 613.2 Q
(vice.)-.25 E(The def)72 628.8 Q(ault implementation is to al)-.1 E -.1
(wa)-.1 G(ys return a BadMatch error).1 E 5(.I)-.55 G 2.5(ft)-5 G
(he implementation does not support)-2.5 E(an)72 640.8 Q 2.5(yi)-.15 G
(nput de)-2.5 E(vices that are capable of reporting both relati)-.25 E
.3 -.15(ve m)-.25 H(otion and absolute position information, the).15 E
(def)72 652.8 Q(ault implementation may be left unchanged.)-.1 E F1 2.5
(4.5. SetDe)72 676.8 R(viceV)-.15 E(aluators)-.92 E F0
(Some implementations support input de)72 692.4 Q(vices that allo)-.25 E
2.5(wt)-.25 G(heir v)-2.5 E(aluators to be set to an initial v)-.25 E
2.5(alue. The)-.25 F(XSetDe)72 704.4 Q(viceV)-.25 E
(aluators protocol request is pro)-1.11 E(vided to allo)-.15 E 2.5(wD)
-.25 G(DX to set the v)-2.5 E(aluators of such a de)-.25 E(vice.)-.25 E
F1(12)283 768 Q EP
%%Page: 13 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E F0(The def)72 84 Q(ault implementation is to al)-.1 E -.1(wa)
-.1 G(ys return a BadMatch error).1 E 5(.I)-.55 G 2.5(ft)-5 G
(he implementation does not support)-2.5 E(an)72 96 Q 2.5(yi)-.15 G
(nput de)-2.5 E(vices that are allo)-.25 E 2.5(wt)-.25 G(heir v)-2.5 E
(aluators to be set, the def)-.25 E
(ault implementation may be left unchanged.)-.1 E F1 2.5(4.6. ChangeP)72
120 R(ointerDe)-.2 E(vice)-.15 E F0(The XChangePointerDe)72 135.6 Q
(vice protocol request is pro)-.25 E(vided to change which de)-.15 E
(vice is used as the X pointer)-.25 E(.)-.55 E(Some implementations may\
 maintain information speci\214c to the X pointer in the pri)72 147.6 Q
-.25(va)-.25 G(te data structure).25 E(pointed to by the De)72 159.6 Q
2.5(viceIntRec. ChangePointerDe)-.25 F(vice is called to allo)-.25 E 2.5
(ws)-.25 G(uch implementations to mo)-2.5 E -.15(ve)-.15 G
(that information to the ne)72 171.6 Q 2.5(wp)-.25 G(ointer de)-2.5 E
2.5(vice. The)-.25 F(current location of the X cursor is an e)2.5 E
(xample of the type)-.15 E(of information that might be af)72 183.6 Q
(fected.)-.25 E(The De)72 199.2 Q
(viceIntRec structure that describes the X pointer de)-.25 E
(vice does not contain a F)-.25 E 2.5(ocusRec. If)-.15 F(the de)2.5 E
(vice)-.25 E(that has been made into the ne)72 211.2 Q 2.5(wXp)-.25 G
(ointer w)-2.5 E(as pre)-.1 E(viously a de)-.25 E
(vice that could be focused, ProcXChange-)-.25 E(PointerDe)72 223.2 Q
(vice will free the F)-.25 E(ocusRec associated with that de)-.15 E
(vice.)-.25 E(If the serv)72 238.8 Q(er implementation desires to allo)
-.15 E 2.5(wc)-.25 G(lients to focus the old pointer de)-2.5 E
(vice \(which is no)-.25 E 2.5(wa)-.25 G(ccessi-)-2.5 E
(ble through the input e)72 250.8 Q(xtension\), it should call InitF)
-.15 E(ocusClassDe)-.15 E(viceStruct for the old pointer de)-.25 E
(vice.)-.25 E(The XChangePointerDe)72 266.4 Q
(vice protocol request also allo)-.25 E
(ws the client to choose which ax)-.25 E(es of the ne)-.15 E 2.5(wp)-.25
G(ointer)-2.5 E(de)72 278.4 Q(vice are used to mo)-.25 E .3 -.15(ve t)
-.15 H(he X cursor in the X- and Y).15 E 2.5(-d)-1.11 G 2.5
(irections. If)-2.5 F(the ax)2.5 E(es are dif)-.15 E
(ferent than the def)-.25 E(ault)-.1 E(ones, the serv)72 290.4 Q
(er implementation should record that f)-.15 E(act.)-.1 E(If the serv)72
306 Q(er implementation supports input de)-.15 E(vices with v)-.25 E
(aluators that are not allo)-.25 E(wed to be used as the X)-.25 E
(pointer)72 318 Q 2.5(,t)-.4 G(he)-2.5 E 2.5(ys)-.15 G
(hould be screened out by this routine and a)-2.5 E(BadDe)5 E
(vice error returned.)-.25 E(The def)72 333.6 Q
(ault implementation is to do nothing.)-.1 E F1 2.5(4.7. ChangeK)72
357.6 R(eyboardDe)-.25 E(vice)-.15 E F0(The XChangeK)72 373.2 Q -.15(ey)
-.25 G(boardDe).15 E(vice protocol request is pro)-.25 E
(vided to change which de)-.15 E(vice is used as the X)-.25 E -.1(ke)72
385.2 S 2.5(yboard. Some)-.05 F
(implementations may maintain information speci\214c to the X k)2.5 E
-.15(ey)-.1 G(board in the pri).15 E -.25(va)-.25 G(te data).25 E
(structure pointed to by the De)72 397.2 Q 2.5(viceIntRec. ChangeK)-.25
F -.15(ey)-.25 G(boardDe).15 E(vice is called to allo)-.25 E 2.5(ws)-.25
G(uch implementations)-2.5 E(to mo)72 409.2 Q .3 -.15(ve t)-.15 H
(hat information to the ne).15 E 2.5(wk)-.25 G -.15(ey)-2.6 G(board de)
.15 E(vice.)-.25 E(The X k)72 424.8 Q -.15(ey)-.1 G(board de).15 E
(vice can be focused, and the De)-.25 E
(viceIntRec that describes that de)-.25 E(vice has a F)-.25 E 2.5
(ocusRec. If)-.15 F(the de)72 436.8 Q
(vice that has been made into the ne)-.25 E 2.5(wXk)-.25 G -.15(ey)-2.6
G(board did not pre).15 E(viously ha)-.25 E .3 -.15(ve a Fo)-.2 H
(cusRec, ProcX-).15 E(ChangeK)72 448.8 Q -.15(ey)-.25 G(boardDe).15 E
(vice will allocate one for it.)-.25 E(If the implementation does not w)
72 464.4 Q(ant clients to be able to focus the old X k)-.1 E -.15(ey)-.1
G(board \(which has no).15 E 2.5(wb)-.25 G(ecome)-2.5 E -.2(av)72 476.4
S(ailable as an input e)-.05 E(xtension de)-.15 E
(vice\) it should call DeleteF)-.25 E(ocusClassDe)-.15 E
(viceStruct to free the F)-.25 E(ocusRec.)-.15 E
(If the implementation supports input de)72 492 Q(vices with k)-.25 E
-.15(ey)-.1 G 2.5(st).15 G(hat are not allo)-2.5 E
(wed to be used as the X k)-.25 E -.15(ey)-.1 G(board,).15 E(the)72 504
Q 2.5(ys)-.15 G(hould be check)-2.5 E(ed for here, and a BadDe)-.1 E
(vice error returned.)-.25 E(The def)72 519.6 Q
(ault implementation is to do nothing.)-.1 E F1 2.5(5. Input)72 543.6 R
(Extension Ev)2.5 E(ents)-.1 E F0(Ev)72 559.2 Q
(ents accessed through the input e)-.15 E
(xtension are analogous to the core input e)-.15 E -.15(ve)-.25 G
(nts, b).15 E(ut ha)-.2 E .3 -.15(ve d)-.2 H(if).15 E(ferent e)-.25 E
-.15(ve)-.25 G(nt).15 E 2.5(types. The)72 571.2 R 2.5(ya)-.15 G
(re of types)-2.5 E F1(De)2.5 E(viceK)-.15 E(eyPr)-.25 E(ess)-.18 E F0
(,)A F1(De)2.5 E(viceK)-.15 E(eyRelease)-.25 E F0(,)A F1(De)2.5 E
(viceButtonPr)-.15 E(ess)-.18 E F0(,)A F1(De)2.5 E(viceButtonRe-)-.15 E
(lease)72 583.2 Q F0(,)A F1(De)2.5 E(viceDe)-.15 E(viceMotionNotify)-.15
E F0(,)A F1(De)2.5 E(vicePr)-.15 E(oximityIn)-.18 E F0(,)A F1(De)2.5 E
(vicePr)-.15 E(oximityOut)-.18 E F0 2.5(,a)C(nd)-2.5 E F1(De)2.5 E
(viceV)-.15 E(aluator)-.92 E F0(.)A(These e)72 595.2 Q -.15(ve)-.25 G
(nt types are not constants.).15 E(Instead, the)5 E 2.5(ya)-.15 G(re e)
-2.5 E(xternal inte)-.15 E(gers de\214ned by the input e)-.15 E
(xtension.)-.15 E(Their actual v)72 607.2 Q
(alues will depend on which e)-.25 E(xtensions are supported by a serv)
-.15 E(er)-.15 E 2.5(,a)-.4 G(nd the order in which the)-2.5 E(y)-.15 E
(are initialized.)72 619.2 Q(The data structures that de\214ne these e)
72 634.8 Q -.15(ve)-.25 G(nts are de\214ned in the \214le).15 E F1
(extensions/include/XIpr)2.5 E(oto.h)-.18 E F0 5(.O)C(ther)-5 E(input e)
72 646.8 Q(xtension constants needed by DDX are de\214ned in the \214le)
-.15 E F1(extensions/include/XI.h)2.5 E F0(.)A(Some e)72 662.4 Q -.15
(ve)-.25 G(nts de\214ned by the input e).15 E
(xtension contain more information than can be contained in the 32-byte)
-.15 E(xEv)72 674.4 Q(ent data structure.)-.15 E 1.6 -.8(To s)5 H
(end this information to clients, DDX must generate tw).8 E 2.5(oo)-.1 G
2.5(rm)-2.5 G(ore 32-byte wire)-2.5 E -2.15 -.25(ev e)72 686.4 T 2.5
(nts. The).25 F(follo)2.5 E
(wing sections describe the contents of these e)-.25 E -.15(ve)-.25 G
(nts.).15 E F1(13)283 768 Q EP
%%Page: 14 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E 2.5(5.1. De)72 84 R(vice K)-.15 E(ey Ev)-.25 E(ents)-.1 E(De)72
99.6 Q(viceK)-.15 E(eyPr)-.25 E(esss)-.18 E F0 -2.15 -.25(ev e)2.5 H
(nts contain all the information that is contained in a core).25 E F1
-.25(Ke)2.5 G(yPr).25 E(ess)-.18 E F0 -2.15 -.25(ev e)2.5 H
(nt, and also the).25 E(follo)72 111.6 Q(wing additional information:)
-.25 E 11.67(-d)122 130.8 S -.25(ev)-11.67 G
(iceid - the identi\214er of the de).25 E(vice that generated the e)-.25
E -.15(ve)-.25 G(nt.).15 E 11.67(-d)122 146.4 S -.25(ev)-11.67 G
(ice_state - the state of an).25 E 2.5(ym)-.15 G(odi\214ers on the de)
-2.5 E(vice that generated the e)-.25 E -.15(ve)-.25 G(nt).15 E 11.67
(-n)122 162 S(um_v)-11.67 E(aluators - the number of v)-.25 E
(aluators reported in this e)-.25 E -.15(ve)-.25 G(nt.).15 E 11.67<2d8c>
122 177.6 S(rst_v)-11.67 E(aluator - the \214rst v)-.25 E
(aluator reported in this e)-.25 E -.15(ve)-.25 G(nt.).15 E 11.67(-v)122
193.2 S(aluator0 through v)-11.92 E(aluator5 - the v)-.25 E
(alues of the v)-.25 E(aluators.)-.25 E
(In order to pass this information to the input e)72 208.8 Q
(xtension library)-.15 E 2.5(,t)-.65 G .2 -.1(wo 3)-2.5 H(2-byte wire e)
.1 E -.15(ve)-.25 G(nts must be generated).15 E(by DDX.)72 220.8 Q
(The \214rst has an e)5 E -.15(ve)-.25 G(nt type of).15 E F1(De)2.5 E
(viceK)-.15 E(eyPr)-.25 E(ess)-.18 E F0 2.5(,a)C(nd the second has an e)
-2.5 E -.15(ve)-.25 G(nt type of).15 E F1(De)2.5 E(viceV)-.15 E(alu-)
-.92 E(ator)72 232.8 Q F0(.)A(The follo)72 248.4 Q
(wing code fragment sho)-.25 E(ws ho)-.25 E 2.5(wt)-.25 G(he tw)-2.5 E
2.5(ow)-.1 G(ire e)-2.5 E -.15(ve)-.25 G(nts could be initialized:).15 E
-.15(ex)118 270 S(tern int De).15 E(viceK)-.25 E -.15(ey)-.25 G(Press;)
.15 E(De)118 282 Q(viceIntPtr de)-.25 E(v;)-.25 E(xEv)118 294 Q
(ent xE[2];)-.15 E(CARD8 id, num_v)118 306 Q(aluators;)-.25 E
(INT16 x, y)118 318 Q 2.5(,p)-.65 G(ointerx, pointery;)-2.5 E -.35(Ti)
118 330 S(me timestamp;).35 E(de)118 342 Q(viceK)-.25 E -.15(ey)-.25 G
(ButtonPointer *x).15 E .5 -.25(ev = \()-.15 H(de).25 E(viceK)-.25 E
-.15(ey)-.25 G(ButtonPointer *\) xE;).15 E(de)118 354 Q(viceV)-.25 E
(aluator *xv;)-1.11 E -.15(xe)118 378 S(v->type = De)-.1 E(viceK)-.25 E
-.15(ey)-.25 G 37.5(Press; /*).15 F(de\214ned by input e)2.5 E
(xtension */)-.15 E -.15(xe)118 390 S(v->detail = k)-.1 E -.15(ey)-.1 G
32.5(code; /*).15 F -.1(ke)2.5 G 2.5(yp)-.05 G(ressed on this de)-2.5 E
(vice */)-.25 E -.15(xe)118 402 S(v->time = timestamp;)-.1 E
(/* same as for core e)35 E -.15(ve)-.25 G 7.5(nts */).15 F -.15(xe)118
414 S(v->rootX = pointerx;)-.1 E(/* x location of core pointer */)35 E
-.15(xe)118 426 S(v->rootY = pointery;)-.1 E
(/* y location of core pointer */)35 E
(/******************************************************************/)
118 450 Q 157.5(/* */)118 462 R(/* The follo)118 474 Q
(wing \214eld does not e)-.25 E(xist for core input e)-.15 E -.15(ve)
-.25 G 12.5(nts. */).15 F(/* It contains the de)118 486 Q
(vice id for the de)-.25 E(vice that generated the)-.25 E(*/)10 E(/* e)
118 498 Q -.15(ve)-.25 G
(nt, and also indicates whether more than one 32-byte wire).15 E(*/)7.5
E(/* e)118 510 Q -.15(ve)-.25 G(nt is being sent.).15 E(*/)107.5 E 157.5
(/* */)118 522 R
(/******************************************************************/)
118 534 Q -.15(xe)118 558 S(v->de)-.1 E(viceid = de)-.25 E
(v->id | MORE_EVENTS;)-.25 E(/* sending more than 1*/)20 E
(/******************************************************************/)
118 582 Q(/* Fields in the second 32-byte wire e)118 594 Q -.15(ve)-.25
G 55(nt: */).15 F
(/******************************************************************/)
118 606 Q(xv = \(de)118 630 Q(viceV)-.25 E(aluator *\) ++x)-1.11 E -.25
(ev)-.15 G(;).25 E(xv->type = De)118 642 Q(viceV)-.25 E 22.5
(aluator; /*)-1.11 F -2.15 -.25(ev e)2.5 H(nt type of second e).25 E
-.15(ve)-.25 G(nt */).15 E(xv->de)118 654 Q(viceid = de)-.25 E 30
(v->id; /*)-.25 F(id of this de)2.5 E 22.5(vice */)-.25 F(xv->num_v)118
666 Q(aluators = 0;)-.25 E(/* no v)35 E(aluators being sent)-.25 E(*/)10
E(xv->de)118 678 Q 2.5(vice_state =)-.25 F 32.5(0; /*)2.5 F
(will be \214lled in by DIX)2.5 E(*/)7.5 E F1(14)283 768 Q EP
%%Page: 15 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E 2.5(5.2. De)72 84 R(vice Button Ev)-.15 E(ents)-.1 E(De)72 99.6
Q(viceButton)-.15 E F0 -2.15 -.25(ev e)2.5 H
(nts contain all the information that is contained in a core b).25 E
(utton e)-.2 E -.15(ve)-.25 G(nt, and also the same).15 E
(additional information that a)72 111.6 Q F1(De)2.5 E(viceK)-.15 E(ey)
-.25 E F0 -2.15 -.25(ev e)2.5 H(nt contains.).25 E F1 2.5(5.3. De)72
135.6 R(vice Motion Ev)-.15 E(ents)-.1 E(De)72 151.2 Q(viceMotion)-.15 E
F0 -2.15 -.25(ev e)2.5 H
(nts contain all the information that is contained in a core motion e)
.25 E -.15(ve)-.25 G(nt, and also addi-).15 E(tional v)72 163.2 Q
(aluator information.)-.25 E(At least tw)5 E 2.5(ow)-.1 G(ire e)-2.5 E
-.15(ve)-.25 G(nts are required to contain this information.).15 E
(The follo)5 E(w-)-.25 E(ing code fragment sho)72 175.2 Q(ws ho)-.25 E
2.5(wt)-.25 G(he tw)-2.5 E 2.5(ow)-.1 G(ire e)-2.5 E -.15(ve)-.25 G
(nts could be initialized:).15 E -.15(ex)118 196.8 S(tern int De).15 E
(viceMotionNotify;)-.25 E(De)118 208.8 Q(viceIntPtr de)-.25 E(v;)-.25 E
(xEv)118 220.8 Q(ent xE[2];)-.15 E(CARD8 id, num_v)118 232.8 Q
(aluators;)-.25 E(INT16 x, y)118 244.8 Q 2.5(,p)-.65 G
(ointerx, pointery;)-2.5 E -.35(Ti)118 256.8 S(me timestamp;).35 E(de)
118 268.8 Q(viceK)-.25 E -.15(ey)-.25 G(ButtonPointer *x).15 E .5 -.25
(ev = \()-.15 H(de).25 E(viceK)-.25 E -.15(ey)-.25 G
(ButtonPointer *\) xE;).15 E(de)118 280.8 Q(viceV)-.25 E(aluator *xv;)
-1.11 E -.15(xe)118 304.8 S(v->type = De)-.1 E 10(viceMotionNotify; /*)
-.25 F(de\214ned by input e)2.5 E(xtension */)-.15 E -.15(xe)118 316.8 S
(v->detail = k)-.1 E -.15(ey)-.1 G 32.5(code; /*).15 F -.1(ke)2.5 G 2.5
(yp)-.05 G(ressed on this de)-2.5 E(vice */)-.25 E -.15(xe)118 328.8 S
(v->time = timestamp;)-.1 E(/* same as for core e)35 E -.15(ve)-.25 G
7.5(nts */).15 F -.15(xe)118 340.8 S(v->rootX = pointerx;)-.1 E
(/* x location of core pointer */)35 E -.15(xe)118 352.8 S
(v->rootY = pointery;)-.1 E(/* y location of core pointer */)35 E
(/******************************************************************/)
118 376.8 Q 157.5(/* */)118 388.8 R(/* The follo)118 400.8 Q
(wing \214eld does not e)-.25 E(xist for core input e)-.15 E -.15(ve)
-.25 G 12.5(nts. */).15 F(/* It contains the de)118 412.8 Q
(vice id for the de)-.25 E(vice that generated the)-.25 E(*/)10 E(/* e)
118 424.8 Q -.15(ve)-.25 G
(nt, and also indicates whether more than one 32-byte wire).15 E(*/)7.5
E(/* e)118 436.8 Q -.15(ve)-.25 G(nt is being sent.).15 E(*/)107.5 E
157.5(/* */)118 448.8 R
(/******************************************************************/)
118 460.8 Q -.15(xe)118 484.8 S(v->de)-.1 E(viceid = de)-.25 E
(v->id | MORE_EVENTS;)-.25 E(/* sending more than 1*/)20 E
(/******************************************************************/)
118 508.8 Q(/* Fields in the second 32-byte wire e)118 520.8 Q -.15(ve)
-.25 G 55(nt: */).15 F
(/******************************************************************/)
118 532.8 Q(xv = \(de)118 556.8 Q(viceV)-.25 E(aluator *\) ++x)-1.11 E
-.25(ev)-.15 G(;).25 E(xv->type = De)118 568.8 Q(viceV)-.25 E 22.5
(aluator; /*)-1.11 F -2.15 -.25(ev e)2.5 H(nt type of second e).25 E
-.15(ve)-.25 G(nt */).15 E(xv->de)118 580.8 Q(viceid = de)-.25 E 30
(v->id; /*)-.25 F(id of this de)2.5 E 22.5(vice */)-.25 F(xv->num_v)118
592.8 Q(aluators = 2;)-.25 E(/* 2 v)35 E(aluators being sent)-.25 E(*/)
12.5 E(xv->\214rst_v)118 604.8 Q(aluator = 0;)-.25 E(/* \214rst v)32.5 E
(aluator being sent)-.25 E(*/)5 E(xv->de)118 616.8 Q 2.5(vice_state =)
-.25 F 32.5(0; /*)2.5 F(will be \214lled in by DIX)2.5 E(*/)7.5 E(xv->v)
118 628.8 Q(aluator0 = x;)-.25 E(/* \214rst axis of this de)45 E 2.5
(vice */)-.25 F(xv->v)118 640.8 Q(aluator1 = y;)-.25 E
(/* second axis of this de)45 E(vice */)-.25 E(Up to six ax)72 662.4 Q
(es can be reported in the de)-.15 E(viceV)-.25 E(aluator e)-1.11 E -.15
(ve)-.25 G 2.5(nt. If).15 F(the de)2.5 E
(vice is reporting more than 6 ax)-.25 E(es,)-.15 E
(additional pairs of De)72 674.4 Q(viceMotionNotify and De)-.25 E(viceV)
-.25 E(aluator e)-1.11 E -.15(ve)-.25 G(nts should be sent,).15 E
(with the \214rst_v)5 E(aluator)-.25 E(\214eld set correctly)72 686.4 Q
(.)-.65 E F1(15)283 768 Q EP
%%Page: 16 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E 2.5(5.4. De)72 84 R(vice Pr)-.15 E(oximity Ev)-.18 E(ents)-.1 E
F0(Some input de)72 99.6 Q(vices that report absolute positional inform\
ation, such as graphics tablets and touchscreens,)-.25 E
(may report proximity e)72 111.6 Q -.15(ve)-.25 G(nts.).15 E F1(Pr)5 E
(oximityIn)-.18 E F0 -2.15 -.25(ev e)2.5 H
(nts are generated when a pointing de).25 E(vice lik)-.25 E 2.5(eas)-.1
G(tylus, or in)-2.5 E(the case of a touchscreen, the user')72 123.6 Q
2.5<738c>-.55 G(nger)-2.5 E 2.5(,c)-.4 G
(omes into close proximity with the surf)-2.5 E(ace of the input de)-.1
E(vice.)-.25 E F1(Pr)72 135.6 Q(oximityOut)-.18 E F0 -2.15 -.25(ev e)2.5
H(nts are generated when the stylus or \214nger lea).25 E -.15(ve)-.2 G
2.5(st).15 G(he proximity of the input de)-2.5 E(vices sur)-.25 E(-)-.2
E -.1(fa)72 147.6 S(ce.).1 E F1(Pr)72 163.2 Q(oximity)-.18 E F0 -2.15
-.25(ev e)2.5 H(nts contain almost the same information as b).25 E
(utton e)-.2 E -.15(ve)-.25 G 2.5(nts. The).15 F -2.15 -.25(ev e)2.5 H
(nt type is).25 E F1(Pr)2.5 E(oximityIn)-.18 E F0(or)2.5 E F1(Pr)72
175.2 Q(oximityOut)-.18 E F0 2.5(,a)C
(nd there is no detail information.)-2.5 E F1(16)283 768 Q EP
%%Page: 17 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 10/Times-Bold@0 SF 2.5(XI)
72 52 S(nput Extension P)-2.5 E(orting Document)-.2 E(X11, Release 6.4)
203.32 E(17)283 768 Q F0 531.38(-- --)0 795 R EP
%%Trailer
end
%%EOF
