%!PS-Adobe-3.0
%%Creator: groff version 1.11
%%CreationDate: Mon Dec 15 09:32:34 1997
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Courier
%%DocumentSuppliedResources: procset grops 1.11 0
%%Pages: 79
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.11 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier@0 ENC0/Courier RE/Times-Italic@0 ENC0/Times-Italic RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 20/Times-Bold@0 SF 5(XI)
142.59 216 S(nput De)-5 E(vice Extension Library)-.3 E/F2 12
/Times-Bold@0 SF 3(XC)225.996 252 S(onsortium Standard)-3 E 3(XV)223.944
276 S(ersion 11, Release 6.4)-4.2 E/F3 15/Times-Bold@0 SF(Mark P)171.427
480 Q 26.25(atrick Ardent)-.15 F(Computer)3.75 E(Geor)175.042 504 Q
(ge Sachs)-.15 E(Hewlett-P)30 E(ackard)-.15 E EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Roman@0 SF(Cop)72
219.6 Q(yright \251 1989, 1990, 1991 by He)-.11 E(wlett-P)-.275 E
(ackard Compan)-.165 E 1.43 -.715(y, A)-.165 H(rdent Computer).715 E(.)
-.605 E(Permission to use, cop)72 235.2 Q 1.43 -.715(y, m)-.11 H(odify)
.715 E 2.75(,a)-.715 G(nd distrib)-2.75 E(ute this documentation for an)
-.22 E 2.75(yp)-.165 G(urpose and without)-2.75 E
(fee is hereby granted, pro)72 247.2 Q(vided that the abo)-.165 E .33
-.165(ve c)-.165 H(op).165 E
(yright notice and this permission notice appear)-.11 E(in all copies.)
72 259.2 Q(Ardent, and He)5.5 E(wlett-P)-.275 E(ackard mak)-.165 E 2.75
(en)-.11 G 2.75(or)-2.75 G(epresentations about the suitability for an)
-2.75 E(y)-.165 E(purpose of the information in this document.)72 271.2
Q(It is pro)5.5 E(vided \222\222as is')-.165 E 2.75('w)-.814 G(ithout e)
-2.75 E(xpress or implied)-.165 E -.11(wa)72 283.2 S(rranty).11 E(.)
-.715 E(Cop)72 355.2 Q(yright \(c\) 1989, 1990, 1991, 1992)-.11 E 2.75
(XC)5.5 G(onsortium)-2.75 E(Permission is hereby granted, free of char)
72 370.8 Q(ge, to an)-.198 E 2.75(yp)-.165 G(erson obtaining a cop)-2.75
E 2.75(yo)-.11 G 2.75(ft)-2.75 G(his softw)-2.75 E(are and)-.11 E
(associated documentation \214les \(the `)72 382.8 Q(`Softw)-.814 E
(are')-.11 E('\), to deal in the Softw)-.814 E(are without restriction,)
-.11 E(including without limitation the rights to use, cop)72 394.8 Q
1.43 -.715(y, m)-.11 H(odify).715 E 2.75(,m)-.715 G(er)-2.75 E
(ge, publish, distrib)-.198 E(ute, sublicense,)-.22 E
(and/or sell copies of the Softw)72 406.8 Q
(are, and to permit persons to whom the Softw)-.11 E
(are is furnished to do)-.11 E(so, subject to the follo)72 418.8 Q
(wing conditions:)-.275 E(The abo)72 434.4 Q .33 -.165(ve c)-.165 H(op)
.165 E(yright notice and this permission notice shall be included in al\
l copies or substan-)-.11 E(tial portions of the Softw)72 446.4 Q(are.)
-.11 E(THE SOFTW)72 462 Q(ARE IS PR)-1.32 E -.55(OV)-.44 G(IDED `).55 E
-.88(`A)-.814 G 2.75(SI).88 G(S')-2.75 E(', WITHOUT W)-.814 E
(ARRANTY OF ANY KIND,)-1.32 E(EXPRESS OR IMPLIED, INCLUDING B)72 474 Q
(UT NO)-.11 E 2.75(TL)-.44 G(IMITED T)-2.75 E 2.75(OT)-.198 G(HE W)-2.75
E(ARRANTIES OF)-1.32 E(MERCHANT)72 486 Q(ABILITY)-1.023 E 2.75(,F)-1.419
G(ITNESS FOR A P)-2.75 E(AR)-1.012 E(TICULAR PURPOSE AND NONINFRINGE-)
-.66 E(MENT)72 498 Q 5.5(.I)-.814 G 2.75(NN)-5.5 G 2.75(OE)-2.75 G
(VENT SHALL THE X CONSOR)-2.75 E(TIUM BE LIABLE FOR ANY CLAIM,)-.66 E
-.44(DA)72 510 S(MA).44 E(GES OR O)-.44 E(THER LIABILITY)-.44 E 2.75(,W)
-1.419 G(HETHER IN AN A)-2.75 E(CTION OF CONTRA)-.44 E(CT)-.44 E 2.75
(,T)-.814 G(OR)-2.948 E 2.75(TO)-.66 G(R)-2.75 E -.44(OT)72 522 S(HER)
.44 E(WISE, ARISING FR)-.605 E
(OM, OUT OF OR IN CONNECTION WITH THE SOFTW)-.44 E(ARE OR)-1.32 E
(THE USE OR O)72 534 Q(THER DEALINGS IN THE SOFTW)-.44 E(ARE.)-1.32 E(E\
xcept as contained in this notice, the name of the X Consortium shall n\
ot be used in adv)72 549.6 Q(ertising)-.165 E
(or otherwise to promote the sale, use or other dealings in this Softw)
72 561.6 Q(are without prior written)-.11 E
(authorization from the X Consortium.)72 573.6 Q/F2 11/Times-Italic@0 SF
2.75(XW)72 621.6 S(indow System)-3.355 E F1
(is a trademark of X Consortium, Inc.)2.75 E EP
%%Page: 1 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(1. Input)72 84 R(Extension Ov)2.75 E(er)-.11 E(view)-.11 E/F2 11
/Times-Roman@0 SF(This document describes an e)72 99.6 Q
(xtension to the X11 serv)-.165 E(er)-.165 E 5.5(.T)-.605 G
(he purpose of this e)-5.5 E(xtension is to sup-)-.165 E
(port the use of additional input de)72 111.6 Q(vices be)-.275 E
(yond the pointer and k)-.165 E -.165(ey)-.11 G(board de).165 E
(vices de\214ned by the)-.275 E(core X protocol.)72 123.6 Q
(This \214rst section gi)5.5 E -.165(ve)-.275 G 2.75(sa).165 G 2.75(no)
-2.75 G -.165(ve)-2.915 G(rvie).165 E 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he input e)-2.75 E 2.75(xtension. The)-.165 F(follo)2.75 E(wing sec-)
-.275 E(tions correspond to chapters 9, 10, and 11, `)72 135.6 Q(`W)
-.814 E(indo)-.44 E 2.75(wa)-.275 G(nd Session Manager Functions')-2.75
E(',)-.814 E -.814(``)72 147.6 S(Ev).814 E(ents')-.165 E(', and `)-.814
E(`Ev)-.814 E(ent Handling Functions')-.165 E 2.75('o)-.814 G 2.75(ft)
-2.75 G(he `)-2.75 E(`Xlib - C Language Interf)-.814 E(ace')-.11 E 2.75
('m)-.814 G(anual and)-2.75 E(describe ho)72 159.6 Q 2.75(wt)-.275 G
2.75(ou)-2.75 G(se the input de)-2.75 E(vice e)-.275 E(xtension.)-.165 E
F1 2.75(1.1. Design)72 183.6 R -.275(Ap)2.75 G(pr).275 E(oach)-.198 E F2
(The design approach of the e)72 199.2 Q
(xtension is to de\214ne functions and e)-.165 E -.165(ve)-.275 G
(nts analogous to the core func-).165 E(tions and e)72 211.2 Q -.165(ve)
-.275 G 2.75(nts. This).165 F(allo)2.75 E(ws e)-.275 E
(xtension input de)-.165 E(vices and e)-.275 E -.165(ve)-.275 G
(nts to be indi).165 E(vidually distinguish-)-.275 E
(able from each other and from the core input de)72 223.2 Q(vices and e)
-.275 E -.165(ve)-.275 G 2.75(nts. These).165 F(functions and e)2.75 E
-.165(ve)-.275 G(nts).165 E(mak)72 235.2 Q 2.75(eu)-.11 G(se of a de)
-2.75 E(vice identi\214er and support the reporting of)-.275 E/F3 11
/Times-Italic@0 SF(n)2.75 E F2(-dimensional motion data as well as).916
E(other data that is not currently reportable via the core input e)72
247.2 Q -.165(ve)-.275 G(nts.).165 E F1 2.75(1.2. Cor)72 271.2 R 2.75
(eI)-.198 G(nput De)-2.75 E(vices)-.165 E F2(The X serv)72 286.8 Q
(er core protocol supports tw)-.165 E 2.75(oi)-.11 G(nput de)-2.75 E
2.75(vices: a)-.275 F(pointer and a k)2.75 E -.165(ey)-.11 G 2.75
(board. The).165 F(pointer)2.75 E(de)72 298.8 Q(vice has tw)-.275 E 2.75
(om)-.11 G(ajor functions.)-2.75 E
(First, it may be used to generate motion information that client)5.5 E
(programs can detect. Second, it may also be used to indicate the curre\
nt location and focus of the)72 310.8 Q 2.75(Xk)72 322.8 S -.165(ey)
-2.86 G 2.75(board. T).165 F 2.75(oa)-.88 G(ccomplish this, the serv)
-2.75 E(er echoes a cursor at the current position of the X)-.165 E
(pointer)72 334.8 Q 5.5(.U)-.605 G(nless the X k)-5.5 E -.165(ey)-.11 G
(board has been e).165 E(xplicitly focused, this cursor also sho)-.165 E
(ws the current)-.275 E(location and focus of the X k)72 346.8 Q -.165
(ey)-.11 G(board.).165 E(The X k)72 362.4 Q -.165(ey)-.11 G
(board is used to generate input that client programs can detect.).165 E
(The X k)72 378 Q -.165(ey)-.11 G
(board and X pointer are referred to in this document as the).165 E F3
(cor)2.75 E 2.75(ed)-.407 G -.165(ev)-2.75 G(ices).165 E F2 2.75(,a)C
(nd the input)-2.75 E -2.365 -.275(ev e)72 390 T(nts the).275 E 2.75(yg)
-.165 G(enerate \()-2.75 E F1 -.275(Ke).916 G(yPr).275 E(ess)-.198 E F2
(,).916 E F1 -.275(Ke)3.666 G(yRelease).275 E F2(,).916 E F1(ButtonPr)
3.666 E(ess)-.198 E F2(,).916 E F1(ButtonRelease)3.666 E F2 2.75(,a).916
G(nd)-2.75 E F1(MotionNotify)72.916 402 Q F2 2.75(\)a).916 G(re kno)
-2.75 E(wn as the)-.275 E F3(cor)2.75 E 2.75(ei)-.407 G(nput e)-2.75 E
(vents)-.165 E F2 5.5(.A)C(ll other input de)-5.5 E
(vices are referred to as)-.275 E F3 -.22(ex)72 414 S(tension input de)
.22 E(vices)-.165 E F2 2.75(,a)C(nd the input e)-2.75 E -.165(ve)-.275 G
(nts the).165 E 2.75(yg)-.165 G(enerate are referred to as)-2.75 E F3
-.22(ex)2.75 G(tension input).22 E -.165(ev)72 426 S(ents).165 E F2(.)
.916 E(Note)277.308 448 Q(This input e)99.5 465 Q
(xtension does not change the beha)-.165 E
(vior or functionality of the core input)-.22 E(de)99.5 477 Q
(vices, core e)-.275 E -.165(ve)-.275 G
(nts, or core protocol requests, with the e).165 E
(xception of the core grab)-.165 E 2.75(requests. These)99.5 489 R
(requests may af)2.75 E(fect the synchronization of e)-.275 E -.165(ve)
-.275 G(nts from e).165 E(xtension)-.165 E(de)99.5 501 Q 2.75
(vices. See)-.275 F(the e)2.75 E(xplanation in the section titled `)
-.165 E(`Ev)-.814 E(ent Synchronization and Core)-.165 E(Grabs.)99.5 513
Q -.814('')-.77 G(Selection of the ph)72 538.6 Q(ysical de)-.055 E
(vices to be initially used by the serv)-.275 E(er as the core de)-.165
E(vices is left imple-)-.275 E(mentation dependent.)72 550.6 Q
(Functions are de\214ned that allo)5.5 E 2.75(wc)-.275 G
(lient programs to change which ph)-2.75 E(ysical)-.055 E(de)72 562.6 Q
(vices are used as the core de)-.275 E(vices.)-.275 E F1 2.75
(1.3. Extension)72 586.6 R(Input De)2.75 E(vices)-.165 E F2(The input e)
72 602.2 Q(xtension controls access to input de)-.165 E
(vices other than the X k)-.275 E -.165(ey)-.11 G(board and X pointer)
.165 E 5.5(.I)-.605 G(t)-5.5 E(allo)72 614.2 Q
(ws client programs to select input from these de)-.275 E
(vices independently from each other and inde-)-.275 E
(pendently from the core de)72 626.2 Q 2.75(vices. Input)-.275 F -2.365
-.275(ev e)2.75 H(nts from these de).275 E(vices are of e)-.275 E
(xtension types)-.165 E(\()72 638.2 Q F1(De).916 E(viceK)-.165 E(eyPr)
-.275 E(ess)-.198 E F2(,).916 E F1(De)3.666 E(viceK)-.165 E(eyRelease)
-.275 E F2(,).916 E F1(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F2(,)
.916 E F1(De)3.666 E(viceButtonRelease)-.165 E F2(,).916 E F1(De)72.916
650.2 Q(viceMotionNotify)-.165 E F2 2.75(,a).916 G
(nd so on\) and contain a de)-2.75 E(vice identi\214er so that e)-.275 E
-.165(ve)-.275 G(nts of the same type).165 E(coming from dif)72 662.2 Q
(ferent input de)-.275 E(vices can be distinguished.)-.275 E
(Extension input e)72 677.8 Q -.165(ve)-.275 G
(nts are not limited in size by the size of the serv).165 E
(er 32-byte wire e)-.165 E -.165(ve)-.275 G 2.75(nts. Exten-).165 F
(sion input e)72 689.8 Q -.165(ve)-.275 G
(nts may be constructed by the serv).165 E(er sending as man)-.165 E
2.75(yw)-.165 G(ire-sized e)-2.75 E -.165(ve)-.275 G(nts as neces-).165
E(sary to return the information required for that e)72 701.8 Q -.165
(ve)-.275 G 2.75(nt. The).165 F(library e)2.75 E -.165(ve)-.275 G
(nt reformatting routines are).165 E
(responsible for combining these into one or more client XEv)72 713.8 Q
(ents.)-.165 E F1(1)285.25 768 Q EP
%%Page: 2 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(An)72 84 Q 2.75(yi)-.165 G(nput de)-2.75 E
(vice that generates k)-.275 E -.165(ey)-.11 G 2.75(,b)-.55 G
(utton, or motion data may be used as an e)-2.97 E(xtension input)-.165
E(de)72 96 Q 2.75(vice. Extension)-.275 F(input de)2.75 E(vices may ha)
-.275 E .33 -.165(ve z)-.22 H(ero or more k).165 E -.165(ey)-.11 G
(s, zero or more b).165 E(uttons, and may)-.22 E(report zero or more ax)
72 108 Q(es of motion.)-.165 E(Motion may be reported as relati)5.5 E
.33 -.165(ve m)-.275 H -.165(ove).165 G(ments from a pre).165 E(vi-)
-.275 E(ous position or as an absolute position.)72 120 Q(All v)5.5 E
(aluators reporting motion information for a gi)-.275 E -.165(ve)-.275 G
(n).165 E -.165(ex)72 132 S(tension input de).165 E(vice must report th\
e same kind of motion information \(absolute or relati)-.275 E -.165(ve)
-.275 G(\).).165 E(This e)72 147.6 Q
(xtension is designed to accommodate ne)-.165 E 2.75(wt)-.275 G
(ypes of input de)-2.75 E(vices that may be added in the)-.275 E 2.75
(future. The)72 159.6 R
(protocol requests that refer to speci\214c characteristics of input de)
2.75 E(vices or)-.275 E -.055(ga)-.198 G(nize that).055 E
(information by)72 171.6 Q/F3 11/Times-Italic@0 SF(input de)2.75 E
(vice classes)-.165 E F2 5.5(.S)C(erv)-5.5 E(er implementors may add ne)
-.165 E 2.75(wc)-.275 G(lasses of input de)-2.75 E(vices)-.275 E
(without changing the protocol requests.)72 183.6 Q(All e)72 199.2 Q
(xtension input de)-.165 E(vices are treated lik)-.275 E 2.75(et)-.11 G
(he core X k)-2.75 E -.165(ey)-.11 G
(board in determining their location and).165 E 2.75(focus. The)72 211.2
R(serv)2.75 E(er does not track the location of these de)-.165 E
(vices on an indi)-.275 E(vidual basis and, there-)-.275 E
(fore, does not echo a cursor to indicate their current location.)72
223.2 Q(Instead, their location is determined)5.5 E
(by the location of the core X pointer)72 235.2 Q 5.5(.L)-.605 G(ik)-5.5
E 2.75(et)-.11 G(he core X k)-2.75 E -.165(ey)-.11 G
(board, some may be e).165 E(xplicitly focused.)-.165 E(If the)72 247.2
Q 2.75(ya)-.165 G(re not e)-2.75 E(xplicitly focused,)-.165 E
(their focus is determined by the location of the core X pointer)5.5 E
(.)-.605 E F1 2.75(1.3.1. Input)72 271.2 R(De)2.75 E(vice Classes)-.165
E F2(Some of the input e)72 286.8 Q(xtension requests di)-.165 E
(vide input de)-.275 E(vices into classes based on their functionality)
-.275 E(.)-.715 E(This is intended to allo)72 298.8 Q 2.75(wn)-.275 G
.55 -.275(ew c)-2.75 H(lasses of input de).275 E
(vices to be de\214ned at a later time without chang-)-.275 E
(ing the semantics of these functions.)72 310.8 Q(The follo)5.5 E
(wing input de)-.275 E(vice classes are currently de\214ned:)-.275 E F0
(KEY)72 326.4 Q F2(The de)51.45 E(vice reports k)-.275 E .33 -.165(ey e)
-.11 H -.165(ve)-.11 G(nts.).165 E F0 -.1(BU)72 342 S(TT).1 E(ON)-.18 E
F2(The de)31.73 E(vice reports b)-.275 E(utton e)-.22 E -.165(ve)-.275 G
(nts.).165 E F0 -1.35(VA)72 357.6 S(LU)1.35 E -.46 -1.11(AT O)-.4 H(R)
1.11 E F2(The de)20.05 E(vice reports v)-.275 E
(aluator data in motion e)-.275 E -.165(ve)-.275 G(nts.).165 E F0(PR)72
373.2 Q -.4(OX)-.4 G(IMITY).4 E F2(The de)17.25 E
(vice reports proximity e)-.275 E -.165(ve)-.275 G(nts.).165 E F0(FOCUS)
72 388.8 Q F2(The de)39.77 E(vice can be focused.)-.275 E F0(FEEDB)72
404.4 Q -.4(AC)-.35 G(K).4 E F2(The de)19.97 E(vice supports feedbacks.)
-.275 E(Additional classes may be added in the future.)72 420 Q
(Functions that support multiple input classes, such)5.5 E(as the)72 432
Q F1(XListInputDe)3.666 E(vices)-.165 E F2(function that lists all a)
3.666 E -.275(va)-.22 G(ilable input de).275 E(vices, or)-.275 E -.055
(ga)-.198 G(nize the data the).055 E(y)-.165 E(return by input class.)72
444 Q(Client programs that use these functions should not access data u\
nless it)5.5 E
(matches a class de\214ned at the time those clients were compiled.)72
456 Q(In this w)5.5 E(ay)-.11 E 2.75(,n)-.715 G .55 -.275(ew c)-2.75 H
(lasses can be).275 E(added without forcing e)72 468 Q
(xisting clients that use these functions to be recompiled.)-.165 E F1
2.75(1.4. Using)72 492 R(Extension Input De)2.75 E(vices)-.165 E F2 2.75
(Ac)72 507.6 S(lient that wishes to access an input de)-2.75 E
(vice does so through the library functions de\214ned in the)-.275 E
(follo)72 519.6 Q(wing sections.)-.275 E 2.75(At)5.5 G
(ypical sequence of requests that a client w)-2.75 E(ould mak)-.11 E
2.75(ei)-.11 G 2.75(sa)-2.75 G 2.75(sf)-2.75 G(ollo)-2.75 E(ws:)-.275 E
<83>72 535.2 Q F1(XListInputDe)24.566 E(vices)-.165 E F2 2.75<ad6c>3.666
G(ists all of the a)-2.75 E -.275(va)-.22 G(ilable input de).275 E 2.75
(vices. From)-.275 F(the information)2.75 E
(returned by this request, determine whether the desired input de)99.5
547.2 Q(vice is attached to the)-.275 E(serv)99.5 559.2 Q(er)-.165 E 5.5
(.F)-.605 G(or a description of the)-5.665 E F1(XListInputDe)3.666 E
(vices)-.165 E F2(request, see the section entitled `)3.666 E(`List-)
-.814 E(ing A)99.5 571.2 Q -.275(va)-.814 G(ilable De).275 E(vices.)
-.275 E -.814('')-.77 G<83>72 586.8 Q F1(XOpenDe)24.566 E(vice)-.165 E
F2 2.75<ad72>3.666 G(equests that the serv)-2.75 E(er open the de)-.165
E(vice for access by this client.)-.275 E(This)5.5 E(request returns an)
99.5 598.8 Q F1(XDe)3.666 E(vice)-.165 E F2
(structure that is used by most other input e)3.666 E
(xtension requests to)-.165 E(identify the speci\214ed de)99.5 610.8 Q
2.75(vice. F)-.275 F(or a description of the)-.165 E F1(XOpenDe)3.666 E
(vice)-.165 E F2(request, see the sec-)3.666 E(tion entitled `)99.5
622.8 Q(`Enabling and Disabling Extension De)-.814 E(vices.)-.275 E
-.814('')-.77 G 23.65<8344>72 638.4 S(etermine the e)-23.65 E -.165(ve)
-.275 G(nt types and e).165 E -.165(ve)-.275 G
(nt classes needed to select the desired input e).165 E(xtension)-.165 E
-2.365 -.275(ev e)99.5 650.4 T(nts, and identify them when the).275 E
2.75(ya)-.165 G(re recei)-2.75 E -.165(ve)-.275 G 2.75(d. This).165 F
(is done via macros whose name)2.75 E(corresponds to the desired e)99.5
662.4 Q -.165(ve)-.275 G(nt, for e).165 E(xample,)-.165 E F1(De)3.666 E
(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E F2 5.5(.F).916 G
(or a description of these)-5.665 E(macros, see the section entitled `)
99.5 674.4 Q(`Selecting Extension De)-.814 E(vice Ev)-.275 E(ents.)-.165
E -.814('')-.77 G<83>72 690 Q F1(XSelectExtensionEv)24.566 E(ent)-.11 E
F2 2.75<ad73>3.666 G(elects the desired e)-2.75 E -.165(ve)-.275 G
(nts from the serv).165 E(er)-.165 E 5.5(.F)-.605 G(or a description of)
-5.665 E(the)99.5 702 Q F1(XSelextExtensionEv)3.666 E(ent)-.11 E F2
(request, see the section entitled `)3.666 E(`Selecting Extension De)
-.814 E(vice)-.275 E(Ev)99.5 714 Q(ents.)-.165 E -.814('')-.77 G F1(2)
285.25 768 Q EP
%%Page: 3 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF<83>72 84 Q F1(XNextEv)24.566 E(ent)-.11 E F2 2.75
<ad72>3.666 G(ecei)-2.75 E -.165(ve)-.275 G 2.75(st).165 G(he ne)-2.75 E
(xt a)-.165 E -.275(va)-.22 G(ilable e).275 E -.165(ve)-.275 G 2.75
(nt. This).165 F(is the core)2.75 E F1(XNextEv)3.666 E(ent)-.11 E F2
(function)3.666 E(pro)99.5 96 Q(vided by the standard X libarary)-.165 E
(.)-.715 E(Other requests are de\214ned to grab and focus e)72 111.6 Q
(xtension de)-.165 E(vices, to change their k)-.275 E -.165(ey)-.11 G
2.75(,b)-.55 G(utton, or)-2.97 E
(modi\214er mappings, to control the propag)72 123.6 Q(ation of input e)
-.055 E(xtension e)-.165 E -.165(ve)-.275 G(nts, to get motion history)
.165 E(from an e)72 135.6 Q(xtension de)-.165 E
(vice, and to send input e)-.275 E(xtension e)-.165 E -.165(ve)-.275 G
(nts to another client.).165 E(These functions)5.5 E
(are described in the follo)72 147.6 Q(wing sections.)-.275 E F1 2.75
(2. Library)72 171.6 R(Extension Requests)2.75 E F2(Extension input de)
72 187.2 Q(vices are accessed by client programs through the use of ne)
-.275 E 2.75(wp)-.275 G(rotocol requests.)-2.75 E(The follo)72 199.2 Q
(wing requests are pro)-.275 E(vided as e)-.165 E(xtensions to Xlib)
-.165 E 5.5(.C)-.44 G(onstants and structures referenced by)-5.5 E
(these functions may be found in the \214les)72 211.2 Q F1
(<X11/extensions/XI.h>)2.75 E F2(and)2.75 E F1(<X11/extensions/XIn-)2.75
E(put.h>)72 223.2 Q F2 2.75(,w)C
(hich are attached to this document as Appendix A.)-2.75 E
(The library will return)72 238.8 Q F1(NoSuchExtension)2.75 E F2
(if an e)2.75 E(xtension request is made to a serv)-.165 E
(er that does not)-.165 E(support the input e)72 250.8 Q(xtension.)-.165
E(Input e)72 266.4 Q(xtension requests cannot be used to access the X k)
-.165 E -.165(ey)-.11 G(board and X pointer de).165 E(vices.)-.275 E F1
2.75(2.1. W)72 290.4 R(indo)-.198 E 2.75(wM)-.11 G(anager Functions)
-2.75 E F2(This section discusses the follo)72 306 Q
(wing X Input Extension W)-.275 E(indo)-.44 E 2.75(wM)-.275 G
(anager topics:)-2.75 E 23.65<8343>72 321.6 S(hanging the core de)-23.65
E(vices)-.275 E 23.65<8345>72 337.2 S -.165(ve)-23.65 G
(nt synchronization and core grabs).165 E 23.65<8345>72 352.8 S
(xtension acti)-23.65 E .33 -.165(ve g)-.275 H(rabs).165 E 23.65<8350>72
368.4 S(assi)-23.815 E -.165(ve)-.275 G(ly grabbing a k).165 E -.165(ey)
-.11 G 23.65<8350>72 384 S(assi)-23.815 E -.165(ve)-.275 G
(ly grabbing a b).165 E(utton)-.22 E 23.65<8354>72 399.6 S(ha)-23.65 E
(wing a de)-.165 E(vice)-.275 E 23.65<8343>72 415.2 S(ontrolling de)
-23.65 E(vice focus)-.275 E 23.65<8343>72 430.8 S(ontrolling de)-23.65 E
(vice feedback)-.275 E 23.65<8352>72 446.4 S
(inging a bell on an input de)-23.65 E(vice)-.275 E 23.65<8343>72 462 S
(ontrolling de)-23.65 E(vice encoding)-.275 E 23.65<8343>72 477.6 S
(ontrolling b)-23.65 E(utton mapping)-.22 E 23.65<834f>72 493.2 S
(btaining the state of a de)-23.65 E(vice)-.275 E F1 2.75
(2.1.1. Changing)72 517.2 R(the Cor)2.75 E 2.75(eD)-.198 G -.165(ev)
-2.75 G(ices).165 E F2(These functions are pro)72 532.8 Q
(vided to change which ph)-.165 E(ysical de)-.055 E
(vice is used as the X pointer or X)-.275 E -.11(ke)72 544.8 S(yboard.)
-.055 E(Note)277.308 566.8 Q
(Using these functions may change the characteristics of the core de)
99.5 583.8 Q 2.75(vices. The)-.275 F(ne)2.75 E(w)-.275 E(pointer de)99.5
595.8 Q(vice may ha)-.275 E .33 -.165(ve a d)-.22 H(if).165 E
(ferent number of b)-.275 E(uttons from the old one, or the ne)-.22 E(w)
-.275 E -.11(ke)99.5 607.8 S(yboard de)-.055 E(vice may ha)-.275 E .33
-.165(ve a d)-.22 H(if).165 E(ferent number of k)-.275 E -.165(ey)-.11 G
2.75(so).165 G 2.75(rr)-2.75 G(eport a dif)-2.75 E(ferent range of)-.275
E -.11(ke)99.5 619.8 S 2.75(ycodes. Client)-.055 F
(programs may be running that depend on those characteristics.)2.75 E
-.165(Fo)5.5 G(r).165 E -.165(ex)99.5 631.8 S(ample, a client program c\
ould allocate an array based on the number of b).165 E(uttons on)-.22 E
(the pointer de)99.5 643.8 Q(vice and then use the b)-.275 E
(utton numbers recei)-.22 E -.165(ve)-.275 G 2.75(di).165 G 2.75(nb)
-2.75 G(utton e)-2.97 E -.165(ve)-.275 G(nts as).165 E
(indices into that array)99.5 655.8 Q 5.5(.C)-.715 G
(hanging the core de)-5.5 E(vices could cause such client programs)-.275
E(to beha)99.5 667.8 Q .33 -.165(ve i)-.22 H
(mproperly or to terminate abnormally if the).165 E 2.75(yi)-.165 G
(gnore the)-2.75 E F1(ChangeDe)3.666 E(vi-)-.165 E(ceNotify)99.5 679.8 Q
F2 -2.365 -.275(ev e)3.666 H(nt generated by these requests.).275 E
(These functions change the X k)72 705.4 Q -.165(ey)-.11 G
(board or X pointer de).165 E(vice and generate an)-.275 E F1(XChangeDe)
3.666 E(viceNo-)-.165 E(tify)72 717.4 Q F2 -2.365 -.275(ev e)3.666 H
(nt and a).275 E F1(MappingNotify)3.666 E F2 -2.365 -.275(ev e)3.666 H
2.75(nt. The).275 F(speci\214ed de)2.75 E(vice becomes the ne)-.275 E
2.75(wXk)-.275 G -.165(ey)-2.86 G(board or X).165 E(pointer de)72 729.4
Q 2.75(vice. The)-.275 F(location of the core de)2.75 E
(vice does not change as a result of this request.)-.275 E F1(3)285.25
768 Q EP
%%Page: 4 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(These requests f)72 84 Q(ail and return)-.11 E F1
(Alr)3.666 E(eadyGrab)-.198 E(bed)-.11 E F2
(if either the speci\214ed de)3.666 E(vice or the core de)-.275 E
(vice it)-.275 E -.11(wo)72 96 S
(uld replace are grabbed by some other client.).11 E(The)5.5 E 2.75(yf)
-.165 G(ail and return)-2.86 E F1(GrabFr)3.666 E(ozen)-.198 E F2
(if either)3.666 E(de)72 108 Q(vice is frozen by the acti)-.275 E .33
-.165(ve g)-.275 H(rab of another client.).165 E(These requests f)72
123.6 Q(ail with a)-.11 E F1(BadDe)3.666 E(vice)-.165 E F2
(error if the speci\214ed de)3.666 E(vice is in)-.275 E -.275(va)-.44 G
(lid, has not pre).275 E(viously)-.275 E(been opened via)72 135.6 Q F1
(XOpenDe)3.666 E(vice)-.165 E F2 2.75(,o).916 G 2.75(ri)-2.75 G 2.75(sn)
-2.75 G(ot supported as a core de)-2.75 E(vice by the serv)-.275 E
(er implementa-)-.165 E(tion.)72 147.6 Q(Once the de)72 163.2 Q
(vice has successfully replaced one of the core de)-.275 E
(vices, it is treated as a core de)-.275 E(vice)-.275 E
(until it is in turn replaced by another)72 175.2 Q F1(ChangeDe)3.666 E
(vice)-.165 E F2(request or until the serv)3.666 E(er terminates.)-.165
E(The)5.5 E(termination of the client that changed the de)72 187.2 Q
(vice will not cause it to change back.)-.275 E(Attempts to use)5.5 E
(the)72 199.2 Q F1(XCloseDe)3.666 E(vice)-.165 E F2
(request to close the ne)3.666 E 2.75(wc)-.275 G(ore de)-2.75 E
(vice will f)-.275 E(ail with a)-.11 E F1(BadDe)3.666 E(vice)-.165 E F2
(error)3.666 E(.)-.605 E 1.76 -.88(To c)72 226.8 T(hange which ph).88 E
(ysical de)-.055 E(vice is used as the X k)-.275 E -.165(ey)-.11 G
(board, use the).165 E F1(XChangeK)3.666 E(eyboardDe)-.275 E(vice)-.165
E F2 2.75(function. The)72 238.8 R(speci\214ed de)2.75 E
(vice must support input class)-.275 E F1 -.275(Ke)3.666 G(ys).275 E F2
(\(as reported in the)3.666 E F1(ListInputDe-)3.666 E(vices)72 250.8 Q
F2(request\) or the request will f)3.666 E(ail with a)-.11 E F1
(BadMatch)3.666 E F2(error)3.666 E(.)-.605 E .44 LW 36 270.15 36 281.15
DL 36 269.15 36 280.15 DL 41.5 267.4 36 267.4 DL 42.5 267.4 37 267.4 DL
48 267.4 42.5 267.4 DL(int XChangeK)72 282 Q -.165(ey)-.275 G(boardDe)
.165 E -1.834(vice \()-.275 F/F3 11/Times-Italic@0 SF(display).916 E F2
(,).916 E F3(de)2.75 E(vice)-.165 E F2(\)).916 E(Display *)85.75 294 Q
F3(display)A F2(;).916 E(XDe)85.75 306 Q(vice *)-.275 E F3(de)A(vice)
-.165 E F2(;).916 E F3(display)72 325.2 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 340.8 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E 36 336.15 36 347.15 DL 36 335.15 36 346.15 DL 41.5 345.4
36 345.4 DL 42.5 345.4 37 345.4 DL 48 345.4 42.5 345.4 DL
(If no error occurs,)72 368.4 Q F1(XChangeK)3.666 E(eyboardDe)-.275 E
(vice)-.165 E F2(returns)3.666 E F1(Success)3.666 E F2 5.5(.A).916 G F1
(ChangeDe)-1.834 E(viceNotify)-.165 E F2 -2.365 -.275(ev e)3.666 H(nt)
.275 E(with the request \214eld set to)72 380.4 Q F1(NewK)3.666 E
(eyboard)-.275 E F2(is sent to all clients selecting that e)3.666 E
-.165(ve)-.275 G 2.75(nt. A).165 F F1(Mapping-)3.666 E(Notify)72 392.4 Q
F2 -2.365 -.275(ev e)3.666 H(nt with the request \214eld set to).275 E
F1(MappingK)3.666 E(eyboard)-.275 E F2(is sent to all clients.)3.666 E
(The requested)5.5 E(de)72 404.4 Q(vice becomes the X k)-.275 E -.165
(ey)-.11 G(board, and the old k).165 E -.165(ey)-.11 G(board becomes a)
.165 E -.275(va)-.22 G(ilable as an e).275 E(xtension input)-.165 E(de)
72 416.4 Q 2.75(vice. The)-.275 F(focus state of the ne)2.75 E 2.75(wk)
-.275 G -.165(ey)-2.86 G
(board is the same as the focus state of the old X k).165 E -.165(ey)
-.11 G(board.).165 E F1(XChangeK)72.916 432 Q(eyboardDe)-.275 E(vice)
-.165 E F2(can generate)3.666 E F1(Alr)3.666 E(eadyGrab)-.198 E(bed)-.11
E F2(,).916 E F1(BadDe)3.666 E(vice)-.165 E F2(,).916 E F1(BadMatch)
3.666 E F2 2.75(,a).916 G(nd)-2.75 E F1(GrabFr)72.916 444 Q(ozen)-.198 E
F2(errors.)3.666 E 1.76 -.88(To c)72 471.6 T(hange which ph).88 E
(ysical de)-.055 E(vice is used as the X pointer)-.275 E 2.75(,u)-.44 G
(se the)-2.75 E F1(XChangeP)3.666 E(ointerDe)-.22 E(vice)-.165 E F2
(func-)3.666 E 2.75(tion. The)72 483.6 R(speci\214ed de)2.75 E
(vice must support input class)-.275 E F1 -1.012(Va)3.666 G(luators)
1.012 E F2(\(as reported in the)3.666 E F1(XListInputDe-)3.666 E(vices)
72 495.6 Q F2(request\) and report at least tw)3.666 E 2.75(oa)-.11 G
-.165(xe)-2.75 G 2.75(so).165 G 2.75(fm)-2.75 G
(otion, or the request will f)-2.75 E(ail with a)-.11 E F1(BadMatch)
3.666 E F2(error)72 507.6 Q 5.5(.I)-.605 G 2.75(ft)-5.5 G
(he speci\214ed de)-2.75 E(vice reports more than tw)-.275 E 2.75(oa)
-.11 G -.165(xe)-2.75 G(s, the tw).165 E 2.75(os)-.11 G
(peci\214ed in the xaxis and yaxis)-2.75 E(ar)72 519.6 Q
(guments will be used.)-.198 E(Data from other v)5.5 E
(aluators on the de)-.275 E(vice will be ignored.)-.275 E
(If the speci\214ed de)72 535.2 Q
(vice reports absolute positional information, and the serv)-.275 E
(er implementation does)-.165 E(not allo)72 547.2 Q 2.75(ws)-.275 G
(uch a de)-2.75 E(vice to be used as the X pointer)-.275 E 2.75(,t)-.44
G(he request will f)-2.75 E(ail with a)-.11 E F1(BadDe)3.666 E(vice)
-.165 E F2(error)3.666 E(.)-.605 E F1(4)285.25 768 Q EP
%%Page: 5 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF
(int XChangePointerDe)72 99.6 Q -1.834(vice \()-.275 F/F3 11
/Times-Italic@0 SF(display).916 E F2(,).916 E F3(de)2.75 E(vice)-.165 E
F2(,).916 E F3(xaxis)2.75 E F2(,).916 E F3(yaxis)2.75 E F2(\)).916 E
(Display *)85.75 111.6 Q F3(display)A F2(;).916 E(XDe)85.75 123.6 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E(int)85.75 135.6 Q F3
(xaxis)2.75 E F2(;).916 E(int)85.75 147.6 Q F3(yaxis)2.75 E F2(;).916 E
F3(display)72 166.8 Q F2(Speci\214es the connection to the X serv)40.221
E(er)-.165 E(.)-.605 E F3(de)72 182.4 Q(vice)-.165 E F2
(Speci\214es the desired de)44.071 E(vice.)-.275 E F3(xaxis)72 198 Q F2
.732(Speci\214es the zero-based inde)49.395 F 3.482(xo)-.165 G 3.482(ft)
-3.482 G .732(he axis to be used as the x-axis of the pointer)-3.482 F
(de)144 210 Q(vice.)-.275 E F3(yaxis)72 225.6 Q F2 .732
(Speci\214es the zero-based inde)49.395 F 3.482(xo)-.165 G 3.482(ft)
-3.482 G .732(he axis to be used as the y-axis of the pointer)-3.482 F
(de)144 237.6 Q(vice.)-.275 E 36 232.95 36 243.95 DL 36 231.95 36 242.95
DL 41.5 242.2 36 242.2 DL 42.5 242.2 37 242.2 DL 48 242.2 42.5 242.2 DL
(If no error occurs,)72 265.2 Q F1(XChangeP)3.666 E(ointerDe)-.22 E
(vice)-.165 E F2(returns)3.666 E F1(Success)3.666 E F2 5.5(.A).916 G F1
(ChangeDe)-1.834 E(viceNotify)-.165 E F2 -2.365 -.275(ev e)3.666 H(nt)
.275 E(with the request \214eld set to)72 277.2 Q F1(NewP)3.666 E
(ointer)-.22 E F2(is sent to all clients selecting that e)3.666 E -.165
(ve)-.275 G 2.75(nt. A).165 F F1(Mapping-)3.666 E(Notify)72 289.2 Q F2
-2.365 -.275(ev e)3.666 H(nt with the request \214eld set to).275 E F1
(MappingP)3.666 E(ointer)-.22 E F2(is sent to all clients.)3.666 E
(The requested)5.5 E(de)72 301.2 Q(vice becomes the X pointer)-.275 E
2.75(,a)-.44 G(nd the old pointer becomes a)-2.75 E -.275(va)-.22 G
(ilable as an e).275 E(xtension input de)-.165 E(vice.)-.275 E F1
(XChangeP)72.916 316.8 Q(ointerDe)-.22 E(vice)-.165 E F2(can generate)
3.666 E F1(Alr)3.666 E(eadyGrab)-.198 E(bed)-.11 E F2(,).916 E F1(BadDe)
3.666 E(vice)-.165 E F2(,).916 E F1(BadMatch)3.666 E F2 2.75(,a).916 G
(nd)-2.75 E F1(GrabFr)72.916 328.8 Q(ozen)-.198 E F2(errors.)3.666 E F1
2.75(2.1.2. Ev)72 352.8 R(ent Synchr)-.11 E(onization and Cor)-.198 E
2.75(eG)-.198 G(rabs)-2.75 E F2(Implementation of the input e)72 368.4 Q
(xtension requires an e)-.165 E(xtension of the meaning of e)-.165 E
-.165(ve)-.275 G(nt synchroniza-).165 E
(tion for the core grab requests.)72 380.4 Q
(This is necessary in order to allo)5.5 E 2.75(ww)-.275 G(indo)-2.75 E
2.75(wm)-.275 G(anagers to freeze all)-2.75 E(input de)72 392.4 Q
(vices with a single request.)-.275 E
(The core grab requests require a pointer_mode and k)72 408 Q -.165(ey)
-.11 G(board_mode ar).165 E 2.75(gument. The)-.198 F(meaning of)2.75 E
(these modes is changed by the input e)72 420 Q 2.75(xtension. F)-.165 F
(or the)-.165 E F1(XGrabP)3.666 E(ointer)-.22 E F2(and)3.666 E F1
(XGrabButton)3.666 E F2
(requests, pointer_mode controls synchronization of the pointer de)72
432 Q(vice, and k)-.275 E -.165(ey)-.11 G(board_mode con-).165 E
(trols the synchronization of all other input de)72 444 Q 2.75(vices. F)
-.275 F(or the)-.165 E F1(XGrabK)3.666 E(eyboard)-.275 E F2(and)3.666 E
F1(XGrabK)3.666 E(ey)-.275 E F2
(requests, pointer_mode controls the synchronization of all input de)72
456 Q(vices, e)-.275 E(xcept the X k)-.165 E -.165(ey)-.11 G(board,).165
E(while k)72 468 Q -.165(ey)-.11 G
(board_mode controls the synchronization of the k).165 E -.165(ey)-.11 G
2.75(board. When).165 F(using one of the core)2.75 E
(grab requests, the synchronization of e)72 480 Q(xtension de)-.165 E
(vices is controlled by the mode speci\214ed for the)-.275 E(de)72 492 Q
(vice not being grabbed.)-.275 E F1 2.75(2.1.3. Extension)72 516 R(Acti)
2.75 E .22 -.11(ve G)-.11 H(rabs).11 E F2(Acti)72 531.6 Q .33 -.165
(ve g)-.275 H(rabs of e).165 E(xtension de)-.165 E
(vices are supported via the)-.275 E F1(XGrabDe)3.666 E(vice)-.165 E F2
(function in the same w)3.666 E(ay)-.11 E(that core de)72 543.6 Q
(vices are grabbed using the core)-.275 E F1(XGrabK)3.666 E(eyboard)
-.275 E F2(function, e)3.666 E(xcept that an e)-.165 E(xtension)-.165 E
(input de)72 555.6 Q(vice is passed as a function parameter)-.275 E 5.5
(.T)-.605 G(he)-5.5 E F1(XUngrabDe)3.666 E(vice)-.165 E F2
(function allo)3.666 E(ws a pre)-.275 E(vious)-.275 E(acti)72 567.6 Q
.33 -.165(ve g)-.275 H(rab for an e).165 E(xtension de)-.165 E
(vice to be released.)-.275 E -.165(Pa)72 583.2 S(ssi).165 E .33 -.165
(ve g)-.275 H(rabs of b).165 E(uttons and k)-.22 E -.165(ey)-.11 G 2.75
(so).165 G 2.75(ne)-2.75 G(xtension de)-2.915 E
(vices are supported via the)-.275 E F1(XGrabDe)3.666 E(viceBut-)-.165 E
(ton)72 595.2 Q F2(and)3.666 E F1(XGrabDe)3.666 E(viceK)-.165 E(ey)-.275
E F2 2.75(functions. These)3.666 F(passi)2.75 E .33 -.165(ve g)-.275 H
(rabs are released via the).165 E F1(XUngrabDe-)3.666 E(viceK)72 607.2 Q
(ey)-.275 E F2(and)3.666 E F1(XUngrabDe)3.666 E(viceButton)-.165 E F2
(functions.)3.666 E 1.76 -.88(To g)72 634.8 T(rab an e).88 E
(xtension de)-.165 E(vice, use the)-.275 E F1(XGrabDe)3.666 E(vice)-.165
E F2 2.75(function. The)3.666 F(de)2.75 E(vice must ha)-.275 E .33 -.165
(ve p)-.22 H(re).165 E(viously)-.275 E(been opened using the)72 646.8 Q
F1(XOpenDe)3.666 E(vice)-.165 E F2(function.)3.666 E F1(5)285.25 768 Q
EP
%%Page: 6 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(int XGrabDe)72 99.6
Q -1.834(vice \()-.275 F/F3 11/Times-Italic@0 SF(display).916 E F2(,)
.916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3(gr)2.75 E(ab_window)
-.165 E F2(,).916 E F3(owner_e)2.75 E(vents)-.165 E F2(,).916 E F3 -.165
(ev)2.75 G(ent_count).165 E F2(,).916 E F3 -.165(ev)2.75 G(ent_list).165
E F2(,).916 E F3(this_de)113.25 111.6 Q(vice_mode)-.165 E F2(,).916 E F3
(other_de)2.75 E(vice_mode)-.165 E F2(,).916 E F3(time)2.75 E F2(\)).916
E(Display *)85.75 123.6 Q F3(display)A F2(;).916 E(XDe)85.75 135.6 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E -.44(Wi)85.75 147.6 S
(ndo).44 E(w)-.275 E F3(gr)2.75 E(ab_window)-.165 E F2(;).916 E(Bool)
85.75 159.6 Q F3(owner_e)2.75 E(vents)-.165 E F2(;).916 E(int)85.75
171.6 Q F3 -.165(ev)2.75 G(ent_count).165 E F2(;).916 E(XEv)85.75 183.6
Q(entClass *)-.165 E F3 -.165(ev)C(ent_list).165 E F2(;).916 E(int)85.75
195.6 Q F3(this_de)2.75 E(vice_mode)-.165 E F2(;).916 E(int)85.75 207.6
Q F3(other_de)2.75 E(vice_mode)-.165 E F2(;).916 E -.385(Ti)85.75 219.6
S(me).385 E F3(time)2.75 E F2(;).916 E F3(display)72 238.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 254.4 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3(gr)72 270 Q(ab_window)-.165 E F2
(Speci\214es the ID of a windo)11.654 E 2.75(wa)-.275 G
(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275 E -.165(ve)
-.165 G(.).165 E F3(owner_e)72 285.6 Q(vents)-.165 E F2
(Speci\214es a boolean v)11.676 E(alue of either)-.275 E F1 -.814(Tr)
3.666 G(ue).814 E F2(or)3.666 E F1 -.275(Fa)3.666 G(lse).275 E F2(.).916
E F3 -.165(ev)72 301.2 S(ent_count).165 E F2
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nt_list array).165 E(.)-.715 E F3 -.165(ev)72 316.8 S(ent_list).165 E
F2 .856(Speci\214es a pointer to a list of e)30.002 F -.165(ve)-.275 G
.856(nt classes that indicate which e).165 F -.165(ve)-.275 G .856
(nts the client).165 F .445(wishes to recei)144 328.8 R -.165(ve)-.275 G
5.945(.T).165 G .445(hese e)-5.945 F -.165(ve)-.275 G .445
(nt classes must ha).165 F .775 -.165(ve b)-.22 H .445
(een obtained using the de).165 F(vice)-.275 E(being grabbed.)144 340.8
Q F3(this_de)72 356.4 Q(vice_mode)-.165 E F2 .134
(Controls further processing of e)144 368.4 R -.165(ve)-.275 G .134
(nts from this de).165 F 2.884(vice. Y)-.275 F .134
(ou can pass one of these)-1.21 F(constants:)144 380.4 Q F1
(GrabModeSync)3.666 E F2(or)3.666 E F1(GrabModeAsync)3.666 E F2(.).916 E
F3(other_de)72 396 Q(vice_mode)-.165 E F2 .182
(Controls further processing of e)144 408 R -.165(ve)-.275 G .181
(nts from all other de).165 F 2.931(vices. Y)-.275 F .181
(ou can pass one of)-1.21 F(these constants:)144 420 Q F1(GrabModeSync)
3.666 E F2(or)3.666 E F1(GrabModeAsync)3.666 E F2(.).916 E F3(time)72
435.6 Q F2 .631(Speci\214es the time.)53.058 F .632
(This may be either a timestamp e)6.132 F .632
(xpressed in milliseconds or)-.165 F F1(Curr)144.916 447.6 Q(entT)-.198
E(ime)-.198 E F2(.).916 E 36 442.95 36 453.95 DL 36 441.95 36 452.95 DL
41.5 452.2 36 452.2 DL 42.5 452.2 37 452.2 DL 48 452.2 42.5 452.2 DL F1
(XGrabDe)72.916 475.2 Q(vice)-.165 E F2(acti)3.666 E -.165(ve)-.275 G
(ly grabs an e).165 E(xtension input de)-.165 E(vice and generates)-.275
E F1(De)3.666 E(viceF)-.165 E(ocusIn)-.275 E F2(and)3.666 E F1(De)72.916
487.2 Q(viceF)-.165 E(ocusOut)-.275 E F2 -2.365 -.275(ev e)3.666 H 2.75
(nts. Further).275 F(input e)2.75 E -.165(ve)-.275 G(nts from this de)
.165 E(vice are reported only to the grabbing)-.275 E 2.75(client. This)
72 499.2 R(function o)2.75 E -.165(ve)-.165 G(rrides an).165 E 2.75(yp)
-.165 G(re)-2.75 E(vious acti)-.275 E .33 -.165(ve g)-.275 H
(rab by this client for this de).165 E(vice.)-.275 E(The e)72 514.8 Q
-.165(ve)-.275 G(nt_list parameter is a pointer to a list of e).165 E
-.165(ve)-.275 G(nt classes.).165 E(This list indicates which e)5.5 E
-.165(ve)-.275 G(nts the).165 E(client wishes to recei)72 526.8 Q .33
-.165(ve w)-.275 H(hile the grab is acti).165 E -.165(ve)-.275 G 5.5(.I)
.165 G 2.75(fo)-5.5 G(wner_e)-3.025 E -.165(ve)-.275 G(nts is).165 E F1
-.275(Fa)3.666 G(lse).275 E F2 2.75(,i).916 G(nput e)-2.75 E -.165(ve)
-.275 G(nts from this).165 E(de)72 538.8 Q
(vice are reported with respect to grab_windo)-.275 E 2.75(wa)-.275 G
(nd are reported only if speci\214ed in e)-2.75 E -.165(ve)-.275 G
(nt_list.).165 E(If o)72 550.8 Q(wner_e)-.275 E -.165(ve)-.275 G(nts is)
.165 E F1 -.814(Tr)3.666 G(ue).814 E F2 2.75(,t).916 G
(hen if a generated e)-2.75 E -.165(ve)-.275 G(nt w).165 E
(ould normally be reported to this client, it is)-.11 E
(reported normally)72 562.8 Q 5.5(.O)-.715 G(therwise, the e)-5.5 E
-.165(ve)-.275 G(nt is reported with respect to the grab_windo).165 E
2.75(wa)-.275 G(nd is only)-2.75 E(reported if speci\214ed in e)72 574.8
Q -.165(ve)-.275 G(nt_list.).165 E(The this_de)72 590.4 Q(vice_mode ar)
-.275 E(gument controls the further processing of e)-.198 E -.165(ve)
-.275 G(nts from this de).165 E(vice, and)-.275 E(the other_de)72 602.4
Q(vice_mode ar)-.275 E
(gument controls the further processing of input e)-.198 E -.165(ve)
-.275 G(nts from all other).165 E(de)72 614.4 Q(vices.)-.275 E 23.65
<8349>72 630 S 2.75(ft)-23.65 G(he this_de)-2.75 E(vice_mode ar)-.275 E
(gument is)-.198 E F1(GrabModeAsync)3.666 E F2 2.75(,d).916 G -.275(ev)
-2.75 G(ice e).275 E -.165(ve)-.275 G(nt processing continues).165 E
(normally; if the de)99.5 642 Q
(vice is currently frozen by this client, then processing of de)-.275 E
(vice e)-.275 E -.165(ve)-.275 G(nts is).165 E 2.75(resumed. If)99.5 654
R(the this_de)2.75 E 2.75(vice_mode ar)-.275 F(gument is)-.198 E F1
(GrabModeSync)3.666 E F2 2.75(,t).916 G(he state of the grabbed)-2.75 E
(de)99.5 666 Q(vice \(as seen by client applications\) appears to freez\
e, and no further de)-.275 E(vice e)-.275 E -.165(ve)-.275 G(nts are)
.165 E(generated by the serv)99.5 678 Q
(er until the grabbing client issues a releasing)-.165 E F1(XAllo)3.666
E(wDe)-.11 E(viceEv)-.165 E(ents)-.11 E F2(call or until the de)99.5 690
Q(vice grab is released.)-.275 E(Actual de)5.5 E(vice input e)-.275 E
-.165(ve)-.275 G(nts are not lost while the).165 E(de)99.5 702 Q
(vice is frozen; the)-.275 E 2.75(ya)-.165 G
(re simply queued for later processing.)-2.75 E 23.65<8349>72 717.6 S
2.75(ft)-23.65 G(he other_de)-2.75 E(vice_mode is)-.275 E F1
(GrabModeAsync)3.666 E F2 2.75(,e).916 G -.165(ve)-3.025 G
(nt processing from other input de).165 E(vices)-.275 E(is unaf)99.5
729.6 Q(fected by acti)-.275 E -.275(va)-.275 G(tion of the grab).275 E
5.5(.I)-.44 G 2.75(fo)-5.5 G(ther_de)-2.75 E(vice_mode is)-.275 E F1
(GrabModeSync)3.666 E F2 2.75(,t).916 G(he state)-2.75 E F1(6)285.25 768
Q EP
%%Page: 7 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(of all de)99.5 84 Q(vices e)-.275 E
(xcept the grabbed de)-.165 E
(vice \(as seen by client applications\) appears to freeze,)-.275 E
(and no further e)99.5 96 Q -.165(ve)-.275 G
(nts are generated by the serv).165 E
(er until the grabbing client issues a releasing)-.165 E F1(XAllo)
100.416 108 Q(wEv)-.11 E(ents)-.11 E F2(or)3.666 E F1(XAllo)3.666 E(wDe)
-.11 E(viceEv)-.165 E(ents)-.11 E F2(call or until the de)3.666 E
(vice grab is released.)-.275 E(Actual)5.5 E -2.365 -.275(ev e)99.5 120
T(nts are not lost while the other de).275 E(vices are frozen; the)-.275
E 2.75(ya)-.165 G(re simply queued for later pro-)-2.75 E(cessing.)99.5
132 Q F1(XGrabDe)72.916 147.6 Q(vice)-.165 E F2 -.11(fa)3.666 G
(ils on the follo).11 E(wing conditions:)-.275 E 23.65<8349>72 163.2 S
2.75(ft)-23.65 G(he de)-2.75 E(vice is acti)-.275 E -.165(ve)-.275 G
(ly grabbed by some other client, it returns).165 E F1(Alr)3.666 E
(eadyGrab)-.198 E(bed)-.11 E F2(.).916 E 23.65<8349>72 178.8 S 2.75(fg)
-23.65 G(rab_windo)-2.75 E 2.75(wi)-.275 G 2.75(sn)-2.75 G(ot vie)-2.75
E -.11(wa)-.275 G(ble, it returns).11 E F1(GrabNotV)3.666 E(iewable)
-.407 E F2(.).916 E 23.65<8349>72 194.4 S 2.75(ft)-23.65 G(he speci\214\
ed time is earlier than the last-grab-time for the speci\214ed de)-2.75
E(vice or later than)-.275 E(the current X serv)99.5 206.4 Q
(er time, it returns)-.165 E F1(GrabIn)3.666 E -.11(va)-.44 G(lidT).11 E
(ime)-.198 E F2 5.5(.O).916 G(therwise, the last-grab-time for)-5.5 E
(the speci\214ed de)99.5 218.4 Q
(vice is set to the speci\214ed time and)-.275 E F1(Curr)3.666 E(entT)
-.198 E(ime)-.198 E F2(is replaced by the current)3.666 E 2.75(Xs)99.5
230.4 S(erv)-2.75 E(er time.)-.165 E 23.65<8349>72 246 S 2.75(ft)-23.65
G(he de)-2.75 E(vice is frozen by an acti)-.275 E .33 -.165(ve g)-.275 H
(rab of another client, it returns).165 E F1(GrabFr)3.666 E(ozen)-.198 E
F2(.).916 E(If a grabbed de)72 261.6 Q
(vice is closed by a client while an acti)-.275 E .33 -.165(ve g)-.275 H
(rab by that client is in ef).165 E(fect, that acti)-.275 E -.165(ve)
-.275 G(grab will be released.)72 273.6 Q(An)5.5 E 2.75(yp)-.165 G(assi)
-2.75 E .33 -.165(ve g)-.275 H
(rabs established by that client will be released.).165 E(If the de)5.5
E(vice)-.275 E(is frozen only by an acti)72 285.6 Q .33 -.165(ve g)-.275
H(rab of the requesting client, it is tha).165 E(wed.)-.165 E F1
(XGrabDe)72.916 301.2 Q(vice)-.165 E F2(can generate)3.666 E F1
(BadClass)3.666 E F2(,).916 E F1(BadDe)3.666 E(vice)-.165 E F2(,).916 E
F1(BadV)3.666 E(alue)-1.012 E F2 2.75(,a).916 G(nd)-2.75 E F1(BadW)3.666
E(indo)-.198 E(w)-.11 E F2(errors.)3.666 E 1.76 -.88(To r)72 328.8 T
(elease a grab of an e).88 E(xtension de)-.165 E(vice, use the)-.275 E
F1(XUngrabDe)3.666 E(vice)-.165 E F2(function.)3.666 E .44 LW 36 348.15
36 359.15 DL 36 347.15 36 358.15 DL 41.5 345.4 36 345.4 DL 42.5 345.4 37
345.4 DL 48 345.4 42.5 345.4 DL(int XUngrabDe)72 360 Q(vice\()-.275 E/F3
11/Times-Italic@0 SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2
(,).916 E F3(time)2.75 E F2(\)).916 E(Display *)85.75 372 Q F3(display)A
F2(;).916 E(XDe)85.75 384 Q(vice *)-.275 E F3(de)A(vice)-.165 E F2(;)
.916 E -.385(Ti)85.75 396 S(me).385 E F3(time)2.75 E F2(;).916 E F3
(display)72 415.2 Q F2(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F3(de)72 430.8 Q(vice)-.165 E F2
(Speci\214es the desired de)44.071 E(vice.)-.275 E F3(time)72 446.4 Q F2
.403(Speci\214es the time.)53.058 F .403
(This may be either a timestamp e)5.903 F .402
(xpressed in milliseconds, or)-.165 F F1(Curr)144.916 458.4 Q(entT)-.198
E(ime)-.198 E F2(.).916 E 36 453.75 36 464.75 DL 36 452.75 36 463.75 DL
41.5 463 36 463 DL 42.5 463 37 463 DL 48 463 42.5 463 DL F1(XUngrabDe)
72.916 486 Q(vice)-.165 E F2(allo)3.666 E(ws a client to release an e)
-.275 E(xtension input de)-.165 E(vice and an)-.275 E 2.75(yq)-.165 G
(ueued e)-2.75 E -.165(ve)-.275 G(nts if).165 E
(this client has it grabbed from either)72 498 Q F1(XGrabDe)3.666 E
(vice)-.165 E F2(or)3.666 E F1(XGrabDe)3.666 E(viceK)-.165 E(ey)-.275 E
F2 5.5(.I).916 G 2.75(fa)-5.5 G .33 -.165(ny o)-2.75 H(ther de).165 E
(vices)-.275 E(are frozen by the grab,)72 510 Q F1(XUngrabDe)3.666 E
(vice)-.165 E F2(tha)3.666 E(ws them.)-.165 E
(This function does not release the de)5.5 E(vice)-.275 E(and an)72 522
Q 2.75(yq)-.165 G(ueued e)-2.75 E -.165(ve)-.275 G
(nts if the speci\214ed time is earlier than the last-de).165 E
(vice-grab time or is later than)-.275 E(the current X serv)72 534 Q
(er time.)-.165 E(It also generates)5.5 E F1(De)3.666 E(viceF)-.165 E
(ocusIn)-.275 E F2(and)3.666 E F1(De)3.666 E(viceF)-.165 E(ocusOut)-.275
E F2 -2.365 -.275(ev e)3.666 H 2.75(nts. The).275 F(X)2.75 E(serv)72 546
Q(er automatically performs an)-.165 E F1(XUngrabDe)3.666 E(vice)-.165 E
F2(if the e)3.666 E -.165(ve)-.275 G(nt windo).165 E 2.75(wf)-.275 G
(or an acti)-2.75 E .33 -.165(ve d)-.275 H -.275(ev).165 G(ice grab).275
E(becomes not vie)72 558 Q -.11(wa)-.275 G
(ble or if the client terminates without releasing the grab).11 E(.)-.44
E F1(XUngrabDe)72.916 573.6 Q(vice)-.165 E F2(can generate)3.666 E F1
(BadDe)3.666 E(vice)-.165 E F2(errors.)3.666 E F1 2.75(2.1.4. P)72 597.6
R(assi)-.11 E -.11(ve)-.11 G(ly Grab).11 E(bing a K)-.11 E(ey)-.275 E F2
1.76 -.88(To p)72 613.2 T(assi).88 E -.165(ve)-.275 G
(ly grab a single k).165 E .33 -.165(ey o)-.11 H 2.75(na).165 G 2.75(ne)
-2.75 G(xtension de)-2.915 E(vice, use)-.275 E F1(XGrabDe)3.666 E(viceK)
-.165 E(ey)-.275 E F2 5.5(.T).916 G(hat de)-5.5 E(vice must)-.275 E(ha)
72 625.2 Q .33 -.165(ve p)-.22 H(re).165 E
(viously been opened using the)-.275 E F1(XOpenDe)3.666 E(vice)-.165 E
F2(function, or the request will f)3.666 E(ail with a)-.11 E F1(BadDe)
72.916 637.2 Q(vice)-.165 E F2(error)3.666 E 5.5(.I)-.605 G 2.75(ft)-5.5
G(he speci\214ed de)-2.75 E(vice does not support input class)-.275 E F1
-.275(Ke)3.666 G(ys).275 E F2 2.75(,t).916 G(he request will f)-2.75 E
(ail)-.11 E(with a)72 649.2 Q F1(BadMatch)3.666 E F2(error)3.666 E(.)
-.605 E F1(7)285.25 768 Q EP
%%Page: 8 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(int XGrabDe)72 99.6
Q(viceK)-.275 E -.165(ey)-.275 G(\().165 E/F3 11/Times-Italic@0 SF
(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3 -.11(ke)
2.75 G(ycode)-.22 E F2(,).916 E F3(modi\214er)2.75 E(s)-.11 E F2(,).916
E F3(modi\214er_de)2.75 E(vice)-.165 E F2(,).916 E F3(gr)2.75 E
(ab_window)-.165 E F2(,).916 E F3(owner_e)124.5 111.6 Q(vents)-.165 E F2
(,).916 E F3 -.165(ev)2.75 G(ent_count).165 E F2(,).916 E F3 -.165(ev)
2.75 G(ent_list).165 E F2(,).916 E F3(this_de)2.75 E(vice_mode)-.165 E
F2(,).916 E F3(other_de)2.75 E(vice_mode)-.165 E F2(\)).916 E(Display *)
85.75 123.6 Q F3(display)A F2(;).916 E(XDe)85.75 135.6 Q(vice *)-.275 E
F3(de)A(vice)-.165 E F2(;).916 E(int)85.75 147.6 Q F3 -.11(ke)2.75 G
(ycode)-.22 E F2(;).916 E(unsigned int)85.75 159.6 Q F3(modi\214er)2.75
E(s)-.11 E F2(;).916 E(XDe)85.75 171.6 Q(vice *)-.275 E F3
(modi\214er_de)A(vice)-.165 E F2(;).916 E -.44(Wi)85.75 183.6 S(ndo).44
E(w)-.275 E F3(gr)2.75 E(ab_window)-.165 E F2(;).916 E(Bool)85.75 195.6
Q F3(owner_e)2.75 E(vents)-.165 E F2(;).916 E(int)85.75 207.6 Q F3 -.165
(ev)2.75 G(ent_count).165 E F2(;).916 E(XEv)85.75 219.6 Q(entClass *)
-.165 E F3 -.165(ev)C(ent_list).165 E F2(;).916 E(int)85.75 231.6 Q F3
(this_de)2.75 E(vice_mode)-.165 E F2(;).916 E(int)85.75 243.6 Q F3
(other_de)2.75 E(vice_mode)-.165 E F2(;).916 E F3(display)72 262.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 278.4 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3 -.11(ke)72 294 S(ycode)-.22 E F2 1.124
(Speci\214es the k)37.02 F -.165(ey)-.11 G 1.124(code of the k).165 F
1.454 -.165(ey t)-.11 H 1.124(hat is to be grabbed.).165 F -1.21(Yo)
6.623 G 3.873(uc)1.21 G 1.123(an pass either the)-3.873 F -.11(ke)144
306 S(ycode or)-.055 E F1(AnyK)3.666 E(ey)-.275 E F2(.).916 E F3
(modi\214er)72 321.6 Q(s)-.11 E F2 1.494(Speci\214es the set of k)31.168
F -.165(ey)-.11 G 4.244(masks. This).165 F 1.495
(mask is the bitwise inclusi)4.244 F 1.825 -.165(ve O)-.275 H 4.245(Ro)
.165 G 4.245(ft)-4.245 G(hese)-4.245 E -.11(ke)144 333.6 S 10.921
(ymask bits:)-.055 F F1(ShiftMask)14.587 E F2(,).916 E F1(LockMask)
14.587 E F2(,).916 E F1(Contr)14.587 E(olMask)-.198 E F2(,).916 E F1
(Mod1Mask)14.587 E F2(,).916 E F1(Mod2Mask)144.916 345.6 Q F2(,).916 E
F1(Mod3Mask)3.666 E F2(,).916 E F1(Mod4Mask)3.666 E F2 2.75(,a).916 G
(nd)-2.75 E F1(Mod5Mask)3.666 E F2(.).916 E -1.21(Yo)144 361.2 S 3.478
(uc)1.21 G .728(an also pass)-3.478 F F1(AnyModi\214er)4.394 E F2 3.478
(,w).916 G .728(hich is equi)-3.478 F -.275(va)-.275 G .729
(lent to issuing the grab k).275 F 1.059 -.165(ey r)-.11 H(e-).165 E
1.901(quest for all possible modi\214er combinations \(including the co\
mbination of no)144 373.2 R(modi\214ers\).)144 385.2 Q F3(modi\214er_de)
72 400.8 Q(vice)-.165 E F2 1.205(Speci\214es the de)1.908 F 1.205
(vice whose modi\214ers are to be used.)-.275 F 1.205
(If NULL is speci\214ed, the)6.705 F(core X k)144 412.8 Q -.165(ey)-.11
G(board is used as the modi\214er_de).165 E(vice.)-.275 E F3(gr)72 428.4
Q(ab_window)-.165 E F2(Speci\214es the ID of a windo)11.654 E 2.75(wa)
-.275 G(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275 E -.165
(ve)-.165 G(.).165 E F3(owner_e)72 444 Q(vents)-.165 E F2
(Speci\214es a boolean v)11.676 E(alue of either)-.275 E F1 -.814(Tr)
3.666 G(ue).814 E F2(or)3.666 E F1 -.275(Fa)3.666 G(lse).275 E F2(.).916
E F3 -.165(ev)72 459.6 S(ent_count).165 E F2
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nt_list array).165 E(.)-.715 E F3 -.165(ev)72 475.2 S(ent_list).165 E
F2 .856(Speci\214es a pointer to a list of e)30.002 F -.165(ve)-.275 G
.856(nt classes that indicate which e).165 F -.165(ve)-.275 G .855
(nts the client).165 F(wishes to recei)144 487.2 Q -.165(ve)-.275 G(.)
.165 E F3(this_de)72 502.8 Q(vice_mode)-.165 E F2 .134
(Controls further processing of e)144 514.8 R -.165(ve)-.275 G .134
(nts from this de).165 F 2.884(vice. Y)-.275 F .134
(ou can pass one of these)-1.21 F(constants:)144 526.8 Q F1
(GrabModeSync)3.666 E F2(or)3.666 E F1(GrabModeAsync)3.666 E F2(.).916 E
F3(other_de)72 542.4 Q(vice_mode)-.165 E F2 .182
(Controls further processing of e)144 554.4 R -.165(ve)-.275 G .181
(nts from all other de).165 F 2.931(vices. Y)-.275 F .181
(ou can pass one of)-1.21 F(these constants:)144 566.4 Q F1
(GrabModeSync)3.666 E F2(or)3.666 E F1(GrabModeAsync)3.666 E F2(.).916 E
36 561.75 36 572.75 DL 36 560.75 36 571.75 DL 41.5 571 36 571 DL 42.5
571 37 571 DL 48 571 42.5 571 DL F1(XGrabDe)72.916 594 Q(viceK)-.165 E
(ey)-.275 E F2(is analogous to the core)3.666 E F1(XGrabK)3.666 E(ey)
-.275 E F2 2.75(function. It)3.666 F(creates an e)2.75 E(xplicit passi)
-.165 E -.165(ve)-.275 G(grab for a k)72 606 Q .33 -.165(ey o)-.11 H
2.75(na).165 G 2.75(ne)-2.75 G(xtension de)-2.915 E 2.75(vice. The)-.275
F F1(XGrabDe)3.666 E(viceK)-.165 E(ey)-.275 E F2
(function establishes a passi)3.666 E .33 -.165(ve g)-.275 H(rab).165 E
(on a de)72 618 Q 2.75(vice. Consequently)-.275 F 2.75(,i)-.715 G 2.75
(nt)-2.75 G(he future,)-2.75 E 23.65<8349>72 633.6 S 2.75(Ft)-23.65 G
(he de)-2.75 E(vice is not grabbed and the speci\214ed k)-.275 E -.165
(ey)-.11 G 2.75(,w)-.55 G(hich itself can be a modi\214er k)-2.75 E
-.165(ey)-.11 G 2.75(,i)-.55 G 2.75(sl)-2.75 G(og-)-2.75 E
(ically pressed when the speci\214ed modi\214er k)99.5 645.6 Q -.165(ey)
-.11 G 2.75(sl).165 G(ogically are do)-2.75 E
(wn on the speci\214ed modi\214er)-.275 E(de)99.5 657.6 Q
(vice \(and no other k)-.275 E -.165(ey)-.11 G 2.75(sa).165 G(re do)
-2.75 E(wn\),)-.275 E 23.65<8341>72 673.2 S(ND no other modi\214er k)
-23.65 E -.165(ey)-.11 G 2.75(sl).165 G(ogically are do)-2.75 E(wn,)
-.275 E 23.65<8341>72 688.8 S(ND EITHER the grab windo)-23.65 E 2.75(wi)
-.275 G 2.75(sa)-2.75 G 2.75(na)-2.75 G
(ncestor of \(or is\) the focus windo)-2.75 E 2.75(wo)-.275 G 2.75(rt)
-2.75 G(he grab win-)-2.75 E(do)99.5 700.8 Q 2.75(wi)-.275 G 2.75(sad)
-2.75 G(escendent of the focus windo)-2.75 E 2.75(wa)-.275 G
(nd contains the pointer)-2.75 E(,)-.44 E 23.65<8341>72 716.4 S
(ND a passi)-23.65 E .33 -.165(ve g)-.275 H(rab on the same de).165 E
(vice and k)-.275 E .33 -.165(ey c)-.11 H(ombination does not e).165 E
(xist on an)-.165 E 2.75(ya)-.165 G(ncestor)-2.75 E(of the grab windo)
99.5 728.4 Q -.715(w,)-.275 G F1(8)285.25 768 Q EP
%%Page: 9 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF 23.65<8354>72 84 S(HEN the de)-23.65 E(vice is acti)
-.275 E -.165(ve)-.275 G(ly grabbed, as for).165 E F1(XGrabDe)3.666 E
(vice)-.165 E F2 2.75(,t).916 G(he last-de)-2.75 E
(vice-grab time is set)-.275 E(to the time at which the k)99.5 96 Q .33
-.165(ey w)-.11 H(as pressed \(as transmitted in the).055 E F1(De)3.666
E(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E F2 -2.365 -.275(ev e)3.666 H
(nt\), and).275 E(the)99.5 108 Q F1(De)3.666 E(viceK)-.165 E(eyPr)-.275
E(ess)-.198 E F2 -2.365 -.275(ev e)3.666 H(nt is reported.).275 E
(The interpretation of the remaining ar)72 123.6 Q(guments is as for)
-.198 E F1(XGrabDe)3.666 E(vice)-.165 E F2 5.5(.T).916 G(he acti)-5.5 E
.33 -.165(ve g)-.275 H(rab is termi-).165 E
(nated automatically when the logical state of the de)72 135.6 Q
(vice has the speci\214ed k)-.275 E .33 -.165(ey r)-.11 H
(eleased \(indepen-).165 E
(dent of the logical state of the modi\214er k)72 147.6 Q -.165(ey)-.11
G(s\).).165 E(Note that the logical state of a de)72 163.2 Q
(vice \(as seen by means of the X protocol\) may lag the ph)-.275 E
(ysical)-.055 E(state if de)72 175.2 Q(vice e)-.275 E -.165(ve)-.275 G
(nt processing is frozen.).165 E 2.75(Am)72 190.8 S(odi\214er of)-2.75 E
F1(AnyModi\214er)3.666 E F2(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the request for all possible modi\214er combina-).275 E
(tions \(including the combination of no modi\214ers\).)72 202.8 Q
(It is not required that all modi\214ers speci\214ed)5.5 E(ha)72 214.8 Q
.33 -.165(ve c)-.22 H(urrently assigned k).165 E -.165(ey)-.11 G 2.75
(codes. A).165 F -.11(ke)2.75 G 2.75(yo)-.055 G(f)-2.75 E F1(AnyK)3.666
E(ey)-.275 E F2(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the request for all).275 E(possible k)72 226.8 Q -.165
(ey)-.11 G 2.75(codes. Otherwise,).165 F(the k)2.75 E .33 -.165(ey m)
-.11 H(ust be in the range speci\214ed by min_k).165 E -.165(ey)-.11 G
(code and).165 E(max_k)72 238.8 Q -.165(ey)-.11 G
(code in the information returned by the).165 E F1(XListInputDe)3.666 E
(vices)-.165 E F2 2.75(function. If)3.666 F(it is not within)2.75 E
(that range,)72 250.8 Q F1(XGrabDe)3.666 E(viceK)-.165 E(ey)-.275 E F2
(generates a)3.666 E F1(BadV)3.666 E(alue)-1.012 E F2(error)3.666 E(.)
-.605 E F1(XGrabDe)72.916 266.4 Q(viceK)-.165 E(ey)-.275 E F2
(generates a)3.666 E F1(BadAccess)3.666 E F2
(error if some other client has issued a)3.666 E F1(XGrabDe-)3.666 E
(viceK)72 278.4 Q(ey)-.275 E F2(with the same de)3.666 E(vice and k)
-.275 E .33 -.165(ey c)-.11 H(ombination on the same windo).165 E 4.18
-.715(w. W)-.275 H(hen using).715 E F1(AnyMod-)3.666 E(i\214er)72 290.4
Q F2(or)3.666 E F1(AnyK)3.666 E(ey)-.275 E F2 2.75(,t).916 G
(he request f)-2.75 E(ails completely and the X serv)-.11 E
(er generates a)-.165 E F1(BadAccess)3.666 E F2(error)3.666 E 2.75(,a)
-.44 G(nd)-2.75 E
(no grabs are established if there is a con\215icting grab for an)72
302.4 Q 2.75(yc)-.165 G(ombination.)-2.75 E F1(XGrabDe)72.916 318 Q
(viceK)-.165 E(ey)-.275 E F2(returns)3.666 E F1(Success)3.666 E F2
(upon successful completion of the request.)3.666 E F1(XGrabDe)72.916
333.6 Q(viceK)-.165 E(ey)-.275 E F2(can generate)3.666 E F1(BadAccess)
3.666 E F2(,).916 E F1(BadClass)3.666 E F2(,).916 E F1(BadDe)3.666 E
(vice)-.165 E F2(,).916 E F1(BadMatch)3.666 E F2(,).916 E F1(BadV)3.666
E(alue)-1.012 E F2(,).916 E(and)72 345.6 Q F1(BadW)3.666 E(indo)-.198 E
(w)-.11 E F2(errors.)3.666 E 1.76 -.88(To r)72 373.2 T(elease a passi)
.88 E .33 -.165(ve g)-.275 H(rab of a single k).165 E .33 -.165(ey o)
-.11 H 2.75(na).165 G 2.75(ne)-2.75 G(xtension de)-2.915 E(vice, use)
-.275 E F1(XUngrabDe)3.666 E(viceK)-.165 E(ey)-.275 E F2(.).916 E .44 LW
36 388.95 36 399.95 DL 36 387.95 36 398.95 DL 41.5 386.2 36 386.2 DL
42.5 386.2 37 386.2 DL 48 386.2 42.5 386.2 DL(int XUngrabDe)72 400.8 Q
(viceK)-.275 E -.165(ey)-.275 G(\().165 E/F3 11/Times-Italic@0 SF
(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3 -.11(ke)
2.75 G(ycode)-.22 E F2(,).916 E F3(modi\214er)2.75 E(s)-.11 E F2(,).916
E F3(modi\214er_de)2.75 E(vice)-.165 E F2(,).916 E F3(ungr)2.75 E
(ab_window)-.165 E F2(\)).916 E(Display *)85.75 412.8 Q F3(display)A F2
(;).916 E(XDe)85.75 424.8 Q(vice *)-.275 E F3(de)A(vice)-.165 E F2(;)
.916 E(int)85.75 436.8 Q F3 -.11(ke)2.75 G(ycode)-.22 E F2(;).916 E
(unsigned int)85.75 448.8 Q F3(modi\214er)2.75 E(s)-.11 E F2(;).916 E
(XDe)85.75 460.8 Q(vice *)-.275 E F3(modi\214er_de)A(vice)-.165 E F2(;)
.916 E -.44(Wi)85.75 472.8 S(ndo).44 E(w)-.275 E F3(ungr)2.75 E
(ab_window)-.165 E F2(;).916 E F3(display)72 492 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 507.6 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3 -.11(ke)72 523.2 S(ycode)-.22 E F2 .39
(Speci\214es the k)37.02 F -.165(ey)-.11 G .39(code of the k).165 F .72
-.165(ey t)-.11 H .39(hat is to be ungrabbed.).165 F -1.21(Yo)5.891 G
3.141(uc)1.21 G .391(an pass either the)-3.141 F -.11(ke)144 535.2 S
(ycode or)-.055 E F1(AnyK)3.666 E(ey)-.275 E F2(.).916 E F3(modi\214er)
72 550.8 Q(s)-.11 E F2 1.495(Speci\214es the set of k)31.168 F -.165(ey)
-.11 G 4.245(masks. This).165 F 1.494(mask is the bitwise inclusi)4.245
F 1.824 -.165(ve O)-.275 H 4.244(Ro).165 G 4.244(ft)-4.244 G(hese)-4.244
E -.11(ke)144 562.8 S 10.921(ymask bits:)-.055 F F1(ShiftMask)14.587 E
F2(,).916 E F1(LockMask)14.587 E F2(,).916 E F1(Contr)14.587 E(olMask)
-.198 E F2(,).916 E F1(Mod1Mask)14.587 E F2(,).916 E F1(Mod2Mask)144.916
574.8 Q F2(,).916 E F1(Mod3Mask)3.666 E F2(,).916 E F1(Mod4Mask)3.666 E
F2 2.75(,a).916 G(nd)-2.75 E F1(Mod5Mask)3.666 E F2(.).916 E -1.21(Yo)
144 590.4 S 3.869(uc)1.21 G 1.119(an also pass)-3.869 F F1
(AnyModi\214er)4.785 E F2 3.869(,w).916 G 1.119(hich is equi)-3.869 F
-.275(va)-.275 G 1.119(lent to issuing the ungrab k).275 F -.165(ey)-.11
G 1.046(request for all possible modi\214er combinations \(including th\
e combination of no)144 602.4 R(modi\214ers\).)144 614.4 Q F3
(modi\214er_de)72 630 Q(vice)-.165 E F2 .954(Speci\214es the de)37.908 F
.954(vice whose modi\214ers are to be used.)-.275 F .953
(If NULL is speci-)6.454 F(\214ed, the core X k)180 642 Q -.165(ey)-.11
G(board is used as the modi\214er_de).165 E(vice.)-.275 E F3(ungr)72
657.6 Q(ab_window)-.165 E F2 .484(Speci\214es the ID of a windo)36.654 F
3.235(wa)-.275 G .485(ssociated with the de)-3.235 F .485
(vice speci\214ed abo)-.275 F -.165(ve)-.165 G(.).165 E 36 652.95 36
663.95 DL 36 651.95 36 662.95 DL 41.5 662.2 36 662.2 DL 42.5 662.2 37
662.2 DL 48 662.2 42.5 662.2 DL F1(XUngrabDe)72.916 685.2 Q(viceK)-.165
E(ey)-.275 E F2(is analogous to the core)3.666 E F1(XUngrabK)3.666 E(ey)
-.275 E F2 2.75(function. It)3.666 F(releases an e)2.75 E(xplicit pas-)
-.165 E(si)72 697.2 Q .33 -.165(ve g)-.275 H(rab for a k).165 E .33
-.165(ey o)-.11 H 2.75(na).165 G 2.75(ne)-2.75 G(xtension input de)
-2.915 E(vice.)-.275 E F1(XUngrabDe)72.916 712.8 Q(viceK)-.165 E(ey)
-.275 E F2(can generate)3.666 E F1(BadAlloc)3.666 E F2(,).916 E F1
(BadDe)3.666 E(vice)-.165 E F2(,).916 E F1(BadMatch)3.666 E F2(,).916 E
F1(BadV)3.666 E(alue)-1.012 E F2 2.75(,a).916 G(nd)-2.75 E F1(Bad-)3.666
E -.198(Wi)72 724.8 S(ndo).198 E(w)-.11 E F2(errors.)3.666 E F1(9)285.25
768 Q EP
%%Page: 10 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
2.75(2.1.5. P)72 84 R(assi)-.11 E -.11(ve)-.11 G(ly Grab).11 E
(bing a Button)-.11 E/F2 11/Times-Roman@0 SF 1.76 -.88(To e)72 99.6 T
(stablish a passi).88 E .33 -.165(ve g)-.275 H(rab for a single b).165 E
(utton on an e)-.22 E(xtension de)-.165 E(vice, use)-.275 E F1(XGrabDe)
3.666 E(viceButton)-.165 E F2(.).916 E(The speci\214ed de)72 111.6 Q
(vice must ha)-.275 E .33 -.165(ve p)-.22 H(re).165 E
(viously been opened using the)-.275 E F1(XOpenDe)3.666 E(vice)-.165 E
F2(function, or the)3.666 E(request will f)72 123.6 Q(ail with a)-.11 E
F1(BadDe)3.666 E(vice)-.165 E F2(error)3.666 E 5.5(.I)-.605 G 2.75(ft)
-5.5 G(he speci\214ed de)-2.75 E(vice does not support input class)-.275
E F1(Buttons)72.916 135.6 Q F2 2.75(,t).916 G(he request will f)-2.75 E
(ail with a)-.11 E F1(BadMatch)3.666 E F2(error)3.666 E(.)-.605 E .44 LW
36 151.35 36 162.35 DL 36 150.35 36 161.35 DL 41.5 148.6 36 148.6 DL
42.5 148.6 37 148.6 DL 48 148.6 42.5 148.6 DL(int XGrabDe)72 163.2 Q
(viceButton\()-.275 E/F3 11/Times-Italic@0 SF(display)A F2(,).916 E F3
(de)2.75 E(vice)-.165 E F2(,).916 E F3 -.22(bu)2.75 G(tton).22 E F2(,)
.916 E F3(modi\214er)2.75 E(s)-.11 E F2(,).916 E F3(modi\214er_de)2.75 E
(vice)-.165 E F2(,)3.666 E F3(gr)2.75 E(ab_window)-.165 E F2(,).916 E F3
(owner_e)118.75 175.2 Q(vents)-.165 E F2(,).916 E F3 -.165(ev)2.75 G
(ent_count).165 E F2(,).916 E F3 -.165(ev)2.75 G(ent_list).165 E F2(,)
.916 E F3(this_de)2.75 E(vice_mode)-.165 E F2(,).916 E F3(other_de)2.75
E(vice_mode)-.165 E F2(\)).916 E(Display *)85.75 187.2 Q F3(display)A F2
(;).916 E(XDe)85.75 199.2 Q(vice *)-.275 E F3(de)A(vice)-.165 E F2(;)
.916 E(unsigned int)85.75 211.2 Q F3 -.22(bu)2.75 G(tton).22 E F2(;).916
E(unsigned int)85.75 223.2 Q F3(modi\214er)2.75 E(s)-.11 E F2(;).916 E
(XDe)85.75 235.2 Q(vice *)-.275 E F3(modi\214er_de)A(vice)-.165 E F2(;)
3.666 E -.44(Wi)85.75 247.2 S(ndo).44 E(w)-.275 E F3(gr)2.75 E
(ab_window)-.165 E F2(;).916 E(Bool)85.75 259.2 Q F3(owner_e)2.75 E
(vents)-.165 E F2(;).916 E(int)85.75 271.2 Q F3 -.165(ev)2.75 G
(ent_count).165 E F2(;).916 E(XEv)85.75 283.2 Q(entClass *)-.165 E F3
-.165(ev)C(ent_list).165 E F2(;).916 E(int)85.75 295.2 Q F3(this_de)2.75
E(vice_mode)-.165 E F2(;).916 E(int)85.75 307.2 Q F3(other_de)2.75 E
(vice_mode)-.165 E F2(;).916 E F3(display)72 326.4 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 342 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3 -.22(bu)72 357.6 S(tton).22 E F2 1.345
(Speci\214es the code of the b)44.104 F 1.345
(utton that is to be grabbed.)-.22 F -1.21(Yo)6.845 G 4.095(uc)1.21 G
1.346(an pass either the)-4.095 F -.22(bu)144 369.6 S(tton or).22 E F1
(AnyButton)3.666 E F2(.).916 E F3(modi\214er)72 385.2 Q(s)-.11 E F2
1.495(Speci\214es the set of k)31.168 F -.165(ey)-.11 G 4.245
(masks. This).165 F 1.494(mask is the bitwise inclusi)4.245 F 1.824
-.165(ve O)-.275 H 4.244(Ro).165 G 4.244(ft)-4.244 G(hese)-4.244 E -.11
(ke)144 397.2 S 10.921(ymask bits:)-.055 F F1(ShiftMask)14.587 E F2(,)
.916 E F1(LockMask)14.587 E F2(,).916 E F1(Contr)14.587 E(olMask)-.198 E
F2(,).916 E F1(Mod1Mask)14.587 E F2(,).916 E F1(Mod2Mask)144.916 409.2 Q
F2(,).916 E F1(Mod3Mask)3.666 E F2(,).916 E F1(Mod4Mask)3.666 E F2 2.75
(,a).916 G(nd)-2.75 E F1(Mod5Mask)3.666 E F2(.).916 E -1.21(Yo)144 424.8
S 3.44(uc)1.21 G .689(an also pass)-3.44 F F1(AnyModi\214er)4.355 E F2
3.439(,w).916 G .689(hich is equi)-3.439 F -.275(va)-.275 G .689
(lent to issuing the grab request).275 F 1.595(for all possible modi\
\214er combinations \(including the combination of no modi-)144 436.8 R
(\214ers\).)144 448.8 Q F3(modi\214er_de)72 464.4 Q(vice)-.165 E F2
1.206(Speci\214es the de)1.908 F 1.205
(vice whose modi\214ers are to be used.)-.275 F 1.205
(If NULL is speci\214ed, the)6.705 F(core X k)144 476.4 Q -.165(ey)-.11
G(board is used as the modi\214er_de).165 E(vice.)-.275 E F3(gr)72 492 Q
(ab_window)-.165 E F2(Speci\214es the ID of a windo)11.654 E 2.75(wa)
-.275 G(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275 E -.165
(ve)-.165 G(.).165 E F3(owner_e)72 507.6 Q(vents)-.165 E F2
(Speci\214es a boolean v)11.676 E(alue of either)-.275 E F1 -.814(Tr)
3.666 G(ue).814 E F2(or)3.666 E F1 -.275(Fa)3.666 G(lse).275 E F2(.).916
E F3 -.165(ev)72 523.2 S(ent_count).165 E F2
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nt_list array).165 E(.)-.715 E F3 -.165(ev)72 538.8 S(ent_list).165 E
F2 1.226(Speci\214es a list of e)30.002 F -.165(ve)-.275 G 1.227
(nt classes that indicates which de).165 F 1.227(vice e)-.275 F -.165
(ve)-.275 G 1.227(nts are to be re-).165 F(ported to the client.)144
550.8 Q F3(this_de)72 566.4 Q(vice_mode)-.165 E F2 .134
(Controls further processing of e)144 578.4 R -.165(ve)-.275 G .134
(nts from this de).165 F 2.884(vice. Y)-.275 F .134
(ou can pass one of these)-1.21 F(constants:)144 590.4 Q F1
(GrabModeSync)3.666 E F2(or)3.666 E F1(GrabModeAsync)3.666 E F2(.).916 E
F3(other_de)72 606 Q(vice_mode)-.165 E F2 .181
(Controls further processing of e)144 618 R -.165(ve)-.275 G .181
(nts from all other de).165 F 2.931(vices. Y)-.275 F .182
(ou can pass one of)-1.21 F(these constants:)144 630 Q F1(GrabModeSync)
3.666 E F2(or)3.666 E F1(GrabModeAsync)3.666 E F2(.).916 E 36 625.35 36
636.35 DL 36 624.35 36 635.35 DL 41.5 634.6 36 634.6 DL 42.5 634.6 37
634.6 DL 48 634.6 42.5 634.6 DL F1(XGrabDe)72.916 657.6 Q(viceButton)
-.165 E F2(is analogous to the core)3.666 E F1(XGrabButton)3.666 E F2
2.75(function. It)3.666 F(creates an e)2.75 E(xplicit)-.165 E(passi)72
669.6 Q .33 -.165(ve g)-.275 H(rab for a b).165 E(utton on an e)-.22 E
(xtension input de)-.165 E 2.75(vice. Because)-.275 F(the serv)2.75 E
(er does not track e)-.165 E(xten-)-.165 E(sion de)72 681.6 Q
(vices, no cursor is speci\214ed with this request.)-.275 E -.165(Fo)5.5
G 2.75(rt).165 G(he same reason, there is no con\214ne_to)-2.75 E
(parameter)72 693.6 Q 5.5(.T)-.605 G(he de)-5.5 E(vice must ha)-.275 E
.33 -.165(ve p)-.22 H(re).165 E(viously been opened using the)-.275 E F1
(XOpenDe)3.666 E(vice)-.165 E F2(function.)3.666 E(The)72 709.2 Q F1
(XGrabDe)3.666 E(viceButton)-.165 E F2(function establishes a passi)
3.666 E .33 -.165(ve g)-.275 H(rab on a de).165 E 2.75
(vice. Consequently)-.275 F 2.75(,i)-.715 G 2.75(nt)-2.75 G(he)-2.75 E
(future,)72 721.2 Q F1(10)282.5 768 Q EP
%%Page: 11 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF 23.65<8349>72 84 S 2.75(Ft)-23.65 G(he de)-2.75 E
(vice is not grabbed and the speci\214ed b)-.275 E
(utton is logically pressed when the speci\214ed)-.22 E(modi\214er k)
99.5 96 Q -.165(ey)-.11 G 2.75(sl).165 G(ogically are do)-2.75 E
(wn \(and no other b)-.275 E(uttons or modi\214er k)-.22 E -.165(ey)-.11
G 2.75(sa).165 G(re do)-2.75 E(wn\),)-.275 E 23.65<8341>72 111.6 S
(ND EITHER the grab windo)-23.65 E 2.75(wi)-.275 G 2.75(sa)-2.75 G 2.75
(na)-2.75 G(ncestor of \(or is\) the focus windo)-2.75 E 2.75(wO)-.275 G
2.75(Rt)-2.75 G(he grab)-2.75 E(windo)99.5 123.6 Q 2.75(wi)-.275 G 2.75
(sad)-2.75 G(escendent of the focus windo)-2.75 E 2.75(wa)-.275 G
(nd contains the pointer)-2.75 E(,)-.44 E 23.65<8341>72 139.2 S
(ND a passi)-23.65 E .33 -.165(ve g)-.275 H(rab on the same de).165 E
(vice and b)-.275 E(utton/k)-.22 E .33 -.165(ey c)-.11 H
(ombination does not e).165 E(xist on an)-.165 E(y)-.165 E
(ancestor of the grab windo)99.5 151.2 Q -.715(w,)-.275 G 23.65<8354>72
166.8 S(HEN the de)-23.65 E(vice is acti)-.275 E -.165(ve)-.275 G
(ly grabbed, as for).165 E F1(XGrabDe)3.666 E(vice)-.165 E F2 2.75(,t)
.916 G(he last-grab time is set to the)-2.75 E(time at which the b)99.5
178.8 Q(utton w)-.22 E(as pressed \(as transmitted in the)-.11 E F1(De)
3.666 E(viceButtonPr)-.165 E(ess)-.198 E F2 -2.365 -.275(ev e)3.666 H
(nt\), and).275 E(the)99.5 190.8 Q F1(De)3.666 E(viceButtonPr)-.165 E
(ess)-.198 E F2 -2.365 -.275(ev e)3.666 H(nt is reported.).275 E
(The interpretation of the remaining ar)72 206.4 Q(guments is as for)
-.198 E F1(XGrabDe)3.666 E(vice)-.165 E F2 5.5(.T).916 G(he acti)-5.5 E
.33 -.165(ve g)-.275 H(rab is termi-).165 E
(nated automatically when logical state of the de)72 218.4 Q
(vice has all b)-.275 E(uttons released \(independent of the)-.22 E
(logical state of the modi\214er k)72 230.4 Q -.165(ey)-.11 G(s\).).165
E(Note that the logical state of a de)72 246 Q
(vice \(as seen by means of the X protocol\) may lag the ph)-.275 E
(ysical)-.055 E(state if de)72 258 Q(vice e)-.275 E -.165(ve)-.275 G
(nt processing is frozen.).165 E 2.75(Am)72 273.6 S(odi\214er of)-2.75 E
F1(AnyModi\214er)3.666 E F2(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the request for all possible modi\214er combina-).275 E
(tions \(including the combination of no modi\214ers\).)72 285.6 Q
(It is not required that all modi\214ers speci\214ed)5.5 E(ha)72 297.6 Q
.33 -.165(ve c)-.22 H(urrently assigned k).165 E -.165(ey)-.11 G 2.75
(codes. A).165 F -.22(bu)2.75 G(tton of).22 E F1(AnyButton)3.666 E F2
(is equi)3.666 E -.275(va)-.275 G(lent to issuing the request for).275 E
(all possible b)72 309.6 Q 2.75(uttons. Otherwise,)-.22 F
(it is not required that the speci\214ed b)2.75 E
(utton be assigned to a ph)-.22 E(ysi-)-.055 E(cal b)72 321.6 Q(utton.)
-.22 E F1(XGrabDe)72.916 337.2 Q(viceButton)-.165 E F2(generates a)3.666
E F1(BadAccess)3.666 E F2(error if some other client has issued a)3.666
E F1(XGrabDe-)3.666 E(viceButton)72 349.2 Q F2(with the same de)3.666 E
(vice and b)-.275 E(utton combination on the same windo)-.22 E 4.18
-.715(w. W)-.275 H(hen using).715 E F1(AnyModi\214er)72.916 361.2 Q F2
(or)3.666 E F1(AnyButton)3.666 E F2 2.75(,t).916 G(he request f)-2.75 E
(ails completely and the X serv)-.11 E(er generates a)-.165 E F1(BadAc-)
3.666 E(cess)72 373.2 Q F2(error and no grabs are established if there \
is a con\215icting grab for an)3.666 E 2.75(yc)-.165 G(ombination.)-2.75
E F1(XGrabDe)72.916 388.8 Q(viceButton)-.165 E F2(can generate)3.666 E
F1(BadAccess)3.666 E F2(,).916 E F1(BadClass)3.666 E F2(,).916 E F1
(BadDe)3.666 E(vice)-.165 E F2(,).916 E F1(BadMatch)3.666 E F2(,).916 E
F1(BadV)3.666 E(alue)-1.012 E F2(,).916 E(and)72 400.8 Q F1(BadW)3.666 E
(indo)-.198 E(w)-.11 E F2(errors.)3.666 E 1.76 -.88(To r)72 428.4 T
(elease a passi).88 E .33 -.165(ve g)-.275 H(rab of a b).165 E
(utton on an e)-.22 E(xtension de)-.165 E(vice, use)-.275 E F1
(XUngrabDe)3.666 E(viceButton)-.165 E F2(.).916 E F1(11)282.5 768 Q EP
%%Page: 12 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(int XUngrabDe)72
99.6 Q(viceButton\()-.275 E/F3 11/Times-Italic@0 SF(display)A F2(,).916
E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3 -.22(bu)2.75 G(tton).22 E F2
(,).916 E F3(modi\214er)2.75 E(s)-.11 E F2(,).916 E F3(modi\214er_de)
2.75 E(vice)-.165 E F2(,).916 E F3(ungr)2.75 E(ab_window)-.165 E F2(\))
.916 E(Display *)85.75 111.6 Q F3(display)A F2(;).916 E(XDe)85.75 123.6
Q(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E(unsigned int)85.75
135.6 Q F3 -.22(bu)2.75 G(tton).22 E F2(;).916 E(unsigned int)85.75
147.6 Q F3(modi\214er)2.75 E(s)-.11 E F2(;).916 E(XDe)85.75 159.6 Q
(vice *)-.275 E F3(modi\214er_de)A(vice)-.165 E F2(;).916 E -.44(Wi)
85.75 171.6 S(ndo).44 E(w)-.275 E F3(ungr)2.75 E(ab_window)-.165 E F2(;)
.916 E F3(display)72 190.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 206.4 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3 -.22(bu)72 222 S(tton).22 E F2 1.183
(Speci\214es the code of the b)44.104 F 1.182
(utton that is to be ungrabbed.)-.22 F -1.21(Yo)6.682 G 3.932(uc)1.21 G
1.182(an pass either a)-3.932 F -.22(bu)144 234 S(tton or).22 E F1
(AnyButton)3.666 E F2(.).916 E F3(modi\214er)72 249.6 Q(s)-.11 E F2
1.494(Speci\214es the set of k)31.168 F -.165(ey)-.11 G 4.244
(masks. This).165 F 1.495(mask is the bitwise inclusi)4.244 F 1.825
-.165(ve O)-.275 H 4.245(Ro).165 G 4.245(ft)-4.245 G(hese)-4.245 E -.11
(ke)144 261.6 S 10.921(ymask bits:)-.055 F F1(ShiftMask)14.587 E F2(,)
.916 E F1(LockMask)14.587 E F2(,).916 E F1(Contr)14.587 E(olMask)-.198 E
F2(,).916 E F1(Mod1Mask)14.587 E F2(,).916 E F1(Mod2Mask)144.916 273.6 Q
F2(,).916 E F1(Mod3Mask)3.666 E F2(,).916 E F1(Mod4Mask)3.666 E F2 2.75
(,a).916 G(nd)-2.75 E F1(Mod5Mask)3.666 E F2(.).916 E -1.21(Yo)144 289.2
S 3.869(uc)1.21 G 1.119(an also pass)-3.869 F F1(AnyModi\214er)4.785 E
F2 3.869(,w).916 G 1.119(hich is equi)-3.869 F -.275(va)-.275 G 1.119
(lent to issuing the ungrab k).275 F -.165(ey)-.11 G 1.046(request for \
all possible modi\214er combinations \(including the combination of no)
144 301.2 R(modi\214ers\).)144 313.2 Q F3(modi\214er_de)72 328.8 Q(vice)
-.165 E F2 1.205(Speci\214es the de)1.908 F 1.205
(vice whose modi\214ers are to be used.)-.275 F 1.205
(If NULL is speci\214ed, the)6.705 F(core X k)144 340.8 Q -.165(ey)-.11
G(board is used as the modi\214er_de).165 E(vice.)-.275 E F3(ungr)72
356.4 Q(ab_window)-.165 E F2(Speci\214es the ID of a windo).654 E 2.75
(wa)-.275 G(ssociated with the de)-2.75 E(vice speci\214ed abo)-.275 E
-.165(ve)-.165 G(.).165 E 36 351.75 36 362.75 DL 36 350.75 36 361.75 DL
41.5 361 36 361 DL 42.5 361 37 361 DL 48 361 42.5 361 DL F1(XUngrabDe)
72.916 384 Q(viceButton)-.165 E F2(is analogous to the core)3.666 E F1
(XUngrabButton)3.666 E F2 2.75(function. It)3.666 F(releases an)2.75 E
-.165(ex)72 396 S(plicit passi).165 E .33 -.165(ve g)-.275 H
(rab for a b).165 E(utton on an e)-.22 E(xtension de)-.165 E 2.75
(vice. That)-.275 F(de)2.75 E(vice must ha)-.275 E .33 -.165(ve p)-.22 H
(re).165 E(viously been)-.275 E(opened using the)72 408 Q F1(XOpenDe)
3.666 E(vice)-.165 E F2(function, or a)3.666 E F1(BadDe)3.666 E(vice)
-.165 E F2(error will result.)3.666 E 2.75(Am)72 423.6 S(odi\214er of)
-2.75 E F1(AnyModi\214er)3.666 E F2(is equi)3.666 E -.275(va)-.275 G
(lent to issuing the request for all possible modi\214er combina-).275 E
(tions \(including the combination of no modi\214ers\).)72 435.6 Q F1
(XUngrabDe)72.916 451.2 Q(viceButton)-.165 E F2(can generate)3.666 E F1
(BadAlloc)3.666 E F2(,).916 E F1(BadDe)3.666 E(vice)-.165 E F2(,).916 E
F1(BadMatch)3.666 E F2(,).916 E F1(BadV)3.666 E(alue)-1.012 E F2 2.75
(,a).916 G(nd)-2.75 E F1(Bad-)3.666 E -.198(Wi)72 463.2 S(ndo).198 E(w)
-.11 E F2(errors.)3.666 E F1 2.75(2.1.6. Thawing)72 487.2 R 2.75(aD)2.75
G -.165(ev)-2.75 G(ice).165 E F2 1.76 -.88(To a)72 502.8 T(llo).88 E
2.75(wf)-.275 G(urther e)-2.75 E -.165(ve)-.275 G
(nts to be processed when a de).165 E(vice has been frozen, use)-.275 E
F1(XAllo)72.916 514.8 Q(wDe)-.11 E(viceEv)-.165 E(ents)-.11 E F2(.).916
E 36 530.55 36 541.55 DL 36 529.55 36 540.55 DL 41.5 527.8 36 527.8 DL
42.5 527.8 37 527.8 DL 48 527.8 42.5 527.8 DL(int XAllo)72 542.4 Q(wDe)
-.275 E(viceEv)-.275 E(ents\()-.165 E F3(display)A F2(,).916 E F3(de)
2.75 E(vice)-.165 E F2(,).916 E F3 -.165(ev)2.75 G(ent_mode).165 E F2(,)
.916 E F3(time)2.75 E F2(\)).916 E(Display *)85.75 554.4 Q F3(display)A
F2(;).916 E(XDe)85.75 566.4 Q(vice *)-.275 E F3(de)A(vice)-.165 E F2(;)
.916 E(int)85.75 578.4 Q F3 -.165(ev)2.75 G(ent_mode).165 E F2(;).916 E
-.385(Ti)85.75 590.4 S(me).385 E F3(time)2.75 E F2(;).916 E F3(display)
72 609.6 Q F2(Speci\214es the connection to the X serv)40.221 E(er)-.165
E(.)-.605 E F3(de)72 625.2 Q(vice)-.165 E F2(Speci\214es the desired de)
44.071 E(vice.)-.275 E F3 -.165(ev)72 640.8 S(ent_mode).165 E F2 8.241
(Speci\214es the e)19.629 F -.165(ve)-.275 G 8.241(nt mode.).165 F -1.21
(Yo)13.741 G 10.991(uc)1.21 G 8.242(an pass one of these constants:)
-10.991 F F1(AsyncThisDe)144.916 652.8 Q(vice)-.165 E F2(,).916 E F1
(SyncThisDe)4.22 E(vice)-.165 E F2(,).916 E F1(AsyncOtherDe)4.22 E
(vices)-.165 E F2(,).916 E F1(ReplayThisDe)4.22 E(vice)-.165 E F2(,).916
E F1(AsyncAll)144.916 664.8 Q F2 2.75(,o).916 G(r)-2.75 E F1(SyncAll)
3.666 E F2(.).916 E F3(time)72 680.4 Q F2 .402(Speci\214es the time.)
53.058 F .403(This may be either a timestamp e)5.902 F .403
(xpressed in milliseconds, or)-.165 F F1(Curr)144.916 692.4 Q(entT)-.198
E(ime)-.198 E F2(.).916 E 36 687.75 36 698.75 DL 36 686.75 36 697.75 DL
41.5 697 36 697 DL 42.5 697 37 697 DL 48 697 42.5 697 DL F1(XAllo)72.916
720 Q(wDe)-.11 E(viceEv)-.165 E(ents)-.11 E F2(releases some queued e)
3.666 E -.165(ve)-.275 G(nts if the client has caused a de).165 E
(vice to freeze.)-.275 E(It)5.5 E F1(12)282.5 768 Q EP
%%Page: 13 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(has no ef)72 84 Q(fect if the speci\214ed time is e\
arlier than the last-grab time of the most recent acti)-.275 E .33 -.165
(ve g)-.275 H(rab).165 E(for the client and de)72 96 Q
(vice, or if the speci\214ed time is later than the current X serv)-.275
E(er time.)-.165 E(The fol-)5.5 E(lo)72 108 Q(wing describes the proces\
sing that occurs depending on what constant you pass to the)-.275 E
-2.365 -.275(ev e)72 120 T(nt_mode ar).275 E(gument:)-.198 E<83>72 135.6
Q F1(AsyncThisDe)24.566 E(vice)-.165 E F2(If the speci\214ed de)99.5
151.2 Q(vice is frozen by the client, e)-.275 E -.165(ve)-.275 G
(nt processing for that continues as usual.).165 E(If the de)99.5 163.2
Q(vice is frozen multiple times by the client on behalf of multiple sep\
arate grabs,)-.275 E F1(AsyncThisDe)100.416 175.2 Q(vice)-.165 E F2(tha)
3.666 E(ws for all.)-.165 E F1(AsyncThisDe)6.416 E(vice)-.165 E F2
(has no ef)3.666 E(fect if the speci\214ed de)-.275 E(vice is)-.275 E
(not frozen by the client, b)99.5 187.2 Q(ut the de)-.22 E
(vice need not be grabbed by the client.)-.275 E<83>72 202.8 Q F1
(SyncThisDe)24.566 E(vice)-.165 E F2(If the speci\214ed de)99.5 218.4 Q
(vice is frozen and acti)-.275 E -.165(ve)-.275 G
(ly grabbed by the client, e).165 E -.165(ve)-.275 G
(nt processing for that).165 E(de)99.5 230.4 Q
(vice continues normally until the ne)-.275 E(xt k)-.165 E .33 -.165
(ey o)-.11 H 2.75(rb).165 G(utton e)-2.97 E -.165(ve)-.275 G
(nt is reported to the client.).165 E(At)5.5 E
(this time, the speci\214ed de)99.5 242.4 Q(vice ag)-.275 E
(ain appears to freeze.)-.055 E(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88
-.44(r, i).165 H 2.75(ft).44 G(he reported e)-2.75 E -.165(ve)-.275 G
(nt).165 E(causes the grab to be released, the speci\214ed de)99.5 254.4
Q(vice does not freeze.)-.275 E F1(SyncThisDe)6.416 E(vice)-.165 E F2
(has)3.666 E(no ef)99.5 266.4 Q(fect if the speci\214ed de)-.275 E
(vice is not frozen by the client or is not grabbed by the client.)-.275
E<83>72 282 Q F1(ReplayThisDe)24.566 E(vice)-.165 E F2
(If the speci\214ed de)99.5 297.6 Q(vice is acti)-.275 E -.165(ve)-.275
G(ly grabbed by the client and is frozen as the result of an).165 E
-2.365 -.275(ev e)99.5 309.6 T(nt ha).275 E
(ving been sent to the client \(either from the acti)-.22 E -.275(va)
-.275 G(tion of a).275 E F1(GrabDe)3.666 E(viceButton)-.165 E F2(or)
3.666 E(from a pre)99.5 321.6 Q(vious)-.275 E F1(Allo)3.666 E(wDe)-.11 E
(viceEv)-.165 E(ents)-.11 E F2(with mode)3.666 E F1(SyncThisDe)3.666 E
(vice)-.165 E F2 2.75(,b).916 G(ut not from a)-2.97 E F1(Grab)3.666 E F2
(\),).916 E(the grab is released and that e)99.5 333.6 Q -.165(ve)-.275
G(nt is completely reprocessed.).165 E(This time, ho)5.5 E(we)-.275 E
-.165(ve)-.275 G .88 -.44(r, t).165 H(he).44 E(request ignores an)99.5
345.6 Q 2.75(yp)-.165 G(assi)-2.75 E .33 -.165(ve g)-.275 H
(rabs at or abo).165 E .33 -.165(ve \()-.165 H(to).165 E -.11(wa)-.275 G
(rd the root\) the grab-windo).11 E 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he grab)-2.75 E(just released.)99.5 357.6 Q(The request has no ef)5.5 E
(fect if the speci\214ed de)-.275 E(vice is not grabbed by the client)
-.275 E(or if it is not frozen as the result of an e)99.5 369.6 Q -.165
(ve)-.275 G(nt.).165 E<83>72 385.2 Q F1(AsyncOtherDe)24.566 E(vices)
-.165 E F2(If the remaining de)99.5 400.8 Q
(vices are frozen by the client, e)-.275 E -.165(ve)-.275 G
(nt processing for them continues as).165 E 2.75(usual. If)99.5 412.8 R
(the other de)2.75 E(vices are frozen multiple times)-.275 E
(by the client on behalf of multiple)5.5 E(separate grabs,)99.5 424.8 Q
F1(AsyncOtherDe)3.666 E(vices)-.165 E F2 -.814(``)3.666 G(tha).814 E
(ws')-.165 E 2.75('f)-.814 G(or all.)-2.75 E F1(AsyncOtherDe)6.416 E
(vices)-.165 E F2(has no ef)3.666 E(fect if)-.275 E(the de)99.5 436.8 Q
(vices are not frozen by the client, b)-.275 E(ut those de)-.22 E
(vices need not be grabbed by the client.)-.275 E<83>72 452.4 Q F1
(SyncAll)24.566 E F2(If all de)99.5 468 Q
(vices are frozen by the client, e)-.275 E -.165(ve)-.275 G
(nt processing \(for all de).165 E(vices\) continues normally)-.275 E
(until the ne)99.5 480 Q(xt b)-.165 E(utton or k)-.22 E .33 -.165(ey e)
-.11 H -.165(ve)-.11 G(nt is reported to the client for a grabbed de)
.165 E(vice, at which)-.275 E(time the de)99.5 492 Q(vices ag)-.275 E
(ain appear to freeze.)-.055 E(Ho)5.5 E(we)-.275 E -.165(ve)-.275 G .88
-.44(r, i).165 H 2.75(ft).44 G(he reported e)-2.75 E -.165(ve)-.275 G
(nt causes the grab to).165 E(be released, then the de)99.5 504 Q
(vices do not freeze \(b)-.275 E(ut if an)-.22 E 2.75(yd)-.165 G -.275
(ev)-2.75 G(ice is still grabbed, then a subse-).275 E(quent e)99.5 516
Q -.165(ve)-.275 G(nt for it will still cause all de).165 E
(vices to freeze\).)-.275 E F1(SyncAll)6.416 E F2(has no ef)3.666 E
(fect unless all)-.275 E(de)99.5 528 Q(vices are frozen by the client.)
-.275 E(If an)5.5 E 2.75(yd)-.165 G -.275(ev)-2.75 G
(ice is frozen twice by the client on behalf of tw).275 E(o)-.11 E
(separate grabs,)99.5 540 Q F1(SyncAll)3.666 E F2("tha)3.666 E
(ws" for both \(b)-.165 E(ut a subsequent freeze for)-.22 E F1(SyncAll)
3.666 E F2(will freeze)3.666 E(each de)99.5 552 Q(vice only once\).)
-.275 E<83>72 567.6 Q F1(AsyncAll)24.566 E F2(If all de)99.5 583.2 Q
(vices are frozen by the client, e)-.275 E -.165(ve)-.275 G
(nt processing \(for all de).165 E(vices\) continues normally)-.275 E(.)
-.715 E(If an)99.5 595.2 Q 2.75(yd)-.165 G -.275(ev)-2.75 G(ice is froz\
en multiple times by the client on behalf of multiple separate grabs,)
.275 E F1(AsyncAll)100.416 607.2 Q F2 -.814(``)3.666 G(tha).814 E(ws ')
-.165 E('for all.)-.814 E(If an)5.5 E 2.75(yd)-.165 G -.275(ev)-2.75 G
(ice is frozen twice by the client on behalf of tw).275 E 2.75(os)-.11 G
(ep-)-2.75 E(arate grabs,)99.5 619.2 Q F1(AsyncAll)3.666 E F2 -.814(``)
3.666 G(tha).814 E(ws')-.165 E 2.75('f)-.814 G(or both.)-2.75 E F1
(AsyncAll)6.416 E F2(has no ef)3.666 E(fect unless all de)-.275 E
(vices are)-.275 E(frozen by the client.)99.5 631.2 Q F1(AsyncThisDe)
72.916 646.8 Q(vice)-.165 E F2(,).916 E F1(SyncThisDe)3.666 E(vice)-.165
E F2 2.75(,a).916 G(nd)-2.75 E F1(ReplayThisDe)3.666 E(vice)-.165 E F2
(ha)3.666 E .33 -.165(ve n)-.22 H 2.75(oe).165 G -.275(ff)-2.75 G
(ect on the processing of).275 E -2.365 -.275(ev e)72 658.8 T
(nts from the remaining de).275 E(vices.)-.275 E F1(AsyncOtherDe)6.416 E
(vices)-.165 E F2(has no ef)3.666 E(fect on the processing of)-.275 E
-2.365 -.275(ev e)72 670.8 T(nts from the speci\214ed de).275 E 2.75
(vice. When)-.275 F(the e)2.75 E -.165(ve)-.275 G(nt_mode is).165 E F1
(SyncAll)3.666 E F2(or)3.666 E F1(AsyncAll)3.666 E F2 2.75(,t).916 G
(he de)-2.75 E(vice)-.275 E(parameter is ignored.)72 682.8 Q
(It is possible for se)72 698.4 Q -.165(ve)-.275 G(ral grabs of dif).165
E(ferent de)-.275 E(vices \(by the same or dif)-.275 E
(ferent clients\) to be acti)-.275 E -.165(ve)-.275 G(simultaneously)72
710.4 Q 5.5(.I)-.715 G 2.75(fad)-5.5 G -.275(ev)-2.75 G
(ice is frozen on behalf of an).275 E 2.75(yg)-.165 G(rab, no e)-2.75 E
-.165(ve)-.275 G(nt processing is performed for).165 E(the de)72 722.4 Q
2.75(vice. It)-.275 F(is possible for a single de)2.75 E
(vice to be frozen because of se)-.275 E -.165(ve)-.275 G(ral grabs.)
.165 E(In this case,)5.5 E F1(13)282.5 768 Q EP
%%Page: 14 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF
(the freeze must be released on behalf of each grab before e)72 84 Q
-.165(ve)-.275 G(nts can ag).165 E(ain be processed.)-.055 E F1(XAllo)
72.916 99.6 Q(wDe)-.11 E(viceEv)-.165 E(ents)-.11 E F2(can generate)
3.666 E F1(BadDe)3.666 E(vice)-.165 E F2(and)3.666 E F1(BadV)3.666 E
(alue)-1.012 E F2(errors.)3.666 E F1 2.75(2.1.7. Contr)72 123.6 R
(olling De)-.198 E(vice F)-.165 E(ocus)-.275 E F2
(The current focus windo)72 139.2 Q 2.75(wf)-.275 G(or an e)-2.75 E
(xtension input de)-.165 E(vice can be determined using the)-.275 E F1
(XGetDe-)3.666 E(viceF)72 151.2 Q(ocus)-.275 E F2 2.75
(function. Extension)3.666 F(de)2.75 E(vices are focused using the)-.275
E F1(XSetDe)3.666 E(viceF)-.165 E(ocus)-.275 E F2(function in the)3.666
E(same w)72 163.2 Q(ay that the k)-.11 E -.165(ey)-.11 G
(board is focused using the core).165 E F1(XSetInputF)3.666 E(ocus)-.275
E F2(function, e)3.666 E(xcept that a)-.165 E(de)72 175.2 Q
(vice ID is passed as a function parameter)-.275 E 5.5(.O)-.605 G
(ne additional focus state,)-5.5 E F1 -.275(Fo)3.666 G(llo).275 E(wK)
-.11 E(eyboard)-.275 E F2 2.75(,i).916 G(s)-2.75 E(pro)72 187.2 Q
(vided for e)-.165 E(xtension de)-.165 E(vices.)-.275 E 1.76 -.88(To g)
72 202.8 T(et the current focus state, re).88 E -.165(ve)-.275 G
(rt state, and focus time of an e).165 E(xtension de)-.165 E(vice, use)
-.275 E F1(XGetDe)72.916 214.8 Q(viceF)-.165 E(ocus)-.275 E F2(.).916 E
.44 LW 36 230.55 36 241.55 DL 36 229.55 36 240.55 DL 41.5 227.8 36 227.8
DL 42.5 227.8 37 227.8 DL 48 227.8 42.5 227.8 DL(int XGetDe)72 242.4 Q
(viceF)-.275 E(ocus\()-.165 E/F3 11/Times-Italic@0 SF(display)A F2(,)
.916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3(focus_r)2.75 E(eturn)
-.407 E F2(,).916 E F3 -2.101 -.407(re v)2.75 H(ert_to_r).407 E(eturn)
-.407 E F2(,).916 E F3(focus_time_r)2.75 E(eturn)-.407 E F2(\)).916 E
(Display *)85.75 254.4 Q F3(display)A F2(;).916 E(XDe)85.75 266.4 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E -.44(Wi)85.75 278.4 S
(ndo).44 E 2.75(w*)-.275 G F3(focus_r)-2.75 E(eturn)-.407 E F2(;).916 E
(int *)85.75 290.4 Q F3 -2.101 -.407(re v)D(ert_to_r).407 E(eturn)-.407
E F2(;).916 E -.385(Ti)85.75 302.4 S(me *).385 E F3(focus_time_r)A
(eturn)-.407 E F2(;).916 E F3(display)72 321.6 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 337.2 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3(focus_r)72 352.8 Q(eturn)-.407 E F2 .67
(Speci\214es the address of a v)16.186 F .67
(ariable into which the serv)-.275 F .671(er can return the ID of the)
-.165 F(windo)144 364.8 Q 8.032(wt)-.275 G 5.282(hat contains the de)
-8.032 F 5.282(vice focus or one of the constants)-.275 F F1(None)8.947
E F2(,).916 E F1 -.22(Po)144.916 376.8 S(interRoot).22 E F2 2.75(,o).916
G(r)-2.75 E F1 -.275(Fo)3.666 G(llo).275 E(wK)-.11 E(eyboard)-.275 E F2
(.).916 E F3 -2.101 -.407(re v)72 392.4 T(ert_to_r).407 E(eturn)-.407 E
F2 .236(Speci\214es the address of a v)B .236
(ariable into which the serv)-.275 F .237(er can return the current re-)
-.165 F -.165(ve)144 404.4 S(rt_to status for the de).165 E(vice.)-.275
E F3(focus_time_r)72 420 Q(eturn)-.407 E F2 .26
(Speci\214es the address of a v)144 432 R .26
(ariable into which the serv)-.275 F .259(er can return the focus time)
-.165 F(last set for the de)144 444 Q(vice.)-.275 E 36 439.35 36 450.35
DL 36 438.35 36 449.35 DL 41.5 448.6 36 448.6 DL 42.5 448.6 37 448.6 DL
48 448.6 42.5 448.6 DL F1(XGetDe)72.916 471.6 Q(viceF)-.165 E(ocus)-.275
E F2(returns the focus state, the re)3.666 E -.165(ve)-.275 G
(rt-to state, and the last-focus-time for an e).165 E(xten-)-.165 E
(sion input de)72 483.6 Q(vice.)-.275 E F1(XGetDe)72.916 499.2 Q(viceF)
-.165 E(ocus)-.275 E F2(can generate)3.666 E F1(BadDe)3.666 E(vice)-.165
E F2(and)3.666 E F1(BadMatch)3.666 E F2(errors.)3.666 E 1.76 -.88(To s)
72 526.8 T(et the focus of an e).88 E(xtension de)-.165 E(vice, use)
-.275 E F1(XSetDe)3.666 E(viceF)-.165 E(ocus)-.275 E F2(.).916 E F1(14)
282.5 768 Q EP
%%Page: 15 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(int XSetDe)72 99.6 Q
(viceF)-.275 E(ocus\()-.165 E/F3 11/Times-Italic@0 SF(display)A F2(,)
.916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3(focus)2.75 E F2(,).916 E
F3 -2.101 -.407(re v)2.75 H(ert_to).407 E F2(,).916 E F3(time)2.75 E F2
(\)).916 E(Display *)83 111.6 Q F3(display)A F2(;).916 E(XDe)83 123.6 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E -.44(Wi)83 135.6 S(ndo)
.44 E(w)-.275 E F3(focus)2.75 E F2(;).916 E(int)83 147.6 Q F3 -2.101
-.407(re v)2.75 H(ert_to).407 E F2(;).916 E -.385(Ti)83 159.6 S(me).385
E F3(time)2.75 E F2(;).916 E F3(display)72 178.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 194.4 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3(focus)72 210 Q F2 .963
(Speci\214es the ID of the windo)48.779 F 3.713(wt)-.275 G 3.713(ow)
-3.713 G .963(hich the de)-3.713 F(vice')-.275 E 3.713(sf)-.605 G .962
(ocus should be set.)-3.713 F(This)6.462 E(may be a windo)144 222 Q 2.75
(wI)-.275 G(D, or)-2.75 E F1 -.22(Po)3.666 G(interRoot).22 E F2(,).916 E
F1 -.275(Fo)3.666 G(llo).275 E(wK)-.11 E(eyboard)-.275 E F2 2.75(,o).916
G(r)-2.75 E F1(None)3.666 E F2(.).916 E F3 -2.101 -.407(re v)72 237.6 T
(ert_to).407 E F2 .297(Speci\214es to which windo)32.246 F 3.047(wt)
-.275 G .297(he focus of the de)-3.047 F .297(vice should re)-.275 F
-.165(ve)-.275 G .298(rt if the focus win-).165 F(do)144 249.6 Q 5.262
(wb)-.275 G 2.512(ecomes not vie)-5.262 F -.11(wa)-.275 G 5.261
(ble. One).11 F 2.511(of the follo)5.261 F 2.511
(wing constants may be passed:)-.275 F F1(Re)144.916 261.6 Q -.11(ve)
-.165 G(rtT).11 E(oP)-1.012 E(ar)-.11 E(ent)-.198 E F2(,).916 E F1(Re)
32.268 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E(ointerRoot)-.22 E F2(,)
.916 E F1(Re)32.268 E -.11(ve)-.165 G(rtT).11 E(oNone)-1.012 E F2 31.353
(,o).916 G(r)-31.353 E F1(Re)144.916 273.6 Q -.11(ve)-.165 G(rtT).11 E
(oF)-1.012 E(ollo)-.275 E(wK)-.11 E(eyboard)-.275 E F2(.).916 E F3(time)
72 289.2 Q F2 .995(Speci\214es the time.)53.058 F -1.21(Yo)6.495 G 3.744
(uc)1.21 G .994(an pass either a timestamp, e)-3.744 F .994
(xpressed in milliseconds,)-.165 F(or)144 301.2 Q F1(Curr)3.666 E(entT)
-.198 E(ime)-.198 E F2(.).916 E 36 296.55 36 307.55 DL 36 295.55 36
306.55 DL 41.5 305.8 36 305.8 DL 42.5 305.8 37 305.8 DL 48 305.8 42.5
305.8 DL F1(XSetDe)72.916 328.8 Q(viceF)-.165 E(ocus)-.275 E F2
(changes the focus for an e)3.666 E(xtension input de)-.165 E
(vice and the last-focus-change-)-.275 E 2.75(time. It)72 340.8 R
(has no ef)2.75 E(fect if the speci\214ed time is earlier than the last\
-focus-change-time or is later than)-.275 E(the current X serv)72 352.8
Q(er time.)-.165 E
(Otherwise, the last-focus-change-time is set to the speci\214ed time.)
5.5 E(This)5.5 E(function causes the X serv)72 364.8 Q(er to generate)
-.165 E F1(De)3.666 E(viceF)-.165 E(ocusIn)-.275 E F2(and)3.666 E F1(De)
3.666 E(viceF)-.165 E(ocusOut)-.275 E F2 -2.365 -.275(ev e)3.666 H(nts.)
.275 E(The action tak)72 380.4 Q(en by the serv)-.11 E
(er when this function is requested depends on the v)-.165 E
(alue of the focus)-.275 E(ar)72 392.4 Q(gument:)-.198 E 23.65<8349>72
408 S 2.75(ft)-23.65 G(he focus ar)-2.75 E(gument is)-.198 E F1(None)
3.666 E F2 2.75(,a).916 G(ll input e)-2.75 E -.165(ve)-.275 G
(nts from this de).165 E(vice will be discarded until a)-.275 E(ne)99.5
420 Q 2.75(wf)-.275 G(ocus windo)-2.75 E 2.75(wi)-.275 G 2.75(ss)-2.75 G
2.75(et. In)-2.75 F(this case, the re)2.75 E -.165(ve)-.275 G(rt_to ar)
.165 E(gument is ignored.)-.198 E 23.65<8349>72 435.6 S 2.75(ft)-23.65 G
(he focus ar)-2.75 E(gument is a windo)-.198 E 2.75(wI)-.275 G
(D, it becomes the focus windo)-2.75 E 2.75(wo)-.275 G 2.75(ft)-2.75 G
(he de)-2.75 E 2.75(vice. If)-.275 F(an)2.75 E(input e)99.5 447.6 Q
-.165(ve)-.275 G(nt from the de).165 E(vice w)-.275 E
(ould normally be reported to this windo)-.11 E 2.75(wo)-.275 G 2.75(rt)
-2.75 G 2.75(oo)-2.75 G(ne of its infe-)-2.75 E(riors, the e)99.5 459.6
Q -.165(ve)-.275 G(nt is reported normally).165 E 5.5(.O)-.715 G
(therwise, the e)-5.5 E -.165(ve)-.275 G(nt is reported relati).165 E
.33 -.165(ve t)-.275 H 2.75(ot).165 G(he focus)-2.75 E(windo)99.5 471.6
Q -.715(w.)-.275 G 23.65<8349>72 487.2 S 2.75(ft)-23.65 G(he focus ar)
-2.75 E(gument is)-.198 E F1 -.22(Po)3.666 G(interRoot).22 E F2 2.75(,t)
.916 G(he focus windo)-2.75 E 2.75(wi)-.275 G 2.75(sd)-2.75 G
(ynamically tak)-2.75 E(en to be the root)-.11 E(windo)99.5 499.2 Q 2.75
(wo)-.275 G 2.75(fw)-2.75 G(hate)-2.75 E -.165(ve)-.275 G 2.75(rs).165 G
(creen the pointer is on at each input e)-2.75 E -.165(ve)-.275 G 2.75
(nt. In).165 F(this case, the re)2.75 E -.165(ve)-.275 G(rt_to).165 E
(ar)99.5 511.2 Q(gument is ignored.)-.198 E 23.65<8349>72 526.8 S 2.75
(ft)-23.65 G(he focus ar)-2.75 E(gument is)-.198 E F1 -.275(Fo)3.666 G
(llo).275 E(wK)-.11 E(eyboard)-.275 E F2 2.75(,t).916 G(he focus windo)
-2.75 E 2.75(wi)-.275 G 2.75(sd)-2.75 G(ynamically tak)-2.75 E(en to be)
-.11 E(the same as the focus of the X k)99.5 538.8 Q -.165(ey)-.11 G
(board at each input e).165 E -.165(ve)-.275 G(nt.).165 E
(The speci\214ed focus windo)72 554.4 Q 2.75(wm)-.275 G(ust be vie)-2.75
E -.11(wa)-.275 G(ble at the time).11 E F1(XSetDe)3.666 E(viceF)-.165 E
(ocus)-.275 E F2(is called.)3.666 E(Other)5.5 E(-)-.22 E
(wise, it generates a)72 566.4 Q F1(BadMatch)3.666 E F2(error)3.666 E
5.5(.I)-.605 G 2.75(ft)-5.5 G(he focus windo)-2.75 E 2.75(wl)-.275 G
(ater becomes not vie)-2.75 E -.11(wa)-.275 G(ble, the X).11 E(serv)72
578.4 Q(er e)-.165 E -.275(va)-.275 G(luates the re).275 E -.165(ve)
-.275 G(rt_to ar).165 E(gument to determine the ne)-.198 E 2.75(wf)-.275
G(ocus windo)-2.75 E -.715(w.)-.275 G 23.65<8349>72 594 S 2.75(ft)-23.65
G(he re)-2.75 E -.165(ve)-.275 G(rt_to ar).165 E(gument is)-.198 E F1
(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E(ar)-.11 E(ent)-.198 E
F2 2.75(,t).916 G(he focus re)-2.75 E -.165(ve)-.275 G
(rts to the parent \(or the closest).165 E(vie)99.5 606 Q -.11(wa)-.275
G(ble ancestor\), and the ne).11 E 2.75(wr)-.275 G -2.365 -.275(ev e)
-2.75 H(rt_to v).275 E(alue is tak)-.275 E(en to be)-.11 E F1(Re)3.666 E
-.11(ve)-.165 G(rtT).11 E(oNone)-1.012 E F2(.).916 E 23.65<8349>72 621.6
S 2.75(ft)-23.65 G(he re)-2.75 E -.165(ve)-.275 G(rt_to ar).165 E
(gument is)-.198 E F1(Re)3.666 E -.11(ve)-.165 G(rtT).11 E(oP)-1.012 E
(ointerRoot)-.22 E F2(,).916 E F1(Re)3.666 E -.11(ve)-.165 G(rtT).11 E
(oF)-1.012 E(ollo)-.275 E(wK)-.11 E(eyboard)-.275 E F2 2.75(,o).916 G(r)
-2.75 E F1(Re)100.416 633.6 Q -.11(ve)-.165 G(rtT).11 E(oNone)-1.012 E
F2 2.75(,t).916 G(he focus re)-2.75 E -.165(ve)-.275 G(rts to that v)
.165 E(alue.)-.275 E(When the focus re)72 649.2 Q -.165(ve)-.275 G
(rts, the X serv).165 E(er generates)-.165 E F1(De)3.666 E(viceF)-.165 E
(ocusIn)-.275 E F2(and)3.666 E F1(De)3.666 E(viceF)-.165 E(ocusOut)-.275
E F2 -2.365 -.275(ev e)3.666 H(nts, b).275 E(ut)-.22 E
(the last-focus-change time is not af)72 661.2 Q(fected.)-.275 E F1
(XSetDe)72.916 676.8 Q(viceF)-.165 E(ocus)-.275 E F2(can generate)3.666
E F1(BadDe)3.666 E(vice)-.165 E F2(,).916 E F1(BadMatch)3.666 E F2(,)
.916 E F1(BadV)3.666 E(alue)-1.012 E F2 2.75(,a).916 G(nd)-2.75 E F1
(BadW)3.666 E(indo)-.198 E(w)-.11 E F2(errors.)3.666 E F1(15)282.5 768 Q
EP
%%Page: 16 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
2.75(2.1.8. Contr)72 84 R(olling De)-.198 E(vice F)-.165 E(eedback)-.275
E/F2 11/Times-Roman@0 SF 1.76 -.88(To d)72 99.6 T
(etermine the current feedback settings of an e).88 E(xtension input de)
-.165 E(vice, use)-.275 E F1(XGetF)72.916 111.6 Q(eedbackContr)-.275 E
(ol)-.198 E F2(.).916 E .44 LW 36 127.35 36 138.35 DL 36 126.35 36
137.35 DL 41.5 124.6 36 124.6 DL 42.5 124.6 37 124.6 DL 48 124.6 42.5
124.6 DL(XFeedbackState * XGetFeedbackControl\()72 139.2 Q/F3 11
/Times-Italic@0 SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,)
.916 E F3(num_feedbac)2.75 E(ks_r)-.22 E(eturn)-.407 E F2(\)).916 E
(Display *)85.75 151.2 Q F3(display)A F2(;).916 E(XDe)85.75 163.2 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E(int *)85.75 175.2 Q F3
(num_feedbac)A(ks_r)-.22 E(eturn)-.407 E F2(;).916 E F3(display)72 194.4
Q F2(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F3(de)72 210 Q(vice)-.165 E F2(Speci\214es the desired de)44.071
E(vice.)-.275 E F3(num_feedbac)72 225.6 Q(ks_r)-.22 E(eturn)-.407 E F2
(Returns the number of feedbacks supported by the de)144 237.6 Q(vice.)
-.275 E 36 232.95 36 243.95 DL 36 231.95 36 242.95 DL 41.5 242.2 36
242.2 DL 42.5 242.2 37 242.2 DL 48 242.2 42.5 242.2 DL F1(XGetF)72.916
265.2 Q(eedbackContr)-.275 E(ol)-.198 E F2(returns a list of)3.666 E F1
-.275(Fe)3.666 G(edbackState).275 E F2
(structures that describe the feedbacks)3.666 E
(supported by the speci\214ed de)72 277.2 Q 2.75(vice. There)-.275 F
(is an)2.75 E F1(XF)3.666 E(eedbackState)-.275 E F2
(structure for each class of feed-)3.666 E 2.75(back. These)72 289.2 R
(are of v)2.75 E(ariable length, b)-.275 E
(ut the \214rst three members are common to all.)-.22 E 36 308.55 36
319.55 DL 36 307.55 36 318.55 DL 41.5 305.8 36 305.8 DL 42.5 305.8 37
305.8 DL 48 305.8 42.5 305.8 DL(typedef struct {)72 322.8 Q(XID class;)
108 334.8 Q(int length;)108 346.8 Q(XID id;)108 358.8 Q 2.75(}X)72 370.8
S(FeedbackState;)-2.75 E 36 372.15 36 383.15 DL 36 371.15 36 382.15 DL
41.5 381.4 36 381.4 DL 42.5 381.4 37 381.4 DL 48 381.4 42.5 381.4 DL
(The common members are as follo)72 404.4 Q(ws:)-.275 E 23.65<8354>72
420 S(he class member identi\214es the class of feedback.)-23.65 E
(It may be compared to constants de\214ned)5.5 E(in the \214le <)99.5
432 Q F1(X11/extensions/XI.h).916 E F2 2.75(>. Currently).916 F
(de\214ned feedback constants include:)2.75 E F1(KbdF)100.416 444 Q
(eedbackClass)-.275 E F2(,).916 E F1(PtrF)3.666 E(eedbackClass)-.275 E
F2(,).916 E F1(StringF)3.666 E(eedbackClass)-.275 E F2(,).916 E F1
(IntegerF)100.416 456 Q(eedbackClass)-.275 E F2(,).916 E F1(LedF)3.666 E
(eedbackClass)-.275 E F2 2.75(,a).916 G(nd)-2.75 E F1(BellF)3.666 E
(eedbackClass)-.275 E F2(.).916 E 23.65<8354>72 471.6 S
(he length member speci\214es the length of the)-23.65 E F1 -.275(Fe)
3.666 G(edbackState).275 E F2(structure and can be used by)3.666 E
(clients to tra)99.5 483.6 Q -.165(ve)-.22 G(rse the list.).165 E 23.65
<8354>72 499.2 S(he id member uniquely identi\214es a feedback for a gi)
-23.65 E -.165(ve)-.275 G 2.75(nd).165 G -.275(ev)-2.75 G
(ice and class.).275 E(This allo)5.5 E(ws a)-.275 E(de)99.5 511.2 Q
(vice to support more than one feedback of the same class.)-.275 E
(Other feedbacks of other)5.5 E(classes or de)99.5 523.2 Q(vices may ha)
-.275 E .33 -.165(ve t)-.22 H(he same ID.).165 E(Those feedbacks equi)72
550.8 Q -.275(va)-.275 G(lent to those supported by the core k).275 E
-.165(ey)-.11 G(board are reported in class).165 E F1(Kbd-)3.666 E -.275
(Fe)72 562.8 S(edback).275 E F2(using the)3.666 E F1(XKbdF)3.666 E
(eedbackState)-.275 E F2(structure, which is de\214ned as follo)3.666 E
(ws:)-.275 E F1(16)282.5 768 Q EP
%%Page: 17 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q(XID class;)108 114 Q(int length;)108 126 Q(XID id;)108 138 Q
(int click;)108 150 Q(int percent;)108 162 Q(int pitch;)108 174 Q
(int duration;)108 186 Q(int led_mask;)108 198 Q
(int global_auto_repeat;)108 210 Q(char auto_repeats[32];)108 222 Q 2.75
(}X)72 234 S(KbdFeedbackState;)-2.75 E 36 235.35 36 246.35 DL 36 234.35
36 245.35 DL 41.5 244.6 36 244.6 DL 42.5 244.6 37 244.6 DL 48 244.6 42.5
244.6 DL(The additional members of the)72 267.6 Q F1(XKbdF)3.666 E
(eedbackState)-.275 E F2(structure report the current state of the)3.666
E(feedback:)72 279.6 Q 23.65<8354>72 295.2 S
(he click member speci\214es the k)-23.65 E -.165(ey)-.11 G(-click v)
.165 E(olume and has a v)-.22 E(alue in the range 0 \(of)-.275 E
(f\) to 100)-.275 E(\(loud\).)99.5 307.2 Q 23.65<8354>72 322.8 S
(he percent member speci\214es the bell v)-23.65 E(olume and has a v)
-.22 E(alue in the range 0 \(of)-.275 E(f\) to 100)-.275 E(\(loud\).)
99.5 334.8 Q 23.65<8354>72 350.4 S
(he pitch member speci\214es the bell pitch in Hz. The range of the v)
-23.65 E(alue is implementation-)-.275 E(dependent.)99.5 362.4 Q 23.65
<8354>72 378 S(he duration member speci\214es the duration in milliseco\
nds of the bell.)-23.65 E 23.65<8354>72 393.6 S(he led_mask member is a\
 bit mask that describes the current state of up to 32 LEDs.)-23.65 E(A)
5.5 E -.275(va)99.5 405.6 S
(lue of 1 in a bit indicates that the corresponding LED is on.).275 E
23.65<8354>72 421.2 S(he global_auto_repeat member has a v)-23.65 E
(alue of)-.275 E F1 -.55(Au)3.666 G(toRepeatModeOn).55 E F2(or)3.666 E
F1 -.55(Au)100.416 433.2 S(toRepeatModeOff).55 E F2(.).916 E 23.65<8354>
72 448.8 S(he auto_repeats member is a bit v)-23.65 E(ector)-.165 E 5.5
(.E)-.605 G(ach bit set to 1 indicates that auto-repeat is)-5.5 E
(enabled for the corresponding k)99.5 460.8 Q -.165(ey)-.11 G 5.5(.T)
-.55 G(he v)-5.5 E(ector is represented as 32 bytes.)-.165 E
(Byte N \(from 0\))5.5 E(contains the bits for k)99.5 472.8 Q -.165(ey)
-.11 G 2.75(s8).165 G 2.75(Nt)-2.75 G 2.75(o8)-2.75 G 2.75(N+7)-2.75 G
2.75(,w)-2.75 G
(ith the least signi\214cant bit in the byte representing)-2.75 E -.11
(ke)99.5 484.8 S 2.75(y8)-.055 G(N.)-2.75 E(Those feedbacks equi)72
512.4 Q -.275(va)-.275 G
(lent to those supported by the core pointer are reported in class).275
E F1(PtrF)3.666 E(eed-)-.275 E(back)72 524.4 Q F2(using the)3.666 E F1
(XPtrF)3.666 E(eedbackState)-.275 E F2
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36 543.75 36
554.75 DL 36 542.75 36 553.75 DL 41.5 541 36 541 DL 42.5 541 37 541 DL
48 541 42.5 541 DL(typedef struct {)72 558 Q(XID class;)108 570 Q
(int length;)108 582 Q(XID id;)108 594 Q(int accelNum;)108 606 Q
(int accelDenom;)108 618 Q(int threshold;)108 630 Q 2.75(}X)72 642 S
(PtrFeedbackState;)-2.75 E 36 643.35 36 654.35 DL 36 642.35 36 653.35 DL
41.5 652.6 36 652.6 DL 42.5 652.6 37 652.6 DL 48 652.6 42.5 652.6 DL
(The additional members of the)72 675.6 Q F1(XPtrF)3.666 E(eedbackState)
-.275 E F2(structure report the current state of the feed-)3.666 E
(back:)72 687.6 Q 23.65<8354>72 703.2 S(he accelNum member returns the \
numerator for the acceleration multiplier)-23.65 E(.)-.605 E 23.65<8354>
72 718.8 S(he accelDenom member returns the denominator for the acceler\
ation multiplier)-23.65 E(.)-.605 E F1(17)282.5 768 Q EP
%%Page: 18 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF 23.65<8354>72 84 S
(he accelDenom member returns the threshold for the acceleration.)-23.65
E(Inte)72 111.6 Q(ger feedbacks are those capable of displaying inte)
-.165 E(ger numbers and reported via the)-.165 E F1(XInte-)3.666 E(gerF)
72 123.6 Q(eedbackState)-.275 E F2 2.75(structure. The)3.666 F
(minimum and maximum v)2.75 E(alues that the)-.275 E 2.75(yc)-.165 G
(an display are)-2.75 E(reported.)72 135.6 Q .44 LW 36 154.95 36 165.95
DL 36 153.95 36 164.95 DL 41.5 152.2 36 152.2 DL 42.5 152.2 37 152.2 DL
48 152.2 42.5 152.2 DL(typedef struct {)72 169.2 Q(XID class;)108 181.2
Q(int length;)108 193.2 Q(XID id;)108 205.2 Q(int resolution;)108 217.2
Q(int minV)108 229.2 Q(al;)-1.221 E(int maxV)108 241.2 Q(al;)-1.221 E
2.75(}X)72 253.2 S(Inte)-2.75 E(gerFeedbackState;)-.165 E 36 254.55 36
265.55 DL 36 253.55 36 264.55 DL 41.5 263.8 36 263.8 DL 42.5 263.8 37
263.8 DL 48 263.8 42.5 263.8 DL(The additional members of the)72 286.8 Q
F1(XIntegerF)3.666 E(eedbackState)-.275 E F2
(structure report the capabilities of the)3.666 E(feedback:)72 298.8 Q
23.65<8354>72 314.4 S(he resolution member speci\214es the number of di\
gits that the feedback can display)-23.65 E(.)-.715 E 23.65<8354>72 330
S(he minV)-23.65 E(al member speci\214es the minimum v)-1.221 E
(alue that the feedback can display)-.275 E(.)-.715 E 23.65<8354>72
345.6 S(he maxV)-23.65 E(al speci\214es the maximum v)-1.221 E
(alue that the feedback can display)-.275 E(.)-.715 E(String feedbacks \
are those that can display character information and are reported via t\
he)72 373.2 Q F1(XStringF)72.916 385.2 Q(eedbackState)-.275 E F2 2.75
(structure. Clients)3.666 F(set these feedbacks by passing a list of)
2.75 E F1 -.275(Ke)3.666 G(ySyms).275 E F2(to)3.666 E(be displayed.)72
397.2 Q(The)5.5 E F1(XGetF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F2
(function returns the set of k)3.666 E .33 -.165(ey s)-.11 H
(ymbols that the feed-).165 E(back can display)72 409.2 Q 2.75(,a)-.715
G 2.75(sw)-2.75 G
(ell as the maximum number of symbols that can be displayed.)-2.75 E
(The)5.5 E F1(XStringF)72.916 421.2 Q(eedbackState)-.275 E F2
(structure is de\214ned as follo)3.666 E(ws:)-.275 E 36 440.55 36 451.55
DL 36 439.55 36 450.55 DL 41.5 437.8 36 437.8 DL 42.5 437.8 37 437.8 DL
48 437.8 42.5 437.8 DL(typedef struct {)72 454.8 Q(XID class;)108 466.8
Q(int length;)108 478.8 Q(XID id;)108 490.8 Q(int max_symbols;)108 502.8
Q 2.75(int num_syms_supported;)108 514.8 R -2.365 -.275(Ke y)108 526.8 T
(Sym *syms_supported;).275 E 2.75(}X)72 538.8 S(StringFeedbackState;)
-2.75 E 36 540.15 36 551.15 DL 36 539.15 36 550.15 DL 41.5 549.4 36
549.4 DL 42.5 549.4 37 549.4 DL 48 549.4 42.5 549.4 DL
(The additional members of the)72 572.4 Q F1(XStringF)3.666 E
(eedbackState)-.275 E F2(structure report the capabilities of the)3.666
E(feedback:)72 584.4 Q 23.65<8354>72 600 S(he max_symbols member speci\
\214es the maximum number of symbols that can be dis-)-23.65 E(played.)
99.5 612 Q 23.65<8354>72 627.6 S(he syms_supported member is a pointer \
to the list of supported symbols.)-23.65 E 23.65<8354>72 643.2 S(he num\
_syms_supported member speci\214es the length of the list of supported \
symbols.)-23.65 E(Bell feedbacks are those that can generate a sound an\
d are reported via the)72 670.8 Q F1(XBellF)3.666 E(eedbackState)-.275 E
F2 2.75(structure. Some)72 682.8 R
(implementations may support a bell as part of a)2.75 E F1(KbdF)3.666 E
(eedback)-.275 E F2 2.75(feedback. Class)3.666 F F1(BellF)72.916 694.8 Q
(eedback)-.275 E F2(is pro)3.666 E
(vided for implementations that do not choose to do so and for de)-.165
E(vices that)-.275 E(support multiple feedbacks that can produce sound.)
72 706.8 Q(The meaning of the members is the same as)5.5 E
(that of the corresponding \214elds in the)72 718.8 Q F1(XKbdF)3.666 E
(eedbackState)-.275 E F2(structure.)3.666 E F1(18)282.5 768 Q EP
%%Page: 19 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q(XID class;)108 114 Q(int length;)108 126 Q(XID id;)108 138 Q
(int percent;)108 150 Q(int pitch;)108 162 Q(int duration;)108 174 Q
2.75(}X)72 186 S(BellFeedbackState;)-2.75 E 36 187.35 36 198.35 DL 36
186.35 36 197.35 DL 41.5 196.6 36 196.6 DL 42.5 196.6 37 196.6 DL 48
196.6 42.5 196.6 DL(Led feedbacks are those that can generate a light a\
nd are reported via the)72 219.6 Q F1(XLedF)3.666 E(eedbackState)-.275 E
F2 2.75(structure. Up)72 231.6 R
(to 32 lights per feedback are supported.)2.75 E
(Each bit in led_mask corresponds to one)5.5 E
(supported light, and the corresponding bit in led_v)72 243.6 Q
(alues indicates whether that light is currently)-.275 E(on \(1\) or of)
72 255.6 Q 2.75(f\()-.275 G 2.75(0\). Some)-2.75 F
(implementations may support leds as part of a)2.75 E F1(KbdF)3.666 E
(eedback)-.275 E F2(feedback.)3.666 E(Class)72 267.6 Q F1(LedF)3.666 E
(eedback)-.275 E F2(is pro)3.666 E
(vided for implementations that do not choose to do so and for de)-.165
E(vices)-.275 E(that support multiple led feedbacks.)72 279.6 Q 36
298.95 36 309.95 DL 36 297.95 36 308.95 DL 41.5 296.2 36 296.2 DL 42.5
296.2 37 296.2 DL 48 296.2 42.5 296.2 DL(typedef struct {)72 313.2 Q
(XID class;)108 325.2 Q(int length;)108 337.2 Q(XID id;)108 349.2 Q
(Mask led_v)108 361.2 Q(alues;)-.275 E(Mask led_mask;)108 373.2 Q 2.75
(}X)72 385.2 S(LedFeedbackState;)-2.75 E 36 386.55 36 397.55 DL 36
385.55 36 396.55 DL 41.5 395.8 36 395.8 DL 42.5 395.8 37 395.8 DL 48
395.8 42.5 395.8 DL F1(XGetF)72.916 418.8 Q(eedbackContr)-.275 E(ol)
-.198 E F2(can generate)3.666 E F1(BadDe)3.666 E(vice)-.165 E F2(and)
3.666 E F1(BadMatch)3.666 E F2(errors.)3.666 E 1.76 -.88(To f)72 446.4 T
(ree the information returned by the).88 E F1(XGetF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F2(function, use)3.666 E F1(XFr)72.916
458.4 Q(eeF)-.198 E(eedbackList)-.275 E F2(.).916 E 36 474.15 36 485.15
DL 36 473.15 36 484.15 DL 41.5 471.4 36 471.4 DL 42.5 471.4 37 471.4 DL
48 471.4 42.5 471.4 DL -.22(vo)72 486 S(id XFreeFeedbackList\().22 E/F3
11/Times-Italic@0 SF(list)A F2(\)).916 E(XFeedbackState *)85.75 498 Q F3
(list)A F2(;).916 E F3(list)72 517.2 Q F2 .032
(Speci\214es the pointer to the)58.547 F F1(XF)3.699 E(eedbackState)
-.275 E F2 .033(structure returned by a pre)3.699 F .033(vious call)
-.275 F(to)144 529.2 Q F1(XGetF)3.666 E(eedbackContr)-.275 E(ol)-.198 E
F2(.).916 E 36 524.55 36 535.55 DL 36 523.55 36 534.55 DL 41.5 533.8 36
533.8 DL 42.5 533.8 37 533.8 DL 48 533.8 42.5 533.8 DL F1(XFr)72.916
556.8 Q(eeF)-.198 E(eedbackList)-.275 E F2
(frees the list of feedback control information.)3.666 E 1.76 -.88(To c)
72 584.4 T(hange the settings of a feedback on an e).88 E(xtension de)
-.165 E(vice, use)-.275 E F1(XChangeF)3.666 E(eedbackContr)-.275 E(ol)
-.198 E F2(.).916 E(This function modi\214es the current control v)72
596.4 Q(alues of the speci\214ed feedback using information)-.275 E
(passed in the appropriate)72 608.4 Q F1(XF)3.666 E(eedbackContr)-.275 E
(ol)-.198 E F2(structure for the feedback.)3.666 E(Which v)5.5 E
(alues are mod-)-.275 E(i\214ed depends on the v)72 620.4 Q
(aluemask passed.)-.275 E F1(19)282.5 768 Q EP
%%Page: 20 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF
(int XChangeFeedbackControl\()72 99.6 Q/F3 11/Times-Italic@0 SF(display)
A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3(valuemask)2.75 E
F2(,).916 E F3(value)2.75 E F2(\)).916 E(Display *)85.75 111.6 Q F3
(display)A F2(;).916 E(XDe)85.75 123.6 Q(vice *)-.275 E F3(de)A(vice)
-.165 E F2(;).916 E(unsigned long)85.75 135.6 Q F3(valuemask)2.75 E F2
(;).916 E(XFeedbackControl *)85.75 147.6 Q F3(value)A F2(;).916 E F3
(display)72 166.8 Q F2(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F3(de)72 182.4 Q(vice)-.165 E F2
(Speci\214es the desired de)44.071 E(vice.)-.275 E F3(valuemask)72 198 Q
F2 1.073(Speci\214es one v)25.569 F 1.074
(alue for each bit in the mask \(least to most signi\214cant bit\).)
-.275 F(The)6.574 E -.275(va)144 210 S
(lues are associated with the feedbacks for the speci\214ed de).275 E
(vice.)-.275 E F3(value)72 225.6 Q F2(Speci\214es a pointer to the)
48.174 E F1(XF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F2(structure.)
3.666 E 36 220.95 36 231.95 DL 36 219.95 36 230.95 DL 41.5 230.2 36
230.2 DL 42.5 230.2 37 230.2 DL 48 230.2 42.5 230.2 DL F1(XChangeF)
72.916 253.2 Q(eedbackContr)-.275 E(ol)-.198 E F2(controls the de)3.666
E(vice characteristics described by the)-.275 E F1(XF)3.666 E(eedback-)
-.275 E(Contr)72 265.2 Q(ol)-.198 E F2 2.75(structure. There)3.666 F
(is an)2.75 E F1(XF)3.666 E(eedbackContr)-.275 E(ol)-.198 E F2
(structure for each class of feedback.)3.666 E(These)5.5 E(are of v)72
277.2 Q(ariable length, b)-.275 E
(ut the \214rst three members are common to all and are as follo)-.22 E
(ws:)-.275 E 36 296.55 36 307.55 DL 36 295.55 36 306.55 DL 41.5 293.8 36
293.8 DL 42.5 293.8 37 293.8 DL 48 293.8 42.5 293.8 DL(typedef struct {)
72 310.8 Q(XID class;)108 322.8 Q(int length;)108 334.8 Q(XID id;)108
346.8 Q 2.75(}X)72 358.8 S(FeedbackControl;)-2.75 E 36 360.15 36 371.15
DL 36 359.15 36 370.15 DL 41.5 369.4 36 369.4 DL 42.5 369.4 37 369.4 DL
48 369.4 42.5 369.4 DL(Feedback class)72 392.4 Q F1(KbdF)3.666 E
(eedback)-.275 E F2(controls feedbacks equi)3.666 E -.275(va)-.275 G
(lent to those pro).275 E(vided by the core)-.165 E -.11(ke)72 404.4 S
(yboard using the)-.055 E F1(KbdF)3.666 E(eedbackContr)-.275 E(ol)-.198
E F2(structure, which is de\214ned as follo)3.666 E(ws:.)-.275 E 36
423.75 36 434.75 DL 36 422.75 36 433.75 DL 41.5 421 36 421 DL 42.5 421
37 421 DL 48 421 42.5 421 DL(typedef struct {)72 438 Q(XID class;)108
450 Q(int length;)108 462 Q(XID id;)108 474 Q(int click;)108 486 Q
(int percent;)108 498 Q(int pitch;)108 510 Q(int duration;)108 522 Q
(int led_mask;)108 534 Q(int led_v)108 546 Q(alue;)-.275 E(int k)108 558
Q -.165(ey)-.11 G(;).165 E(int auto_repeat_mode;)108 570 Q 2.75(}X)72
582 S(KbdFeedbackControl;)-2.75 E 36 583.35 36 594.35 DL 36 582.35 36
593.35 DL 41.5 592.6 36 592.6 DL 42.5 592.6 37 592.6 DL 48 592.6 42.5
592.6 DL(This class controls the de)72 615.6 Q
(vice characteristics described by the)-.275 E F1(XKbdF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F2(structure.)3.666 E
(These include the k)72 627.6 Q -.165(ey)-.11 G
(_click_percent, global_auto_repeat, and indi).165 E(vidual k)-.275 E
.33 -.165(ey a)-.11 H 2.75(uto-repeat. V).165 F(alid)-1.221 E(modes are)
72 639.6 Q F1 -.55(Au)3.666 G(toRepeatModeOn).55 E F2(,).916 E F1 -.55
(Au)3.666 G(toRepeatModeOff).55 E F2 2.75(,a).916 G(nd)-2.75 E F1 -.55
(Au)3.666 G(toRepeatModeDefault).55 E F2(.).916 E -1.221(Va)72 655.2 S
(lid masks are as follo)1.221 E(ws:)-.275 E F1(20)282.5 768 Q EP
%%Page: 21 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(#de\214ne)72 105.6 Q
F1(DvK)125.416 105.6 Q(eyClickP)-.275 E(er)-.22 E(cent)-.198 E F2
(\(1L << 0\))321 105.6 Q(#de\214ne)72 117.6 Q F1(DvP)125.416 117.6 Q(er)
-.22 E(cent)-.198 E F2(\(1L << 1\))321 117.6 Q(#de\214ne)72 129.6 Q F1
(DvPitch)125.416 129.6 Q F2(\(1L << 2\))321 129.6 Q(#de\214ne)72 141.6 Q
F1(DvDuration)125.416 141.6 Q F2(\(1L << 3\))321 141.6 Q(#de\214ne)72
153.6 Q F1(DvLed)125.416 153.6 Q F2(\(1L << 4\))321 153.6 Q(#de\214ne)72
165.6 Q F1(DvLedMode)125.416 165.6 Q F2(\(1L << 5\))321 165.6 Q
(#de\214ne)72 177.6 Q F1(DvK)125.416 177.6 Q(ey)-.275 E F2(\(1L << 6\))
321 177.6 Q(#de\214ne)72 189.6 Q F1(DvA)125.416 189.6 Q(utoRepeatMode)
-.55 E F2(\(1L << 7\))321 189.6 Q 36 187.35 36 198.35 DL 36 186.35 36
197.35 DL 41.5 196.6 36 196.6 DL 42.5 196.6 37 196.6 DL 48 196.6 42.5
196.6 DL(Feedback class)72 223.2 Q F1(PtrF)3.666 E(eedback)-.275 E F2
(controls feedbacks equi)3.666 E -.275(va)-.275 G(lent to those pro).275
E(vided by the core pointer)-.165 E(using the)72 235.2 Q F1(PtrF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F2
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36 254.55 36
265.55 DL 36 253.55 36 264.55 DL 41.5 251.8 36 251.8 DL 42.5 251.8 37
251.8 DL 48 251.8 42.5 251.8 DL(typedef struct {)72 268.8 Q(XID class;)
108 280.8 Q(int length;)108 292.8 Q(XID id;)108 304.8 Q(int accelNum;)
108 316.8 Q(int accelDenom;)108 328.8 Q(int threshold;)108 340.8 Q 2.75
(}X)72 352.8 S(PtrFeedbackControl;)-2.75 E 36 354.15 36 365.15 DL 36
353.15 36 364.15 DL 41.5 363.4 36 363.4 DL 42.5 363.4 37 363.4 DL 48
363.4 42.5 363.4 DL(Which v)72 386.4 Q
(alues are modi\214ed depends on the v)-.275 E(aluemask passed.)-.275 E
-1.221(Va)72 402 S(lid masks are as follo)1.221 E(ws:)-.275 E 36 417.75
36 428.75 DL 36 416.75 36 427.75 DL 41.5 415 36 415 DL 42.5 415 37 415
DL 48 415 42.5 415 DL(#de\214ne)72 435.6 Q F1(DvAccelnum)125.416 435.6 Q
F2(\(1L << 0\))321 435.6 Q(#de\214ne)72 447.6 Q F1(DvAccelDenom)125.416
447.6 Q F2(\(1L << 1\))321 447.6 Q(#de\214ne)72 459.6 Q F1(DvThr)125.416
459.6 Q(eshold)-.198 E F2(\(1L << 2\))321 459.6 Q 36 460.95 36 471.95 DL
36 459.95 36 470.95 DL 41.5 470.2 36 470.2 DL 42.5 470.2 37 470.2 DL 48
470.2 42.5 470.2 DL(The acceleration, e)72 493.2 Q
(xpressed as a fraction, is a multiplier for mo)-.165 E -.165(ve)-.165 G
2.75(ment. F).165 F(or e)-.165 E(xample, specifying)-.165 E
(3/1 means that the de)72 505.2 Q(vice mo)-.275 E -.165(ve)-.165 G 2.75
(st).165 G(hree times as f)-2.75 E(ast as normal.)-.11 E
(The fraction may be rounded arbi-)5.5 E(trarily by the X serv)72 517.2
Q(er)-.165 E 5.5(.A)-.605 G(cceleration tak)-5.5 E(es ef)-.11 E
(fect only if the de)-.275 E(vice mo)-.275 E -.165(ve)-.165 G 2.75(sm)
.165 G(ore than threshold)-2.75 E(pix)72 529.2 Q
(els at once and applies only to the amount be)-.165 E(yond the v)-.165
E(alue in the threshold ar)-.275 E 2.75(gument. Setting)-.198 F 2.75(av)
72 541.2 S(alue to -1 restores the def)-3.025 E 2.75(ault. The)-.11 F
-.275(va)2.75 G
(lues of the accelNumerator and threshold \214elds must be).275 E
(nonzero for the pointer v)72 553.2 Q(alues to be set.)-.275 E
(Otherwise, the parameters will be unchanged.)5.5 E(Ne)5.5 E -.055(ga)
-.165 G(ti).055 E -.165(ve)-.275 G -.275(va)72 565.2 S(lues generate a)
.275 E F1(BadV)3.666 E(alue)-1.012 E F2(error)3.666 E 2.75(,a)-.44 G
2.75(sd)-2.75 G(oes a zero v)-2.75 E
(alue for the accelDenominator \214eld.)-.275 E(This request f)72 580.8
Q(ails with a)-.11 E F1(BadMatch)3.666 E F2(error if the speci\214ed de)
3.666 E(vice is not currently reporting relati)-.275 E -.165(ve)-.275 G
2.75(motion. If)72 592.8 R 2.75(ad)2.75 G -.275(ev)-2.75 G
(ice that is capable of reporting both relati).275 E .33 -.165(ve a)
-.275 H(nd absolute motion has its mode).165 E(changed from)72 604.8 Q
F1(Relati)3.666 E -.11(ve)-.11 G F2(to)3.776 E F1(Absolute)3.666 E F2
(by an)3.666 E F1(XSetDe)3.666 E(viceMode)-.165 E F2(request, v)3.666 E
(aluator control v)-.275 E(alues)-.275 E(will be ignored by the serv)72
616.8 Q(er while the de)-.165 E(vice is in that mode.)-.275 E
(Feedback class)72 632.4 Q F1(IntegerF)3.666 E(eedback)-.275 E F2
(controls inte)3.666 E(ger feedbacks displayed on input de)-.165 E
(vices and are)-.275 E(reported via the)72 644.4 Q F1(IntegerF)3.666 E
(eedbackContr)-.275 E(ol)-.198 E F2
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E F1(21)282.5
768 Q EP
%%Page: 22 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q(XID class;)108 114 Q(int length;)108 126 Q(XID id;)108 138 Q
(int int_to_display;)108 150 Q 2.75(}X)72 162 S(Inte)-2.75 E
(gerFeedbackControl;)-.165 E 36 163.35 36 174.35 DL 36 162.35 36 173.35
DL 41.5 172.6 36 172.6 DL 42.5 172.6 37 172.6 DL 48 172.6 42.5 172.6 DL
-1.221(Va)72 195.6 S(lid masks are as follo)1.221 E(ws:)-.275 E 36
211.35 36 222.35 DL 36 210.35 36 221.35 DL 41.5 208.6 36 208.6 DL 42.5
208.6 37 208.6 DL 48 208.6 42.5 208.6 DL(#de\214ne)72 229.2 Q F1
(DvInteger)125.416 229.2 Q F2(\(1L << 0\))321 229.2 Q 36 230.55 36
241.55 DL 36 229.55 36 240.55 DL 41.5 239.8 36 239.8 DL 42.5 239.8 37
239.8 DL 48 239.8 42.5 239.8 DL(Feedback class)72 262.8 Q F1(StringF)
3.666 E(eedback)-.275 E F2
(controls string feedbacks displayed on input de)3.666 E(vices and)-.275
E(reported via the)72 274.8 Q F1(StringF)3.666 E(eedbackContr)-.275 E
(ol)-.198 E F2(structure, which is de\214ned as follo)3.666 E(ws:)-.275
E 36 294.15 36 305.15 DL 36 293.15 36 304.15 DL 41.5 291.4 36 291.4 DL
42.5 291.4 37 291.4 DL 48 291.4 42.5 291.4 DL(typedef struct {)72 308.4
Q(XID class;)108 320.4 Q(int length;)108 332.4 Q(XID id;)108 344.4 Q
(int num_k)108 356.4 Q -.165(ey)-.11 G(syms;).165 E -2.365 -.275(Ke y)
108 368.4 T(Sym *syms_to_display;).275 E 2.75(}X)72 380.4 S
(StringFeedbackControl;)-2.75 E 36 381.75 36 392.75 DL 36 380.75 36
391.75 DL 41.5 391 36 391 DL 42.5 391 37 391 DL 48 391 42.5 391 DL
-1.221(Va)72 414 S(lid masks are as follo)1.221 E(ws:)-.275 E 36 429.75
36 440.75 DL 36 428.75 36 439.75 DL 41.5 427 36 427 DL 42.5 427 37 427
DL 48 427 42.5 427 DL(#de\214ne)72 447.6 Q F1(DvString)125.416 447.6 Q
F2(\(1L << 0\))321 447.6 Q 36 448.95 36 459.95 DL 36 447.95 36 458.95 DL
41.5 458.2 36 458.2 DL 42.5 458.2 37 458.2 DL 48 458.2 42.5 458.2 DL
(Feedback class)72 481.2 Q F1(BellF)3.666 E(eedback)-.275 E F2
(controls a bell on an input de)3.666 E(vice and is reported via the)
-.275 E F1(BellF)3.666 E(eed-)-.275 E(backContr)72 493.2 Q(ol)-.198 E F2
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36 512.55 36
523.55 DL 36 511.55 36 522.55 DL 41.5 509.8 36 509.8 DL 42.5 509.8 37
509.8 DL 48 509.8 42.5 509.8 DL(typedef struct {)72 526.8 Q(XID class;)
108 538.8 Q(int length;)108 550.8 Q(XID id;)108 562.8 Q(int percent;)108
574.8 Q(int pitch;)108 586.8 Q(int duration;)108 598.8 Q 2.75(}X)72
610.8 S(BellFeedbackControl;)-2.75 E 36 612.15 36 623.15 DL 36 611.15 36
622.15 DL 41.5 621.4 36 621.4 DL 42.5 621.4 37 621.4 DL 48 621.4 42.5
621.4 DL -1.221(Va)72 644.4 S(lid masks are as follo)1.221 E(ws:)-.275 E
F1(22)282.5 768 Q EP
%%Page: 23 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(#de\214ne)72 105.6 Q
F1(DvP)125.416 105.6 Q(er)-.22 E(cent)-.198 E F2(\(1L << 1\))321 105.6 Q
(#de\214ne)72 117.6 Q F1(DvPitch)125.416 117.6 Q F2(\(1L << 2\))321
117.6 Q(#de\214ne)72 129.6 Q F1(DvDuration)125.416 129.6 Q F2
(\(1L << 3\))321 129.6 Q 36 130.95 36 141.95 DL 36 129.95 36 140.95 DL
41.5 140.2 36 140.2 DL 42.5 140.2 37 140.2 DL 48 140.2 42.5 140.2 DL
(Feedback class)72 163.2 Q F1(LedF)3.666 E(eedback)-.275 E F2
(controls lights on an input de)3.666 E(vice and are reported via the)
-.275 E F1(Led-)3.666 E -.275(Fe)72 175.2 S(edbackContr).275 E(ol)-.198
E F2(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36
194.55 36 205.55 DL 36 193.55 36 204.55 DL 41.5 191.8 36 191.8 DL 42.5
191.8 37 191.8 DL 48 191.8 42.5 191.8 DL(typedef struct {)72 208.8 Q
(XID class;)108 220.8 Q(int length;)108 232.8 Q(XID id;)108 244.8 Q
(int led_mask;)108 256.8 Q(int led_v)108 268.8 Q(alues;)-.275 E 2.75(}X)
72 280.8 S(LedFeedbackControl;)-2.75 E 36 282.15 36 293.15 DL 36 281.15
36 292.15 DL 41.5 291.4 36 291.4 DL 42.5 291.4 37 291.4 DL 48 291.4 42.5
291.4 DL -1.221(Va)72 314.4 S(lid masks are as follo)1.221 E(ws:)-.275 E
36 330.15 36 341.15 DL 36 329.15 36 340.15 DL 41.5 327.4 36 327.4 DL
42.5 327.4 37 327.4 DL 48 327.4 42.5 327.4 DL(#de\214ne)72 348 Q F1
(DvLed)125.416 348 Q F2(\(1L << 4\))321 348 Q(#de\214ne)72 360 Q F1
(DvLedMode)125.416 360 Q F2(\(1L << 5\))321 360 Q 36 361.35 36 372.35 DL
36 360.35 36 371.35 DL 41.5 370.6 36 370.6 DL 42.5 370.6 37 370.6 DL 48
370.6 42.5 370.6 DL F1(XChangeF)72.916 393.6 Q(eedbackContr)-.275 E(ol)
-.198 E F2(can generate)3.666 E F1(BadDe)3.666 E(vice)-.165 E F2(,).916
E F1(BadF)3.666 E(eedBack)-.275 E F2(,).916 E F1(BadMatch)3.666 E F2
2.75(,a).916 G(nd)-2.75 E F1(Bad-)3.666 E -1.012(Va)72 405.6 S(lue)1.012
E F2(errors.)3.666 E F1 2.75(2.1.9. Ringing)72 429.6 R 2.75(aB)2.75 G
(ell on an Input De)-2.75 E(vice)-.165 E F2 1.76 -.88(To r)72 445.2 T
(ing a bell on an e).88 E(xtension input de)-.165 E(vice, use)-.275 E F1
(XDe)3.666 E(viceBell)-.165 E F2(.).916 E 36 460.95 36 471.95 DL 36
459.95 36 470.95 DL 41.5 458.2 36 458.2 DL 42.5 458.2 37 458.2 DL 48
458.2 42.5 458.2 DL(int XDe)72 472.8 Q(viceBell\()-.275 E/F3 11
/Times-Italic@0 SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,)
.916 E F3(feedbac)2.75 E(kclass)-.22 E F2(,).916 E F3(feedbac)2.75 E
(kid)-.22 E F2(,).916 E F3(per)2.75 E(cent)-.407 E F2(\)).916 E
(Display *)85.75 484.8 Q F3(display)A F2(;).916 E(XDe)85.75 496.8 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E(XID)85.75 508.8 Q F3
(feedbac)2.75 E(kclass)-.22 E F2(,).916 E F3(feedbac)2.75 E(kid)-.22 E
F2(;).916 E(int)85.75 520.8 Q F3(per)2.75 E(cent)-.407 E F2(;).916 E F3
(display)72 540 Q F2(Speci\214es the connection to the X serv)40.221 E
(er)-.165 E(.)-.605 E F3(de)72 555.6 Q(vice)-.165 E F2
(Speci\214es the desired de)44.071 E(vice.)-.275 E F3(feedbac)72 571.2 Q
(kclass)-.22 E F2 6.859(Speci\214es the feedbackclass.)11.126 F -1.221
(Va)12.359 G 6.859(lid v)1.221 F 6.859(alues are)-.275 F F1(KbdF)10.525
E(eedbackClass)-.275 E F2(and)10.524 E F1(BellF)144.916 583.2 Q
(eedbackClass)-.275 E F2(.).916 E F3(feedbac)72 598.8 Q(kid)-.22 E F2
(Speci\214es the ID of the feedback that has the bell.)24.568 E F3(per)
72 614.4 Q(cent)-.407 E F2(Speci\214es the v)39.418 E
(olume in the range -100 \(quiet\) to 100 percent \(loud\).)-.22 E 36
609.75 36 620.75 DL 36 608.75 36 619.75 DL 41.5 619 36 619 DL 42.5 619
37 619 DL 48 619 42.5 619 DL F1(XDe)72.916 642 Q(viceBell)-.165 E F2
(is analogous to the core)3.666 E F1(XBell)3.666 E F2 2.75(function. It)
3.666 F(rings the speci\214ed bell on the speci\214ed)2.75 E(input de)72
654 Q(vice feedback, using the speci\214ed v)-.275 E 2.75(olume. The)
-.22 F(speci\214ed v)2.75 E(olume is relati)-.22 E .33 -.165(ve t)-.275
H 2.75(ot).165 G(he base)-2.75 E -.22(vo)72 666 S
(lume for the feedback.).22 E(If the v)5.5 E(alue for the percent ar)
-.275 E(gument is not in the range -100 to 100)-.198 E(inclusi)72 678 Q
-.165(ve)-.275 G 2.75(,a).165 G F1(BadV).916 E(alue)-1.012 E F2
(error results.)3.666 E(The v)5.5 E
(olume at which the bell rings when the percent ar)-.22 E(gu-)-.198 E
(ment is nonne)72 690 Q -.055(ga)-.165 G(ti).055 E .33 -.165(ve i)-.275
H(s:).165 E(base - [\(base * percent\) / 100] + percent)141 711.6 Q F1
(23)282.5 768 Q EP
%%Page: 24 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(The v)72 84 Q
(olume at which the bell rings when the percent ar)-.22 E(gument is ne)
-.198 E -.055(ga)-.165 G(ti).055 E .33 -.165(ve i)-.275 H(s:).165 E
(base + [\(base * percent\) / 100])141 105.6 Q 1.76 -.88(To c)72 127.2 T
(hange the base v).88 E(olume of the bell, use)-.22 E F1(XChangeF)3.666
E(eedbackContr)-.275 E(ol)-.198 E F2(.).916 E F1(XDe)72.916 142.8 Q
(viceBell)-.165 E F2(can generate)3.666 E F1(BadDe)3.666 E(vice)-.165 E
F2(and)3.666 E F1(BadV)3.666 E(alue)-1.012 E F2(errors.)3.666 E F1 2.75
(2.1.10. Contr)72 166.8 R(olling De)-.198 E(vice Encoding)-.165 E F2
1.76 -.88(To g)72 182.4 T(et the k).88 E .33 -.165(ey m)-.11 H
(apping of an e).165 E(xtension de)-.165 E
(vice that supports input class)-.275 E F1 -.275(Ke)3.666 G(ys).275 E F2
2.75(,u).916 G(se)-2.75 E F1(XGetDe)72.916 194.4 Q(viceK)-.165 E
(eyMapping)-.275 E F2(.).916 E .44 LW 36 210.15 36 221.15 DL 36 209.15
36 220.15 DL 41.5 207.4 36 207.4 DL 42.5 207.4 37 207.4 DL 48 207.4 42.5
207.4 DL -2.365 -.275(Ke y)72 222 T(Sym * XGetDe).275 E(viceK)-.275 E
-.165(ey)-.275 G(Mapping\().165 E/F3 11/Times-Italic@0 SF(display)A F2
(,).916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3<8c72>2.75 E(st_k)-.11
E -.33(ey)-.11 G(code_wanted).33 E F2(,).916 E F3 -.11(ke)2.75 G
(ycode_count)-.22 E F2(,).916 E F3 -.11(ke)129.75 234 S(ysyms_per_k)-.22
E -.33(ey)-.11 G(code_r).33 E(eturn)-.407 E F2(\)).916 E(Display *)88.5
246 Q F3(display)A F2(;).916 E(XDe)88.5 258 Q(vice *)-.275 E F3(de)A
(vice)-.165 E F2(;).916 E -2.365 -.275(Ke y)88.5 270 T(Code).275 E F3
<8c72>2.75 E(st_k)-.11 E -.33(ey)-.11 G(code_wanted).33 E F2(;).916 E
(int)88.5 282 Q F3 -.11(ke)2.75 G(ycode_count)-.22 E F2(;).916 E(int *)
88.5 294 Q F3 -.11(ke)C(ysyms_per_k)-.22 E -.33(ey)-.11 G(code_r).33 E
(eturn)-.407 E F2(;).916 E F3(display)72 313.2 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 328.8 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3<8c72>72 344.4 Q(st_k)-.11 E -.33(ey)-.11 G
(code_wanted).33 E F2(Speci\214es the \214rst k)144 356.4 Q -.165(ey)
-.11 G(code that is to be returned.).165 E F3 -.11(ke)72 372 S
(ycode_count)-.22 E F2(Speci\214es the number of k)7.078 E -.165(ey)-.11
G(codes that are to be returned.).165 E F3 -.11(ke)72 387.6 S
(ysyms_per_k)-.22 E -.33(ey)-.11 G(code_r).33 E(eturn)-.407 E F2
(Returns the number of k)144 399.6 Q -.165(ey)-.11 G(syms per k).165 E
-.165(ey)-.11 G(code.).165 E 36 394.95 36 405.95 DL 36 393.95 36 404.95
DL 41.5 404.2 36 404.2 DL 42.5 404.2 37 404.2 DL 48 404.2 42.5 404.2 DL
F1(XGetDe)72.916 427.2 Q(viceK)-.165 E(eyMapping)-.275 E F2
(is analogous to the core)3.666 E F1(XGetK)3.666 E(eyboardMapping)-.275
E F2 2.75(function. It)3.666 F
(returns the symbols for the speci\214ed number of k)72 439.2 Q -.165
(ey)-.11 G(codes for the speci\214ed e).165 E(xtension de)-.165 E(vice.)
-.275 E F1(XGetDe)72.916 454.8 Q(viceK)-.165 E(eyMapping)-.275 E F2
(returns the symbols for the speci\214ed number of k)3.666 E -.165(ey)
-.11 G(codes for the spec-).165 E(i\214ed e)72 466.8 Q(xtension de)-.165
E(vice, starting with the speci\214ed k)-.275 E -.165(ey)-.11 G 2.75
(code. The).165 F(\214rst_k)2.75 E -.165(ey)-.11 G(code_w).165 E
(anted must be)-.11 E(greater than or equal to min-k)72 478.8 Q -.165
(ey)-.11 G(code as returned by the).165 E F1(XListInputDe)3.666 E(vices)
-.165 E F2(request \(else a)3.666 E F1(Bad-)3.666 E -1.012(Va)72 490.8 S
(lue)1.012 E F2(error results\). The follo)3.666 E(wing v)-.275 E(alue:)
-.275 E(\214rst_k)108 508.8 Q -.165(ey)-.11 G(code_w).165 E(anted + k)
-.11 E -.165(ey)-.11 G(code_count \255 1).165 E
(must be less than or equal to max-k)72 530.4 Q -.165(ey)-.11 G
(code as returned by the).165 E F1(XListInputDe)3.666 E(vices)-.165 E F2
(request \(else a)3.666 E F1(BadV)72.916 542.4 Q(alue)-1.012 E F2
(error results\).)3.666 E(The number of elements in the k)72 558 Q -.165
(ey)-.11 G(syms list is as follo).165 E(ws:)-.275 E -.11(ke)108 576 S
(ycode_count * k)-.055 E -.165(ey)-.11 G(syms_per_k).165 E -.165(ey)-.11
G(code_return).165 E(And KEYSYM number N \(counting from zero\) for k)72
594 Q -.165(ey)-.11 G(code K has an inde).165 E 2.75(x\()-.165 G
(counting from zero\),)-2.75 E(in k)72 606 Q -.165(ey)-.11 G
(syms, of the follo).165 E(wing:)-.275 E(\(K \255 \214rst_k)108 624 Q
-.165(ey)-.11 G(code_w).165 E(anted\) * k)-.11 E -.165(ey)-.11 G
(syms_per_k).165 E -.165(ey)-.11 G(code_return + N).165 E(The k)72 645.6
Q -.165(ey)-.11 G(syms_per_k).165 E -.165(ey)-.11 G(code_return v).165 E
(alue is chosen arbitrarily by the serv)-.275 E(er to be lar)-.165 E
(ge enough to)-.198 E(report all requested symbols.)72 657.6 Q 2.75(As)
5.5 G(pecial KEYSYM v)-2.75 E(alue of)-.275 E F1(NoSymbol)3.666 E F2
(is used to \214ll in unused)3.666 E(elements for indi)72 669.6 Q
(vidual k)-.275 E -.165(ey)-.11 G(codes.).165 E 1.76 -.88(To f)72 685.2
T(ree the data returned by this function, use).88 E F1(XFr)3.666 E(ee)
-.198 E F2(.).916 E(If the speci\214ed de)72 700.8 Q
(vice has not \214rst been opened by this client via)-.275 E F1(XOpenDe)
3.666 E(vice)-.165 E F2 2.75(,t).916 G(his request will)-2.75 E -.11(fa)
72 712.8 S(il with a).11 E F1(BadDe)3.666 E(vice)-.165 E F2(error)3.666
E 5.5(.I)-.605 G 2.75(ft)-5.5 G(hat de)-2.75 E
(vice does not support input class)-.275 E F1 -.275(Ke)3.666 G(ys).275 E
F2 2.75(,t).916 G(his request will)-2.75 E -.11(fa)72 724.8 S(il with a)
.11 E F1(BadMatch)3.666 E F2(error)3.666 E(.)-.605 E F1(24)282.5 768 Q
EP
%%Page: 25 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
(XGetDe)72.916 84 Q(viceK)-.165 E(eyMapping)-.275 E/F2 11/Times-Roman@0
SF(can generate)3.666 E F1(BadDe)3.666 E(vice)-.165 E F2(,).916 E F1
(BadMatch)3.666 E F2 2.75(,a).916 G(nd)-2.75 E F1(BadV)3.666 E(alue)
-1.012 E F2(errors.)3.666 E 1.76 -.88(To c)72 111.6 T(hange the k).88 E
-.165(ey)-.11 G(board mapping of an e).165 E(xtension de)-.165 E
(vice that supports input class)-.275 E F1 -.275(Ke)3.666 G(ys).275 E F2
2.75(,u).916 G(se)-2.75 E F1(XChangeDe)72.916 123.6 Q(viceK)-.165 E
(eyMapping)-.275 E F2(.).916 E .44 LW 36 139.35 36 150.35 DL 36 138.35
36 149.35 DL 41.5 136.6 36 136.6 DL 42.5 136.6 37 136.6 DL 48 136.6 42.5
136.6 DL(int)72 151.2 Q(XChangeDe)72 163.2 Q(viceK)-.275 E -.165(ey)
-.275 G(Mapping\().165 E/F3 11/Times-Italic@0 SF(display)A F2(,).916 E
F3(de)2.75 E(vice)-.165 E F2(,).916 E F3<8c72>2.75 E(st_k)-.11 E -.33
(ey)-.11 G(code).33 E F2(,).916 E F3 -.11(ke)2.75 G(ysyms_per_k)-.22 E
-.33(ey)-.11 G(code).33 E F2(,).916 E F3 -.11(ke)2.75 G(ysyms)-.22 E F2
(,).916 E F3(num_codes)129.75 175.2 Q F2(\)).916 E(Display *)85.75 187.2
Q F3(display)A F2(;).916 E(XDe)85.75 199.2 Q(vice *)-.275 E F3(de)A
(vice)-.165 E F2(;).916 E(int)85.75 211.2 Q F3<8c72>2.75 E(st_k)-.11 E
-.33(ey)-.11 G(code).33 E F2(;).916 E(int)85.75 223.2 Q F3 -.11(ke)2.75
G(ysyms_per_k)-.22 E -.33(ey)-.11 G(code).33 E F2(;).916 E -2.365 -.275
(Ke y)85.75 235.2 T(Sym *).275 E F3 -.11(ke)C(ysyms)-.22 E F2(;).916 E
(int)85.75 247.2 Q F3(num_codes)2.75 E F2(;).916 E F3(display)72 266.4 Q
F2(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F3(de)72 282 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3<8c72>72 297.6 Q(st_k)-.11 E -.33(ey)-.11 G(code).33 E
F2(Speci\214es the \214rst k)14.514 E -.165(ey)-.11 G
(code that is to be changed.).165 E F3 -.11(ke)72 313.2 S(ysyms_per_k)
-.22 E -.33(ey)-.11 G(code).33 E F2(Speci\214es the k)144 325.2 Q -.165
(ey)-.11 G(syms that are to be used.).165 E F3 -.11(ke)72 340.8 S(ysyms)
-.22 E F2(Speci\214es a pointer to an array of k)36.404 E -.165(ey)-.11
G(syms.).165 E F3(num_codes)72 356.4 Q F2(Speci\214es the number of k)
22.511 E -.165(ey)-.11 G(codes that are to be changed.).165 E 36 351.75
36 362.75 DL 36 350.75 36 361.75 DL 41.5 361 36 361 DL 42.5 361 37 361
DL 48 361 42.5 361 DL F1(XChangeDe)72.916 384 Q(viceK)-.165 E(eyMapping)
-.275 E F2(is analogous to the core)3.666 E F1(XChangeK)3.666 E
(eyboardMapping)-.275 E F2(function.)3.666 E
(It de\214nes the symbols for the speci\214ed number of k)72 396 Q -.165
(ey)-.11 G(codes for the speci\214ed e).165 E(xtension k)-.165 E -.165
(ey)-.11 G(board).165 E(de)72 408 Q(vice.)-.275 E(If the speci\214ed de)
72 423.6 Q(vice has not \214rst been opened by this client via)-.275 E
F1(XOpenDe)3.666 E(vice)-.165 E F2 2.75(,t).916 G(his request will)-2.75
E -.11(fa)72 435.6 S(il with a).11 E F1(BadDe)3.666 E(vice)-.165 E F2
(error)3.666 E 5.5(.I)-.605 G 2.75(ft)-5.5 G(he speci\214ed de)-2.75 E
(vice does not support input class)-.275 E F1 -.275(Ke)3.666 G(ys).275 E
F2 2.75(,t).916 G(his)-2.75 E(request will f)72 447.6 Q(ail with a)-.11
E F1(BadMatch)3.666 E F2(error)3.666 E(.)-.605 E
(The number of elements in the k)72 463.2 Q -.165(ey)-.11 G
(syms list must be a multiple of k).165 E -.165(ey)-.11 G(syms_per_k)
.165 E -.165(ey)-.11 G 2.75(code. Other).165 F(-)-.22 E(wise,)72 475.2 Q
F1(XChangeDe)3.666 E(viceK)-.165 E(eyMapping)-.275 E F2(generates a)
3.666 E F1(BadLength)3.666 E F2(error)3.666 E 5.5(.T)-.605 G
(he speci\214ed \214rst_k)-5.5 E -.165(ey)-.11 G(code).165 E
(must be greater than or equal to the min_k)72 487.2 Q -.165(ey)-.11 G
(code v).165 E(alue returned by the)-.275 E F1(ListInputDe)3.666 E
(vices)-.165 E F2(request, or this request will f)72 499.2 Q(ail with a)
-.11 E F1(BadV)3.666 E(alue)-1.012 E F2(error)3.666 E 5.5(.I)-.605 G
2.75(na)-5.5 G(ddition, if the follo)-2.75 E(wing e)-.275 E
(xpression is)-.165 E(not less than the max_k)72 511.2 Q -.165(ey)-.11 G
(code v).165 E(alue returned by the)-.275 E F1(ListInputDe)3.666 E
(vices)-.165 E F2(request, the request will)3.666 E -.11(fa)72 523.2 S
(il with a).11 E F1(BadV)3.666 E(alue)-1.012 E F2(error:)3.666 E
(\214rst_k)141 541.2 Q -.165(ey)-.11 G(code + \(num_codes / k).165 E
-.165(ey)-.11 G(syms_per_k).165 E -.165(ey)-.11 G(code\) - 1).165 E F1
(XChangeDe)72.916 562.8 Q(viceK)-.165 E(eyMapping)-.275 E F2
(can generate)3.666 E F1(BadAlloc)3.666 E F2(,).916 E F1(BadDe)3.666 E
(vice)-.165 E F2(,).916 E F1(BadMatch)3.666 E F2 2.75(,a).916 G(nd)-2.75
E F1(BadV)3.666 E(alue)-1.012 E F2(errors.)72 574.8 Q 1.76 -.88(To o)72
602.4 T(btain the k).88 E -.165(ey)-.11 G
(codes that are used as modi\214ers on an e).165 E(xtension de)-.165 E
(vice that supports input class)-.275 E F1 -.275(Ke)72.916 614.4 S(ys)
.275 E F2 2.75(,u).916 G(se)-2.75 E F1(XGetDe)3.666 E
(viceModi\214erMapping)-.165 E F2(.).916 E 36 630.15 36 641.15 DL 36
629.15 36 640.15 DL 41.5 627.4 36 627.4 DL 42.5 627.4 37 627.4 DL 48
627.4 42.5 627.4 DL(XModi\214erK)72 642 Q -.165(ey)-.275 G(map * XGetDe)
.165 E(viceModi\214erMapping\()-.275 E F3(display)A F2(,).916 E F3(de)
2.75 E(vice)-.165 E F2(\)).916 E(Display *)85.75 654 Q F3(display)A F2
(;).916 E(XDe)85.75 666 Q(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916
E F3(display)72 685.2 Q F2(Speci\214es the connection to the X serv)
40.221 E(er)-.165 E(.)-.605 E F3(de)72 700.8 Q(vice)-.165 E F2
(Speci\214es the desired de)44.071 E(vice.)-.275 E 36 696.15 36 707.15
DL 36 695.15 36 706.15 DL 41.5 705.4 36 705.4 DL 42.5 705.4 37 705.4 DL
48 705.4 42.5 705.4 DL F1(XGetDe)72.916 728.4 Q(viceModi\214erMapping)
-.165 E F2(is analogous to the core)3.666 E F1(XGetModi\214erMapping)
3.666 E F2 2.75(function. The)3.666 F F1(25)282.5 768 Q EP
%%Page: 26 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
(XGetDe)72.916 84 Q(viceModi\214erMapping)-.165 E/F2 11/Times-Roman@0 SF
(function returns a ne)3.666 E(wly created)-.275 E F1(XModi\214erK)3.666
E(eymap)-.275 E F2(structure)3.666 E(that contains the k)72 96 Q -.165
(ey)-.11 G 2.75(sb).165 G
(eing used as modi\214ers for the speci\214ed de)-2.75 E 2.75(vice. The)
-.275 F(structure should be)2.75 E(freed after use with)72 108 Q F1(XFr)
3.666 E(eeModi\214erMapping)-.198 E F2 5.5(.I).916 G 2.75(fo)-5.5 G
(nly zero v)-2.75 E(alues appear in the set for an)-.275 E 2.75(ym)-.165
G(odi-)-2.75 E(\214er)72 120 Q 2.75(,t)-.44 G
(hat modi\214er is disabled.)-2.75 E F1(XGetDe)72.916 135.6 Q
(viceModi\214erMapping)-.165 E F2(can generate)3.666 E F1(BadDe)3.666 E
(vice)-.165 E F2(and)3.666 E F1(BadMatch)3.666 E F2(errors.)3.666 E 1.76
-.88(To s)72 163.2 T(et which k).88 E -.165(ey)-.11 G
(codes are to be used as modi\214ers for an e).165 E(xtension de)-.165 E
(vice, use)-.275 E F1(XSetDe)72.916 175.2 Q(viceModi\214erMapping)-.165
E F2(.).916 E .44 LW 36 190.95 36 201.95 DL 36 189.95 36 200.95 DL 41.5
188.2 36 188.2 DL 42.5 188.2 37 188.2 DL 48 188.2 42.5 188.2 DL
(int XSetDe)72 202.8 Q(viceModi\214erMapping\()-.275 E/F3 11
/Times-Italic@0 SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,)
.916 E F3(modmap)2.75 E F2(\)).916 E(Display *)85.75 214.8 Q F3(display)
A F2(;).916 E(XDe)85.75 226.8 Q(vice *)-.275 E F3(de)A(vice)-.165 E F2
(;).916 E(XModi\214erK)85.75 238.8 Q -.165(ey)-.275 G(map *).165 E F3
(modmap)A F2(;).916 E F3(display)72 258 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 273.6 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3(modmap)72 289.2 Q F2(Speci\214es a pointer to the)
34.116 E F1(XModi\214erK)3.666 E(eymap)-.275 E F2(structure.)3.666 E 36
284.55 36 295.55 DL 36 283.55 36 294.55 DL 41.5 293.8 36 293.8 DL 42.5
293.8 37 293.8 DL 48 293.8 42.5 293.8 DL F1(XSetDe)72.916 316.8 Q
(viceModi\214erMapping)-.165 E F2(is analogous to the core)3.666 E F1
(XSetModi\214erMapping)3.666 E F2 2.75(function. The)3.666 F F1(XSetDe)
72.916 328.8 Q(viceModi\214erMapping)-.165 E F2
(function speci\214es the k)3.666 E -.165(ey)-.11 G(codes of the k).165
E -.165(ey)-.11 G(s, if an).165 E 1.43 -.715(y, t)-.165 H(hat are to be)
.715 E(used as modi\214ers.)72 340.8 Q 2.75(Az)5.5 G(ero v)-2.75 E
(alue means that no k)-.275 E .33 -.165(ey s)-.11 H(hould be used.).165
E(No tw)5.5 E 2.75(oa)-.11 G -.198(rg)-2.75 G(uments can ha).198 E -.165
(ve)-.22 G(the same nonzero k)72 352.8 Q -.165(ey)-.11 G(code v).165 E
2.75(alue. Otherwise,)-.275 F F1(XSetDe)3.666 E(viceModi\214erMapping)
-.165 E F2(generates a)3.666 E F1(Bad-)3.666 E -1.012(Va)72 364.8 S(lue)
1.012 E F2(error)3.666 E 5.5(.T)-.605 G
(here are eight modi\214ers, and the modi\214ermap member of the)-5.5 E
F1(XModi\214erK)3.666 E(eymap)-.275 E F2
(structure contains eight sets of max_k)72 376.8 Q -.165(ey)-.11 G
(permod k).165 E -.165(ey)-.11 G
(codes, one for each modi\214er in the order).165 E F1(Shift)72.916
388.8 Q F2(,).916 E F1(Lock)3.666 E F2(,).916 E F1(Contr)3.666 E(ol)
-.198 E F2(,).916 E F1(Mod1)3.666 E F2(,).916 E F1(Mod2)3.666 E F2(,)
.916 E F1(Mod3)3.666 E F2(,).916 E F1(Mod4)3.666 E F2 2.75(,a).916 G(nd)
-2.75 E F1(Mod5)3.666 E F2 5.5(.O).916 G(nly nonzero k)-5.5 E -.165(ey)
-.11 G(codes ha).165 E -.165(ve)-.22 G(meaning in each set, and zero k)
72 400.8 Q -.165(ey)-.11 G(codes are ignored.).165 E
(In addition, all of the nonzero k)5.5 E -.165(ey)-.11 G(codes).165 E
(must be in the range speci\214ed by min_k)72 412.8 Q -.165(ey)-.11 G
(code and max_k).165 E -.165(ey)-.11 G(code reported by the).165 E F1
(XListInputDe-)3.666 E(vices)72 424.8 Q F2 2.75(function. Otherwise,)
3.666 F F1(XSetModi\214erMapping)3.666 E F2(generates a)3.666 E F1(BadV)
3.666 E(alue)-1.012 E F2(error)3.666 E 5.5(.N)-.605 G 2.75(ok)-5.5 G
-.165(ey)-2.86 G(code).165 E(may appear twice in the entire map.)72
436.8 Q(Otherwise, it generates a)5.5 E F1(BadV)3.666 E(alue)-1.012 E F2
(error)3.666 E(.)-.605 E 2.75(AXs)72 452.4 S(erv)-2.75 E
(er can impose restrictions on ho)-.165 E 2.75(wm)-.275 G
(odi\214ers can be changed, for e)-2.75 E(xample, if certain k)-.165 E
-.165(ey)-.11 G(s).165 E(do not generate up transitions in hardw)72
464.4 Q(are or if multiple modi\214er k)-.11 E -.165(ey)-.11 G 2.75(sa)
.165 G(re not supported.)-2.75 E(If some)5.5 E
(such restriction is violated, the status reply is)72 476.4 Q F1
(MappingF)3.666 E(ailed)-.275 E F2 2.75(,a).916 G
(nd none of the modi\214ers are)-2.75 E 2.75(changed. If)72 488.4 R
(the ne)2.75 E 2.75(wk)-.275 G -.165(ey)-2.86 G
(codes speci\214ed for a modi\214er dif).165 E
(fer from those currently de\214ned and an)-.275 E(y)-.165 E
(\(current or ne)72 500.4 Q(w\) k)-.275 E -.165(ey)-.11 G 2.75(sf).165 G
(or that modi\214er are in the logically do)-2.75 E
(wn state, the status reply is)-.275 E F1(MappingBusy)72.916 512.4 Q F2
2.75(,a).916 G(nd none of the modi\214ers are changed.)-2.75 E F1
(XSetModi\214erMapping)6.416 E F2(generates a)3.666 E F1(De)72.916 524.4
Q(viceMappingNotify)-.165 E F2 -2.365 -.275(ev e)3.666 H(nt on a).275 E
F1(MappingSuccess)3.666 E F2(status.)3.666 E F1(XSetDe)72.916 540 Q
(viceModi\214erMapping)-.165 E F2(can generate)3.666 E F1(BadAlloc)3.666
E F2(,).916 E F1(BadDe)3.666 E(vice)-.165 E F2(,).916 E F1(BadMatch)
3.666 E F2 2.75(,a).916 G(nd)-2.75 E F1(BadV)3.666 E(alue)-1.012 E F2
(errors.)72 552 Q F1 2.75(2.1.11. Contr)72 576 R(olling Button Mapping)
-.198 E F2 1.76 -.88(To s)72 591.6 T(et the mapping of the b).88 E
(uttons on an e)-.22 E(xtension de)-.165 E(vice, use)-.275 E F1(XSetDe)
3.666 E(viceButtonMapping)-.165 E F2(.).916 E F1(26)282.5 768 Q EP
%%Page: 27 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(int XSetDe)72 99.6 Q
(viceButtonMapping\()-.275 E/F3 11/Times-Italic@0 SF(display)A F2(,).916
E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3(map)2.75 E F2(,).916 E F3
(nmap)2.75 E F2(\)).916 E(Display *)85.75 111.6 Q F3(display)A F2(;).916
E(XDe)85.75 123.6 Q(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E
(unsigned char)85.75 135.6 Q F3(map)2.75 E F2([];).916 E(int)85.75 147.6
Q F3(nmap)2.75 E F2(;).916 E F3(display)72 166.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 182.4 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3(map)72 198 Q F2(Speci\214es the mapping list.)53.058 E
F3(nmap)72 213.6 Q F2
(Speci\214es the number of items in the mapping list.)47.558 E 36 208.95
36 219.95 DL 36 207.95 36 218.95 DL 41.5 218.2 36 218.2 DL 42.5 218.2 37
218.2 DL 48 218.2 42.5 218.2 DL F1(XSetDe)72.916 241.2 Q
(viceButtonMapping)-.165 E F2(sets the mapping of the b)3.666 E
(uttons on an e)-.22 E(xtension de)-.165 E 2.75(vice. If)-.275 F
(it suc-)2.75 E(ceeds, the X serv)72 253.2 Q(er generates a)-.165 E F1
(De)3.666 E(viceMappingNotify)-.165 E F2 -2.365 -.275(ev e)3.666 H
(nt, and).275 E F1(XSetDe)3.666 E(viceButtonMapping)-.165 E F2(returns)
72 265.2 Q F1(MappingSuccess)3.666 E F2 5.5(.E).916 G
(lements of the list are inde)-5.5 E -.165(xe)-.165 G 2.75(ds).165 G
(tarting from one.)-2.75 E(The length of the)5.5 E
(list must be the same as)72 277.2 Q F1(XGetDe)3.666 E
(viceButtonMapping)-.165 E F2 -.11(wo)3.666 G(uld return, or a).11 E F1
(BadV)3.666 E(alue)-1.012 E F2(error results.)3.666 E(The inde)72 289.2
Q 2.75(xi)-.165 G 2.75(sab)-2.75 G(utton number)-2.97 E 2.75(,a)-.44 G
(nd the element of the list de\214nes the ef)-2.75 E(fecti)-.275 E .33
-.165(ve n)-.275 H(umber).165 E 5.5(.A)-.605 G(zero ele-)-2.75 E
(ment disables a b)72 301.2 Q
(utton, and elements are not restricted in v)-.22 E
(alue by the number of ph)-.275 E(ysical b)-.055 E(uttons.)-.22 E(Ho)72
313.2 Q(we)-.275 E -.165(ve)-.275 G .88 -.44(r, n).165 H 2.75(ot).44 G
.22 -.11(wo e)-2.75 H(lements can ha).11 E .33 -.165(ve t)-.22 H
(he same nonzero v).165 E(alue, or a)-.275 E F1(BadV)3.666 E(alue)-1.012
E F2(error results.)3.666 E(If an)5.5 E(y)-.165 E(of the b)72 325.2 Q
(uttons to be altered are logically in the do)-.22 E(wn state,)-.275 E
F1(XSetDe)3.666 E(viceButtonMapping)-.165 E F2(returns)3.666 E F1
(MappingBusy)72.916 337.2 Q F2 2.75(,a).916 G
(nd the mapping is not changed.)-2.75 E F1(XSetDe)72.916 352.8 Q
(viceButtonMapping)-.165 E F2(can generate)3.666 E F1(BadDe)3.666 E
(vice)-.165 E F2(,).916 E F1(BadMatch)3.666 E F2 2.75(,a).916 G(nd)-2.75
E F1(BadV)3.666 E(alue)-1.012 E F2(errors.)3.666 E 1.76 -.88(To g)72
380.4 T(et the b).88 E(utton mapping, use)-.22 E F1(XGetDe)3.666 E
(viceButtonMapping)-.165 E F2(.).916 E 36 396.15 36 407.15 DL 36 395.15
36 406.15 DL 41.5 393.4 36 393.4 DL 42.5 393.4 37 393.4 DL 48 393.4 42.5
393.4 DL(int XGetDe)72 408 Q(viceButtonMapping\()-.275 E F3(display)A F2
(,).916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3(map_r)2.75 E(eturn)
-.407 E F2(,).916 E F3(nmap)2.75 E F2(\)).916 E(Display *)85.75 420 Q F3
(display)A F2(;).916 E(XDe)85.75 432 Q(vice *)-.275 E F3(de)A(vice)-.165
E F2(;).916 E(unsigned char)85.75 444 Q F3(map_r)2.75 E(eturn)-.407 E F2
([];).916 E(int)85.75 456 Q F3(nmap)2.75 E F2(;).916 E F3(display)72
475.2 Q F2(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F3(de)72 490.8 Q(vice)-.165 E F2(Speci\214es the desired de)
44.071 E(vice.)-.275 E F3(map_r)72 506.4 Q(eturn)-.407 E F2
(Speci\214es the mapping list.)20.465 E F3(nmap)72 522 Q F2
(Speci\214es the number of items in the mapping list.)47.558 E 36 517.35
36 528.35 DL 36 516.35 36 527.35 DL 41.5 526.6 36 526.6 DL 42.5 526.6 37
526.6 DL 48 526.6 42.5 526.6 DL F1(XGetDe)72.916 549.6 Q
(viceButtonMapping)-.165 E F2
(returns the current mapping of the speci\214ed e)3.666 E(xtension de)
-.165 E 2.75(vice. Ele-)-.275 F(ments of the list are inde)72 561.6 Q
-.165(xe)-.165 G 2.75(ds).165 G(tarting from one.)-2.75 E F1(XGetDe)
6.416 E(viceButtonMapping)-.165 E F2(returns the number)3.666 E(of ph)72
573.6 Q(ysical b)-.055 E(uttons actually on the pointer)-.22 E 5.5(.T)
-.605 G(he nominal mapping for the b)-5.5 E(uttons is the identity)-.22
E(mapping: map[i]=i.)72 585.6 Q(The nmap ar)5.5 E
(gument speci\214es the length of the array where the b)-.198 E
(utton map-)-.22 E(ping is returned, and only the \214rst nmap elements\
 are returned in map_return.)72 597.6 Q F1(XGetDe)72.916 613.2 Q
(viceButtonMapping)-.165 E F2(can generate)3.666 E F1(BadDe)3.666 E
(vice)-.165 E F2(and)3.666 E F1(BadMatch)3.666 E F2(errors.)3.666 E F1
2.75(2.1.12. Obtaining)72 637.2 R(the State of a De)2.75 E(vice)-.165 E
F2 1.76 -.88(To o)72 652.8 T
(btain information that describes the state of the k).88 E -.165(ey)-.11
G(s, b).165 E(uttons, and v)-.22 E(aluators of an e)-.275 E(xtension)
-.165 E(de)72 664.8 Q(vice, use)-.275 E F1(XQueryDe)3.666 E(viceState)
-.165 E F2(.).916 E F1(27)282.5 768 Q EP
%%Page: 28 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(XDe)72 99.6 Q
(viceState * XQueryDe)-.275 E(viceState\()-.275 E/F3 11/Times-Italic@0
SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(\)).916 E
(Display *)85.75 111.6 Q F3(display)A F2(;).916 E(XDe)85.75 123.6 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E F3(display)72 142.8 Q
F2(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605
E F3(de)72 158.4 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E 36 153.75 36 164.75 DL 36 152.75 36 163.75 DL 41.5 163 36
163 DL 42.5 163 37 163 DL 48 163 42.5 163 DL F1(XQueryDe)72.916 186 Q
(viceState)-.165 E F2(returns a pointer to an)3.666 E F1(XDe)3.666 E
(viceState)-.165 E F2(structure, which points to a list of)3.666 E
(structures that describe the state of the k)72 198 Q -.165(ey)-.11 G
(s, b).165 E(uttons, and v)-.22 E(aluators on the de)-.275 E(vice:)-.275
E 36 217.35 36 228.35 DL 36 216.35 36 227.35 DL 41.5 214.6 36 214.6 DL
42.5 214.6 37 214.6 DL 48 214.6 42.5 214.6 DL(typedef struct {)72 231.6
Q(XID de)108 243.6 Q(vice_id;)-.275 E(int num_classes;)108 255.6 Q
(XInputClass *data;)108 267.6 Q 2.75(}X)72 279.6 S(De)-2.75 E
(viceState;)-.275 E 36 280.95 36 291.95 DL 36 279.95 36 290.95 DL 41.5
290.2 36 290.2 DL 42.5 290.2 37 290.2 DL 48 290.2 42.5 290.2 DL
(The structures are of v)72 313.2 Q(ariable length, b)-.275 E
(ut the \214rst tw)-.22 E 2.75(om)-.11 G
(embers are common to all and are as fol-)-2.75 E(lo)72 325.2 Q(ws:)
-.275 E 36 344.55 36 355.55 DL 36 343.55 36 354.55 DL 41.5 341.8 36
341.8 DL 42.5 341.8 37 341.8 DL 48 341.8 42.5 341.8 DL(typedef struct {)
72 358.8 Q(unsigned char class;)108 370.8 Q(unsigned char length;)108
382.8 Q 2.75(}X)72 394.8 S(InputClass;)-2.75 E 36 396.15 36 407.15 DL 36
395.15 36 406.15 DL 41.5 405.4 36 405.4 DL 42.5 405.4 37 405.4 DL 48
405.4 42.5 405.4 DL(The class member contains a class identi\214er)72
428.4 Q 5.5(.T)-.605 G(his identi\214er can be compared with constants)
-5.5 E(de\214ned in the \214le <)72 440.4 Q F1(X11/extensions/XI.h).916
E F2 2.75(>. Currently).916 F(de\214ned constants are:)2.75 E F1 -.275
(Ke)3.666 G(yClass).275 E F2(,).916 E F1(ButtonClass)72.916 452.4 Q F2
2.75(,a).916 G(nd)-2.75 E F1 -1.012(Va)3.666 G(luatorClass)1.012 E F2(.)
.916 E(The length member contains the length of the structure and can b\
e used by clients to tra)72 468 Q -.165(ve)-.22 G(rse the).165 E(list.)
72 480 Q(The)72 495.6 Q F1(XV)3.666 E(aluatorState)-1.012 E F2
(structure describes the current state of the v)3.666 E
(aluators on the de)-.275 E 2.75(vice. The)-.275 F(num_v)72 507.6 Q
(aluators member contains the number of v)-.275 E(aluators on the de)
-.275 E 2.75(vice. The)-.275 F(mode member is a)2.75 E(mask whose bits \
report the data mode and other state information for the de)72 519.6 Q
2.75(vice. The)-.275 F(follo)2.75 E(wing)-.275 E
(bits are currently de\214ned:)72 531.6 Q(De)108 549.6 Q 12.71
(viceMode 1)-.275 F(<< 0)2.75 E(Relati)43.092 E .33 -.165(ve = 0)-.275 H
2.75(,A).165 G(bsolute = 1)-2.75 E 3.239(ProximityState 1)108 561.6 R
(<< 1)2.75 E(InProximity = 0, OutOfProximity = 1)43.092 E(The v)72 579.6
Q(aluators member contains a pointer to an array of inte)-.275 E
(gers that describe the current v)-.165 E(alue of)-.275 E(the v)72 591.6
Q 2.75(aluators. If)-.275 F(the mode is)2.75 E F1(Relati)3.666 E -.11
(ve)-.11 G F2 2.75(,t)1.026 G(hese v)-2.75 E(alues are unde\214ned.)
-.275 E 36 610.95 36 621.95 DL 36 609.95 36 620.95 DL 41.5 608.2 36
608.2 DL 42.5 608.2 37 608.2 DL 48 608.2 42.5 608.2 DL(typedef struct {)
72 625.2 Q(unsigned char class;)108 637.2 Q(unsigned char length;)108
649.2 Q(unsigned char num_v)108 661.2 Q(aluators;)-.275 E
(unsigned char mode;)108 673.2 Q(int *v)108 685.2 Q(aluators;)-.275 E
2.75(}X)72 697.2 S -1.221(Va)-2.75 G(luatorState;)1.221 E 36 698.55 36
709.55 DL 36 697.55 36 708.55 DL 41.5 707.8 36 707.8 DL 42.5 707.8 37
707.8 DL 48 707.8 42.5 707.8 DL(The)72 730.8 Q F1(XK)3.666 E(eyState)
-.275 E F2(structure describes the current state of the k)3.666 E -.165
(ey)-.11 G 2.75(so).165 G 2.75(nt)-2.75 G(he de)-2.75 E 2.75(vice. Byte)
-.275 F 2.75(N\()2.75 G(from 0\))-2.75 E F1(28)282.5 768 Q EP
%%Page: 29 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(contains the bits for k)72 84 Q .33 -.165(ey 8)-.11
H 2.75(Nt).165 G 2.75(o8)-2.75 G 2.75(N+7w)-2.75 G
(ith the least signi\214cant bit in the byte representing k)-2.75 E
-.165(ey)-.11 G(8N.)72 96 Q .44 LW 36 115.35 36 126.35 DL 36 114.35 36
125.35 DL 41.5 112.6 36 112.6 DL 42.5 112.6 37 112.6 DL 48 112.6 42.5
112.6 DL(typedef struct {)72 129.6 Q(unsigned char class;)108 141.6 Q
(unsigned char length;)108 153.6 Q(short num_k)108 165.6 Q -.165(ey)-.11
G(s;).165 E(char k)108 177.6 Q -.165(ey)-.11 G(s[32];).165 E 2.75(}X)72
189.6 S -2.365 -.275(Ke y)-2.75 H(State;).275 E 36 190.95 36 201.95 DL
36 189.95 36 200.95 DL 41.5 200.2 36 200.2 DL 42.5 200.2 37 200.2 DL 48
200.2 42.5 200.2 DL(The)72 223.2 Q F1(XButtonState)3.666 E F2
(structure describes the current state of the b)3.666 E
(uttons on the de)-.22 E 2.75(vice. Byte)-.275 F(N)2.75 E
(\(from 0\) contains the bits for b)72 235.2 Q
(utton 8N to 8N + 7 with the least signi\214cant bit in the byte repre-)
-.22 E(senting b)72 247.2 Q(utton 8N.)-.22 E 36 266.55 36 277.55 DL 36
265.55 36 276.55 DL 41.5 263.8 36 263.8 DL 42.5 263.8 37 263.8 DL 48
263.8 42.5 263.8 DL(typedef struct {)72 280.8 Q(unsigned char class;)108
292.8 Q(unsigned char length;)108 304.8 Q(short num_b)108 316.8 Q
(uttons;)-.22 E(char b)108 328.8 Q(uttons[32];)-.22 E 2.75(}X)72 340.8 S
(ButtonState;)-2.75 E 36 342.15 36 353.15 DL 36 341.15 36 352.15 DL 41.5
351.4 36 351.4 DL 42.5 351.4 37 351.4 DL 48 351.4 42.5 351.4 DL F1
(XQueryDe)72.916 374.4 Q(viceState)-.165 E F2(can generate)3.666 E F1
(BadDe)3.666 E(vice)-.165 E F2(errors.)3.666 E 1.76 -.88(To f)72 402 T
(ree the data returned by this function, use).88 E F1(XFr)3.666 E(eeDe)
-.198 E(viceState)-.165 E F2(.).916 E 36 417.75 36 428.75 DL 36 416.75
36 427.75 DL 41.5 415 36 415 DL 42.5 415 37 415 DL 48 415 42.5 415 DL
-.22(vo)72 429.6 S(id XFreeDe).22 E(viceState\()-.275 E/F3 11
/Times-Italic@0 SF(state)A F2(\)).916 E(XDe)85.75 441.6 Q
(viceState *state;)-.275 E F3(state)72 460.8 Q F2 1.932
(Speci\214es the pointer to the)51.221 F F1(XDe)5.597 E(viceState)-.165
E F2 1.931(data returned by a pre)5.597 F 1.931(vious call to)-.275 F F1
(XQueryDe)144.916 472.8 Q(viceState)-.165 E F2(.).916 E 36 468.15 36
479.15 DL 36 467.15 36 478.15 DL 41.5 477.4 36 477.4 DL 42.5 477.4 37
477.4 DL 48 477.4 42.5 477.4 DL F1(XFr)72.916 500.4 Q(eeDe)-.198 E
(viceState)-.165 E F2(frees the de)3.666 E(vice state data.)-.275 E F1
2.75(2.2. Ev)72 524.4 R(ents)-.11 E F2(The input e)72 540 Q
(xtension creates input e)-.165 E -.165(ve)-.275 G
(nts analogous to the core input e).165 E -.165(ve)-.275 G 2.75
(nts. These).165 F -.165(ex)2.75 G(tension).165 E(input e)72 552 Q -.165
(ve)-.275 G(nts are generated by manipulating one of the e).165 E
(xtension input de)-.165 E 2.75(vices. The)-.275 F(remainder of)2.75 E
(this section discusses the follo)72 564 Q(wing X Input Extension e)
-.275 E -.165(ve)-.275 G(nt topics:).165 E 23.65<8345>72 579.6 S -.165
(ve)-23.65 G(nt types).165 E 23.65<8345>72 595.2 S -.165(ve)-23.65 G
(nt classes).165 E 23.65<8345>72 610.8 S -.165(ve)-23.65 G
(nt structures).165 E F1 2.75(2.2.1. Ev)72 634.8 R(ent T)-.11 E(ypes)
-.814 E F2(Ev)72 650.4 Q(ent types are inte)-.165 E
(ger numbers that a client can use to determine what kind of e)-.165 E
-.165(ve)-.275 G(nt it has).165 E(recei)72 662.4 Q -.165(ve)-.275 G 2.75
(d. The).165 F(client compares the type \214eld of the e)2.75 E -.165
(ve)-.275 G(nt structure with kno).165 E(wn e)-.275 E -.165(ve)-.275 G
(nt types to).165 E(mak)72 674.4 Q 2.75(et)-.11 G(his determination.)
-2.75 E(The core input e)72 690 Q -.165(ve)-.275 G
(nt types are constants and are de\214ned in the header \214le <).165 E
F1(X11/X.h).916 E F2 2.75(>. Extension).916 F -2.365 -.275(ev e)72 702 T
(nt types are not constants.).275 E(Instead, the)5.5 E 2.75(ya)-.165 G
(re dynamically allocated by the e)-2.75 E(xtension')-.165 E 2.75(sr)
-.605 G(equest)-2.75 E(to the X serv)72 714 Q(er when the e)-.165 E
(xtension is initialized.)-.165 E(Because of this, e)5.5 E(xtension e)
-.165 E -.165(ve)-.275 G(nt types must be).165 E
(obtained by the client from the serv)72 726 Q(er)-.165 E(.)-.605 E F1
(29)282.5 768 Q EP
%%Page: 30 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(The client program determines the e)72 84 Q -.165
(ve)-.275 G(nt type for an e).165 E(xtension e)-.165 E -.165(ve)-.275 G
(nt by using the information).165 E(returned by the)72 96 Q F1(XOpenDe)
3.666 E(vice)-.165 E F2 2.75(request. This)3.666 F
(type can then be used for comparison with the type)2.75 E(\214eld of e)
72 108 Q -.165(ve)-.275 G(nts recei).165 E -.165(ve)-.275 G 2.75(db).165
G 2.75(yt)-2.75 G(he client.)-2.75 E(Extension e)72 123.6 Q -.165(ve)
-.275 G(nts propag).165 E(ate up the windo)-.055 E 2.75(wh)-.275 G
(ierarch)-2.75 E 2.75(yi)-.055 G 2.75(nt)-2.75 G
(he same manner as core e)-2.75 E -.165(ve)-.275 G 2.75(nts. If).165 F
2.75(aw)2.75 G(in-)-2.75 E(do)72 135.6 Q 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot interested in an e)-2.75 E(xtension e)-.165 E -.165(ve)-.275 G
(nt, it usually propag).165 E(ates to the closest ancestor that is)-.055
E(interested, unless the dont_propag)72 147.6 Q(ate list prohibits it.)
-.055 E(Grabs of e)5.5 E(xtension de)-.165 E(vices may alter the set)
-.275 E(of windo)72 159.6 Q(ws that recei)-.275 E .33 -.165(ve a p)-.275
H(articular e).165 E(xtension e)-.165 E -.165(ve)-.275 G(nt.).165 E
(The follo)72 175.2 Q(wing table lists the e)-.275 E -.165(ve)-.275 G
(nt cate).165 E(gory and its associated e)-.165 E -.165(ve)-.275 G
(nt type or types.).165 E .44 LW 312.75 185.95 72 185.95 DL F1(Ev)72
201.2 Q(ent Category)-.11 E(Ev)122.987 E(ent T)-.11 E(ype)-.814 E 312.75
211.95 72 211.95 DL F2(De)72 221.2 Q(vice k)-.275 E -.165(ey)-.11 G F1
(De)269.416 221.2 Q(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E(De)269.416
233.2 Q(viceK)-.165 E(eyRelease)-.275 E F2(De)72 248.2 Q(vice motion)
-.275 E F1(De)269.416 248.2 Q(viceButtonPr)-.165 E(ess)-.198 E(De)
269.416 260.2 Q(viceButtonRelease)-.165 E(De)269.416 272.2 Q
(viceMotionNotify)-.165 E F2(De)72 287.2 Q(vice input focus)-.275 E F1
(De)269.416 287.2 Q(viceF)-.165 E(ocusIn)-.275 E(De)269.416 299.2 Q
(viceF)-.165 E(ocusOut)-.275 E F2(De)72 314.2 Q
(vice state noti\214cation)-.275 E F1(De)269.416 314.2 Q
(viceStateNotify)-.165 E F2(De)72 329.2 Q(vice proximity)-.275 E F1(Pr)
269.416 329.2 Q(oximityIn)-.198 E(Pr)269.416 341.2 Q(oximityOut)-.198 E
F2(De)72 356.2 Q(vice mapping)-.275 E F1(De)269.416 356.2 Q
(viceMappingNotify)-.165 E F2(De)72 371.2 Q(vice change)-.275 E F1
(ChangeDe)269.416 371.2 Q(viceNotify)-.165 E 312.75 381.95 72 381.95 DL
2.75(2.2.2. Ev)72 409.2 R(ent Classes)-.11 E F2(Ev)72 424.8 Q
(ent classes are inte)-.165 E(ger numbers that are used in the same w)
-.165 E(ay as the core e)-.11 E -.165(ve)-.275 G(nt masks.).165 E(The)
5.5 E(y)-.165 E(are used by a client program to indicate to the serv)72
436.8 Q(er which e)-.165 E -.165(ve)-.275 G
(nts that client program wishes to).165 E(recei)72 448.8 Q -.165(ve)
-.275 G(.).165 E(The core input e)72 464.4 Q -.165(ve)-.275 G
(nt masks are constants and are de\214ned in the header \214le <).165 E
F1(X11/X.h).916 E F2 2.75(>. Exten-).916 F(sion e)72 476.4 Q -.165(ve)
-.275 G(nt classes are not constants.).165 E(Instead, the)5.5 E 2.75(ya)
-.165 G(re dynamically allocated by the e)-2.75 E(xtension')-.165 E(s)
-.605 E(request to the X serv)72 488.4 Q(er when the e)-.165 E
(xtension is initialized.)-.165 E(Because of this, e)5.5 E(xtension e)
-.165 E -.165(ve)-.275 G(nt classes).165 E
(must be obtained by the client from the serv)72 500.4 Q(er)-.165 E(.)
-.605 E(The e)72 516 Q -.165(ve)-.275 G(nt class for an e).165 E
(xtension e)-.165 E -.165(ve)-.275 G(nt and de).165 E
(vice is obtained from information returned by the)-.275 E F1(XOpenDe)
72.916 528 Q(vice)-.165 E F2 2.75(function. This)3.666 F
(class can then be used in an)2.75 E F1(XSelectExtensionEv)3.666 E(ent)
-.11 E F2(request to)3.666 E(ask that e)72 540 Q -.165(ve)-.275 G
(nts of that type from that de).165 E
(vice be sent to the client program.)-.275 E -.165(Fo)72 555.6 S(r).165
E F1(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F2 -2.365 -.275(ev e)
3.666 H(nts, the client may specify whether or not an implicit passi)
.275 E .33 -.165(ve g)-.275 H(rab).165 E(should be done when the b)72
567.6 Q(utton is pressed.)-.22 E(If the client w)5.5 E
(ants to guarantee that it will recei)-.11 E .33 -.165(ve a)-.275 H F1
(De)72.916 579.6 Q(viceButtonRelease)-.165 E F2 -2.365 -.275(ev e)3.666
H(nt for each).275 E F1(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F2
-2.365 -.275(ev e)3.666 H(nt it recei).275 E -.165(ve)-.275 G
(s, it should specify the).165 E F1(De)72.916 591.6 Q(viceButtonPr)-.165
E(essGrab)-.198 E F2(class in addition to the)3.666 E F1(De)3.666 E
(viceButtonPr)-.165 E(ess)-.198 E F2 2.75(class. This)3.666 F
(restricts the)2.75 E
(client in that only one client at a time may request)72 603.6 Q F1(De)
3.666 E(viceButtonPr)-.165 E(ess)-.198 E F2 -2.365 -.275(ev e)3.666 H
(nts from the same).275 E(de)72 615.6 Q(vice and windo)-.275 E 2.75(wi)
-.275 G 2.75(fa)-2.75 G .33 -.165(ny c)-2.75 H
(lient speci\214es this class.).165 E(If an)72 631.2 Q 2.75(yc)-.165 G
(lient has speci\214ed the)-2.75 E F1(De)3.666 E(viceButtonPr)-.165 E
(essGrab)-.198 E F2(class, an)3.666 E 2.75(yr)-.165 G(equests by an)
-2.75 E 2.75(yo)-.165 G(ther client)-2.75 E(that specify the same de)72
643.2 Q(vice and windo)-.275 E 2.75(wa)-.275 G(nd specify either)-2.75 E
F1(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F2(or)3.666 E F1(De)3.666
E(viceBut-)-.165 E(tonPr)72 655.2 Q(essGrab)-.198 E F2(will cause an)
3.666 E F1(Access)3.666 E F2(error to be generated.)3.666 E(If only the)
72 670.8 Q F1(De)3.666 E(viceButtonPr)-.165 E(ess)-.198 E F2
(class is speci\214ed, no implicit passi)3.666 E .33 -.165(ve g)-.275 H
(rab will be done when a).165 E -.22(bu)72 682.8 S
(tton is pressed on the de).22 E 2.75(vice. Multiple)-.275 F
(clients may use this class to specify the same de)2.75 E(vice and)-.275
E(windo)72 694.8 Q 2.75(wc)-.275 G(ombination.)-2.75 E
(The client may also select)72 710.4 Q F1(De)3.666 E(viceMotion)-.165 E
F2 -2.365 -.275(ev e)3.666 H(nts only when a b).275 E(utton is do)-.22 E
2.75(wn. It)-.275 F(does this by)2.75 E(specifying the e)72 722.4 Q
-.165(ve)-.275 G(nt classes).165 E F1(De)3.666 E(viceButton1Motion)-.165
E F2(through)3.666 E F1(De)3.666 E(viceButton5Motion)-.165 E F2 5.5(.A)
.916 G 2.75(ni)-5.5 G(nput)-2.75 E F1(30)282.5 768 Q EP
%%Page: 31 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(de)72 84 Q(vice will support only as man)-.275 E
2.75(yb)-.165 G(utton motion classes as it has b)-2.97 E(uttons.)-.22 E
F1 2.75(2.2.3. Ev)72 108 R(ent Structur)-.11 E(es)-.198 E F2(Each e)72
123.6 Q(xtension e)-.165 E -.165(ve)-.275 G
(nt type has a corresponding structure declared in).165 E(<)72 135.6 Q
F1(X11/extensions/XInput.h).916 E F2 2.75(>. All).916 F -2.365 -.275
(ev e)2.75 H(nt structures ha).275 E .33 -.165(ve t)-.22 H(he follo).165
E(wing common members:)-.275 E 50.308(type Set)72 151.2 R(to the e)2.75
E -.165(ve)-.275 G(nt type number that uniquely identi\214es it.).165 E
-.165(Fo)5.5 G 2.75(re).165 G(xample, when the X)-2.915 E(serv)144 163.2
Q(er reports a)-.165 E F1(De)3.666 E(viceK)-.165 E(eyPr)-.275 E(ess)
-.198 E F2 -2.365 -.275(ev e)3.666 H
(nt to a client application, it sends an).275 E F1(XDe-)3.666 E(viceK)
144 175.2 Q(eyPr)-.275 E(essEv)-.198 E(ent)-.11 E F2(structure.)3.666 E
45.424(serial Set)72 190.8 R
(from the serial number reported in the protocol b)2.75 E(ut e)-.22 E
(xpanded from the 16-bit)-.165 E
(least signi\214cant bits to a full 32-bit v)144 202.8 Q(alue.)-.275 E
(send_e)72 218.4 Q -.165(ve)-.275 G 20.201(nt Set).165 F(to)2.75 E F1
-.814(Tr)3.666 G(ue).814 E F2(if the e)3.666 E -.165(ve)-.275 G
(nt came from an).165 E F1(XSendEv)3.666 E(ent)-.11 E F2(request.)3.666
E 37.471(display Set)72 234 R
(to a pointer to a structure that de\214nes the display on which the e)
2.75 E -.165(ve)-.275 G(nt w).165 E(as)-.11 E(read.)144 246 Q
(Extension e)72 261.6 Q -.165(ve)-.275 G
(nt structures report the current position of the X pointer).165 E 5.5
(.I)-.605 G 2.75(na)-5.5 G(ddition, if the de)-2.75 E(vice)-.275 E
(reports motion data and is reporting absolute data, the current v)72
273.6 Q(alue of an)-.275 E 2.75(yv)-.165 G(aluators the de)-3.025 E
(vice)-.275 E(contains is also reported.)72 285.6 Q F1 2.75(2.2.3.1. De)
72 309.6 R(vice K)-.165 E(ey Ev)-.275 E(ents)-.11 E F2 -2.365 -.275
(Ke y)72 325.2 T -2.365 -.275(ev e)3.025 H(nts from e).275 E
(xtension de)-.165 E
(vices contain all the information that is contained in a k)-.275 E .33
-.165(ey e)-.11 H -.165(ve)-.11 G(nt).165 E(from the X k)72 337.2 Q
-.165(ey)-.11 G 2.75(board. In).165 F(addition, the)2.75 E 2.75(yc)-.165
G(ontain a de)-2.75 E(vice ID and report the current v)-.275 E
(alue of an)-.275 E(y)-.165 E -.275(va)72 349.2 S(luators on the de).275
E(vice, if that de)-.275 E(vice is reporting absolute data.)-.275 E
(If data for more than six v)5.5 E(alua-)-.275 E
(tors is being reported, more than one k)72 361.2 Q .33 -.165(ey e)-.11
H -.165(ve)-.11 G(nt will be sent.).165 E(The ax)5.5 E
(es_count member contains the)-.165 E(number of ax)72 373.2 Q
(es that are being reported.)-.165 E(The serv)5.5 E(er sends as man)
-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese e)-2.75 E -.165(ve)-.275 G
(nts as are needed to).165 E(report the de)72 385.2 Q(vice data.)-.275 E
(Each e)5.5 E -.165(ve)-.275 G(nt contains the total number of ax).165 E
(es reported in the ax)-.165 E(es_count)-.165 E
(member and the \214rst axis reported in the current e)72 397.2 Q -.165
(ve)-.275 G(nt in the \214rst_axis member).165 E 5.5(.I)-.605 G 2.75(ft)
-5.5 G(he de)-2.75 E(vice sup-)-.275 E(ports input class)72 409.2 Q F1
-1.012(Va)3.666 G(luators)1.012 E F2 2.75(,b).916 G
(ut is not reporting absolute mode data, the ax)-2.97 E(es_count member)
-.165 E(contains zero \(0\).)72 421.2 Q(The location reported in the x,\
 y and x_root, y_root members is the location of the core X pointer)72
436.8 Q(.)-.605 E(The)72 452.4 Q F1(XDe)3.666 E(viceK)-.165 E(eyEv)-.275
E(ent)-.11 E F2(structure is de\214ned as follo)3.666 E(ws:)-.275 E F1
(31)282.5 768 Q EP
%%Page: 32 34
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q(int type;)108 114 Q(/* of e)143.634 E -.165(ve)-.275 G(nt */).165
E(unsigned long serial;)108 126 Q(/* # of last request processed */)
88.337 E(Bool send_e)108 138 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if from SendEv)2.75 E(ent request */)-.165 E(Display *display;)108
150 Q(/* Display the e)102.692 E -.165(ve)-.275 G(nt w).165 E
(as read from */)-.11 E -.44(Wi)108 162 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E 99.106(w; /*)-.275 F("e)2.75 E -.165(ve)-.275 G(nt" windo)
.165 E 2.75(wr)-.275 G(eported relati)-2.75 E .33 -.165(ve t)-.275 H
2.75(o*).165 G(/)-2.75 E(XID de)108 174 Q(viceid;)-.275 E -.44(Wi)108
186 S(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F(root windo)2.75
E 2.75(we)-.275 G -.165(ve)-3.025 G(nt occurred on */).165 E -.44(Wi)108
198 S(ndo).44 E 2.75(ws)-.275 G(ubwindo)-2.75 E 83.827(w; /*)-.275 F
(child windo)2.75 E 2.75(w*)-.275 G(/)-2.75 E -.385(Ti)108 210 S
(me time;).385 E(/* milliseconds */)131.798 E(int x, y;)108 222 Q
(/* x, y coordinates in e)146.076 E -.165(ve)-.275 G(nt windo).165 E
2.75(w*)-.275 G(/)-2.75 E(int x_root;)108 234 Q(/* coordinates relati)
133.855 E .33 -.165(ve t)-.275 H 2.75(or).165 G(oot */)-2.75 E
(int y_root;)108 246 Q(/* coordinates relati)133.855 E .33 -.165(ve t)
-.275 H 2.75(or).165 G(oot */)-2.75 E(unsigned int state;)108 258 Q
(/* k)99.942 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97
E(unsigned int k)108 270 Q -.165(ey)-.11 G 80.978(code; /*).165 F
(detail */)2.75 E(Bool same_screen;)108 282 Q(/* same screen \215ag */)
96.598 E(unsigned int de)108 294 Q 63.257(vice_state; /*)-.275 F(de)2.75
E(vice k)-.275 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)
-2.97 E(unsigned char ax)108 306 Q(es_count;)-.165 E
(unsigned char \214rst_axis;)108 318 Q(int axis_data[6];)108 330 Q 2.75
(}X)72 342 S(De)-2.75 E(viceK)-.275 E -.165(ey)-.275 G(Ev).165 E(ent;)
-.165 E(typedef XDe)72 366 Q(viceK)-.275 E -.165(ey)-.275 G(Ev).165 E
(ent XDe)-.165 E(viceK)-.275 E -.165(ey)-.275 G(PressedEv).165 E(ent;)
-.165 E(typedef XDe)72 378 Q(viceK)-.275 E -.165(ey)-.275 G(Ev).165 E
(ent XDe)-.165 E(viceK)-.275 E -.165(ey)-.275 G(ReleasedEv).165 E(ent;)
-.165 E 36 375.75 36 386.75 DL 36 374.75 36 385.75 DL 41.5 385 36 385 DL
42.5 385 37 385 DL 48 385 42.5 385 DL F1 2.75(2.2.3.2. De)72 420 R
(vice Button Ev)-.165 E(ents)-.11 E F2(Button e)72 435.6 Q -.165(ve)
-.275 G(nts from e).165 E(xtension de)-.165 E
(vices contain all the information that is contained in a b)-.275 E
(utton)-.22 E -2.365 -.275(ev e)72 447.6 T(nt from the X pointer).275 E
5.5(.I)-.605 G 2.75(na)-5.5 G(ddition, the)-2.75 E 2.75(yc)-.165 G
(ontain a de)-2.75 E(vice ID and report the current v)-.275 E
(alue of an)-.275 E(y)-.165 E -.275(va)72 459.6 S(luators on the de).275
E(vice if that de)-.275 E(vice is reporting absolute data.)-.275 E
(If data for more than six v)5.5 E(alua-)-.275 E
(tors is being reported, more than one b)72 471.6 Q(utton e)-.22 E -.165
(ve)-.275 G(nt may be sent.).165 E(The ax)5.5 E
(es_count member contains)-.165 E(the number of ax)72 483.6 Q
(es that are being reported.)-.165 E(The serv)5.5 E(er sends as man)
-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese e)-2.75 E -.165(ve)-.275 G
(nts as are).165 E(needed to report the de)72 495.6 Q(vice data.)-.275 E
(Each e)5.5 E -.165(ve)-.275 G(nt contains the total number of ax).165 E
(es reported in the)-.165 E(ax)72 507.6 Q
(es_count member and the \214rst axis reported in the current e)-.165 E
-.165(ve)-.275 G(nt in the \214rst_axis member).165 E 5.5(.I)-.605 G
2.75(ft)-5.5 G(he)-2.75 E(de)72 519.6 Q(vice supports input class)-.275
E F1 -1.012(Va)3.666 G(luators)1.012 E F2 2.75(,b).916 G
(ut is not reporting absolute mode data, the ax)-2.97 E(es_count)-.165 E
(member contains zero \(0\).)72 531.6 Q(The location reported in the x,\
 y and x_root, y_root members is the location of the core X pointer)72
547.2 Q(.)-.605 E F1(32)282.5 768 Q EP
%%Page: 33 35
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q(int type;)108 114 Q(/* of e)143.634 E -.165(ve)-.275 G(nt */).165
E(unsigned long serial;)108 126 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 138 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if from a SendEv)2.75 E(ent request */)-.165 E(Display *display;)
108 150 Q(/* Display the e)102.692 E -.165(ve)-.275 G(nt w).165 E
(as read from */)-.11 E -.44(Wi)108 162 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E 99.106(w; /*)-.275 F("e)2.75 E -.165(ve)-.275 G(nt" windo)
.165 E 2.75(wr)-.275 G(eported relati)-2.75 E .33 -.165(ve t)-.275 H
2.75(o*).165 G(/)-2.75 E(XID de)108 174 Q(viceid;)-.275 E -.44(Wi)108
186 S(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F(root windo)2.75
E 2.75(wt)-.275 G(hat the e)-2.75 E -.165(ve)-.275 G(nt occurred on */)
.165 E -.44(Wi)108 198 S(ndo).44 E 2.75(ws)-.275 G(ubwindo)-2.75 E
83.827(w; /*)-.275 F(child windo)2.75 E 2.75(w*)-.275 G(/)-2.75 E -.385
(Ti)108 210 S(me time;).385 E(/* milliseconds */)131.798 E(int x, y;)108
222 Q(/* x, y coordinates in e)146.076 E -.165(ve)-.275 G(nt windo).165
E 2.75(w*)-.275 G(/)-2.75 E(int x_root;)108 234 Q(/* coordinates relati)
133.855 E .33 -.165(ve t)-.275 H 2.75(or).165 G(oot */)-2.75 E
(int y_root;)108 246 Q(/* coordinates relati)133.855 E .33 -.165(ve t)
-.275 H 2.75(or).165 G(oot */)-2.75 E(unsigned int state;)108 258 Q
(/* k)99.942 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97
E(unsigned int b)108 270 Q 89.459(utton; /*)-.22 F(detail */)2.75 E
(Bool same_screen;)108 282 Q(/* same screen \215ag */)96.598 E
(unsigned int de)108 294 Q 63.257(vice_state; /*)-.275 F(de)2.75 E
(vice k)-.275 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97
E(unsigned char ax)108 306 Q(es_count;)-.165 E
(unsigned char \214rst_axis;)108 318 Q(int axis_data[6];)108 330 Q 2.75
(}X)72 342 S(De)-2.75 E(viceButtonEv)-.275 E(ent;)-.165 E(typedef XDe)72
366 Q(viceButtonEv)-.275 E(ent XDe)-.165 E(viceButtonPressedEv)-.275 E
(ent;)-.165 E(typedef XDe)72 378 Q(viceButtonEv)-.275 E(ent XDe)-.165 E
(viceButtonReleasedEv)-.275 E(ent;)-.165 E 36 375.75 36 386.75 DL 36
374.75 36 385.75 DL 41.5 385 36 385 DL 42.5 385 37 385 DL 48 385 42.5
385 DL F1 2.75(2.2.3.3. De)72 420 R(vice Motion Ev)-.165 E(ents)-.11 E
F2(Motion e)72 435.6 Q -.165(ve)-.275 G(nts from e).165 E(xtension de)
-.165 E(vices contain all the information that is contained in a motion)
-.275 E -2.365 -.275(ev e)72 447.6 T(nt from the X pointer).275 E 5.5
(.I)-.605 G 2.75(na)-5.5 G(ddition, the)-2.75 E 2.75(yc)-.165 G
(ontain a de)-2.75 E(vice ID and report the current v)-.275 E
(alue of an)-.275 E(y)-.165 E -.275(va)72 459.6 S(luators on the de).275
E(vice.)-.275 E(The location reported in the x, y and x_root, y_root me\
mbers is the location of the core X pointer)72 475.2 Q(,)-.44 E
(and so is 2-dimensional.)72 487.2 Q(Extension motion de)72 502.8 Q
(vices may report motion data for a v)-.275 E(ariable number of ax)-.275
E 2.75(es. The)-.165 F(ax)2.75 E(es_count)-.165 E
(member contains the number of ax)72 514.8 Q
(es that are being reported.)-.165 E(The serv)5.5 E(er sends as man)
-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese)-2.75 E -2.365 -.275(ev e)
72 526.8 T(nts as are needed to report the de).275 E(vice data.)-.275 E
(Each e)5.5 E -.165(ve)-.275 G(nt contains the total number of ax).165 E
(es)-.165 E(reported in the ax)72 538.8 Q
(es_count member and the \214rst axis reported in the current e)-.165 E
-.165(ve)-.275 G(nt in the \214rst_axis).165 E(member)72 550.8 Q(.)-.605
E F1(33)282.5 768 Q EP
%%Page: 34 36
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q(int type;)108 114 Q(/* of e)143.634 E -.165(ve)-.275 G(nt */).165
E(unsigned long serial;)108 126 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 138 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if from a SendEv)2.75 E(ent request */)-.165 E(Display *display;)
108 150 Q(/* Display the e)102.692 E -.165(ve)-.275 G(nt w).165 E
(as read from */)-.11 E -.44(Wi)108 162 S(ndo).44 E 2.75(ww)-.275 G
(indo)-2.75 E 99.106(w; /*)-.275 F("e)2.75 E -.165(ve)-.275 G(nt" windo)
.165 E 2.75(wr)-.275 G(eported relati)-2.75 E .33 -.165(ve t)-.275 H
2.75(o*).165 G(/)-2.75 E(XID de)108 174 Q(viceid;)-.275 E -.44(Wi)108
186 S(ndo).44 E 2.75(wr)-.275 G 116.552(oot; /*)-2.75 F(root windo)2.75
E 2.75(wt)-.275 G(hat the e)-2.75 E -.165(ve)-.275 G(nt occurred on */)
.165 E -.44(Wi)108 198 S(ndo).44 E 2.75(ws)-.275 G(ubwindo)-2.75 E
83.827(w; /*)-.275 F(child windo)2.75 E 2.75(w*)-.275 G(/)-2.75 E -.385
(Ti)108 210 S(me time;).385 E(/* milliseconds */)131.798 E(int x, y;)108
222 Q(/* x, y coordinates in e)146.076 E -.165(ve)-.275 G(nt windo).165
E 2.75(w*)-.275 G(/)-2.75 E(int x_root;)108 234 Q(/* coordinates relati)
133.855 E .33 -.165(ve t)-.275 H 2.75(or).165 G(oot */)-2.75 E
(int y_root;)108 246 Q(/* coordinates relati)133.855 E .33 -.165(ve t)
-.275 H 2.75(or).165 G(oot */)-2.75 E(unsigned int state;)108 258 Q
(/* k)99.942 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97
E(char is_hint;)108 270 Q(/* detail */)125.308 E(Bool same_screen;)108
282 Q(/* same screen \215ag */)96.598 E(unsigned int de)108 294 Q 63.257
(vice_state; /*)-.275 F(de)2.75 E(vice k)-.275 E .33 -.165(ey o)-.11 H
2.75(rb).165 G(utton mask */)-2.97 E(unsigned char ax)108 306 Q
(es_count;)-.165 E(unsigned char \214rst_axis;)108 318 Q
(int axis_data[6];)108 330 Q 2.75(}X)72 342 S(De)-2.75 E(viceMotionEv)
-.275 E(ent;)-.165 E 36 339.75 36 350.75 DL 36 338.75 36 349.75 DL 41.5
349 36 349 DL 42.5 349 37 349 DL 48 349 42.5 349 DL F1 2.75(2.2.3.4. De)
72 384 R(vice F)-.165 E(ocus Ev)-.275 E(ents)-.11 E F2(These e)72 399.6
Q -.165(ve)-.275 G(nts are equi).165 E -.275(va)-.275 G
(lent to the core focus e).275 E -.165(ve)-.275 G 2.75(nts. The).165 F
2.75(yc)-.165 G(ontain the same information, with the)-2.75 E
(addition of a de)72 411.6 Q(vice ID to identify which de)-.275 E
(vice has had a focus change, and a timestamp.)-.275 E F1(De)72.916
427.2 Q(viceF)-.165 E(ocusIn)-.275 E F2(and)3.666 E F1(De)3.666 E(viceF)
-.165 E(ocusOut)-.275 E F2 -2.365 -.275(ev e)3.666 H
(nts are generated for focus changes of e).275 E(xtension)-.165 E(de)72
439.2 Q(vices in the same manner as core focus e)-.275 E -.165(ve)-.275
G(nts are generated.).165 E 36 458.55 36 469.55 DL 36 457.55 36 468.55
DL 41.5 455.8 36 455.8 DL 42.5 455.8 37 455.8 DL 48 455.8 42.5 455.8 DL
(typedef struct {)72 472.8 Q(int type;)108 484.8 Q(/* of e)107.634 E
-.165(ve)-.275 G(nt */).165 E(unsigned long serial;)108 496.8 Q
(/* # of last request processed by serv)52.337 E(er */)-.165 E
(Bool send_e)108 508.8 Q -.165(ve)-.275 G 64.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 520.8 Q(/* Display the e)66.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 532.8 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E 63.106(w; /*)-.275 F("e)2.75 E -.165(ve)-.275 G
(nt" windo).165 E 2.75(wi)-.275 G 2.75(ti)-2.75 G 2.75(sr)-2.75 G
(eported relati)-2.75 E .33 -.165(ve t)-.275 H 2.75(o*).165 G(/)-2.75 E
(XID de)108 544.8 Q(viceid;)-.275 E(int mode;)108 556.8 Q
(/* NotifyNormal, NotifyGrab, NotifyUngrab */)102.134 E(int detail;)108
568.8 Q(/*)252 580.8 Q 2.75(*N)252 592.8 S(otifyAncestor)-2.75 E 2.75
(,N)-.44 G(otifyV)-2.75 E(irtual, NotifyInferior)-.66 E(,)-.44 E 2.75
(*N)252 604.8 S(otifyNonLinear)-2.75 E(,NotifyNonLinearV)-.44 E
(irtual, NotifyPointer)-.66 E(,)-.44 E 2.75(*N)252 616.8 S
(otifyPointerRoot, NotifyDetailNone)-2.75 E(*/)252 628.8 Q -.385(Ti)108
640.8 S(me time;).385 E 2.75(}X)72 652.8 S(De)-2.75 E(viceF)-.275 E
(ocusChangeEv)-.165 E(ent;)-.165 E(typedef XDe)72 676.8 Q(viceF)-.275 E
(ocusChangeEv)-.165 E(ent XDe)-.165 E(viceF)-.275 E(ocusInEv)-.165 E
(ent;)-.165 E(typedef XDe)72 688.8 Q(viceF)-.275 E(ocusChangeEv)-.165 E
(ent XDe)-.165 E(viceF)-.275 E(ocusOutEv)-.165 E(ent;)-.165 E 36 686.55
36 697.55 DL 36 685.55 36 696.55 DL 41.5 695.8 36 695.8 DL 42.5 695.8 37
695.8 DL 48 695.8 42.5 695.8 DL F1(34)282.5 768 Q EP
%%Page: 35 37
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
2.75(2.2.3.5. De)72 84 R(vice StateNotify Ev)-.165 E(ent)-.11 E/F2 11
/Times-Roman@0 SF(This e)72 99.6 Q -.165(ve)-.275 G
(nt is analogous to the core k).165 E -.165(ey)-.11 G(map e).165 E -.165
(ve)-.275 G(nt b).165 E(ut reports the current state of the de)-.22 E
(vice for)-.275 E(each input class that it supports.)72 111.6 Q
(It is generated after e)5.5 E -.165(ve)-.275 G(ry).165 E F1(De)3.666 E
(viceF)-.165 E(ocusIn)-.275 E F2 -2.365 -.275(ev e)3.666 H(nt and).275 E
F1(Enter)3.666 E(-)-.407 E(Notify)72 123.6 Q F2 -2.365 -.275(ev e)3.666
H(nt and is deli).275 E -.165(ve)-.275 G(red to clients who ha).165 E
.33 -.165(ve s)-.22 H(elected).165 E F1(XDe)3.666 E(viceStateNotify)
-.165 E F2 -2.365 -.275(ev e)3.666 H(nts.).275 E(If the de)72 139.2 Q
(vice supports input class)-.275 E F1 -1.012(Va)3.666 G(luators)1.012 E
F2 2.75(,t).916 G(he mode member in the)-2.75 E F1(XV)3.666 E
(aluatorStatus)-1.012 E F2(structure)3.666 E
(is a bitmask that reports the de)72 151.2 Q
(vice mode, proximity state, and other state information.)-.275 E
(The fol-)5.5 E(lo)72 163.2 Q(wing bits are currently de\214ned:)-.275 E
47.25(0x01 Relati)108 181.2 R .33 -.165(ve = 0)-.275 H 2.75(,A).165 G
(bsolute = 1)-2.75 E 47.25(0x02 InProximity)108 193.2 R 2.75(=0)2.75 G
2.75(,O)-2.75 G(utOfProximity = 1)-2.75 E(If the de)72 214.8 Q
(vice supports more v)-.275 E(aluators than can be reported in a single)
-.275 E F1(XEv)3.666 E(ent)-.11 E F2 2.75(,m).916 G(ultiple)-2.75 E F1
(XDe-)3.666 E(viceStateNotify)72 226.8 Q F2 -2.365 -.275(ev e)3.666 H
(nts will be generated.).275 E .44 LW 36 246.15 36 257.15 DL 36 245.15
36 256.15 DL 41.5 243.4 36 243.4 DL 42.5 243.4 37 243.4 DL 48 243.4 42.5
243.4 DL(typedef struct {)72 260.4 Q(unsigned char class;)108 272.4 Q
(unsigned char length;)108 284.4 Q 2.75(}X)72 296.4 S(InputClass;)-2.75
E(typedef struct {)72 320.4 Q(int type;)108 332.4 Q
(unsigned long serial;)108 344.4 Q
(/* # of last request processed by serv)88.337 E(er */)-.165 E
(Bool send_e)108 356.4 Q -.165(ve)-.275 G 100.998(nt; /*).165 F
(true if this came from a SendEv)2.75 E(ent request */)-.165 E
(Display *display;)108 368.4 Q(/* Display the e)102.692 E -.165(ve)-.275
G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 380.4 S(ndo).44 E 2.75
(ww)-.275 G(indo)-2.75 E(w;)-.275 E(XID de)108 392.4 Q(viceid;)-.275 E
-.385(Ti)108 404.4 S(me time;).385 E(int num_classes;)108 416.4 Q
(char data[64];)108 428.4 Q 2.75(}X)72 440.4 S(De)-2.75 E
(viceStateNotifyEv)-.275 E(ent;)-.165 E(typedef struct {)72 464.4 Q
(unsigned char class;)108 476.4 Q(unsigned char length;)108 488.4 Q
(unsigned char num_v)108 500.4 Q(aluators;)-.275 E(unsigned char mode;)
108 512.4 Q(int v)108 524.4 Q(aluators[6];)-.275 E 2.75(}X)72 536.4 S
-1.221(Va)-2.75 G(luatorStatus;)1.221 E(typedef struct {)72 560.4 Q
(unsigned char class;)108 572.4 Q(unsigned char length;)108 584.4 Q
(short num_k)108 596.4 Q -.165(ey)-.11 G(s;).165 E(char k)108 608.4 Q
-.165(ey)-.11 G(s[32];).165 E 2.75(}X)72 620.4 S -2.365 -.275(Ke y)-2.75
H(Status;).275 E(typedef struct {)72 644.4 Q(unsigned char class;)108
656.4 Q(unsigned char length;)108 668.4 Q(short num_b)108 680.4 Q
(uttons;)-.22 E(char b)108 692.4 Q(uttons[32];)-.22 E 2.75(}X)72 704.4 S
(ButtonStatus;)-2.75 E 36 702.15 36 713.15 DL 36 701.15 36 712.15 DL
41.5 711.4 36 711.4 DL 42.5 711.4 37 711.4 DL 48 711.4 42.5 711.4 DL F1
(35)282.5 768 Q EP
%%Page: 36 38
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
2.75(2.2.3.6. De)72 84 R(vice Mapping Ev)-.165 E(ent)-.11 E/F2 11
/Times-Roman@0 SF(This e)72 99.6 Q -.165(ve)-.275 G(nt is equi).165 E
-.275(va)-.275 G(lent to the core).275 E F1(MappingNotify)3.666 E F2
-2.365 -.275(ev e)3.666 H 2.75(nt. It).275 F
(noti\214es client programs when the)2.75 E(mapping of k)72 111.6 Q
-.165(ey)-.11 G(s, modi\214ers, or b).165 E(uttons on an e)-.22 E
(xtension de)-.165 E(vice has changed.)-.275 E .44 LW 36 130.95 36
141.95 DL 36 129.95 36 140.95 DL 41.5 128.2 36 128.2 DL 42.5 128.2 37
128.2 DL 48 128.2 42.5 128.2 DL(typedef struct {)72 145.2 Q(int type;)
108 157.2 Q(unsigned long serial;)108 169.2 Q(Bool send_e)108 181.2 Q
-.165(ve)-.275 G(nt;).165 E(Display *display;)108 193.2 Q -.44(Wi)108
205.2 S(ndo).44 E 2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(XID de)108
217.2 Q(viceid;)-.275 E -.385(Ti)108 229.2 S(me time;).385 E
(int request;)108 241.2 Q(int \214rst_k)108 253.2 Q -.165(ey)-.11 G
(code;).165 E(int count;)108 265.2 Q 2.75(}X)72 277.2 S(De)-2.75 E
(viceMappingEv)-.275 E(ent;)-.165 E 36 274.95 36 285.95 DL 36 273.95 36
284.95 DL 41.5 284.2 36 284.2 DL 42.5 284.2 37 284.2 DL 48 284.2 42.5
284.2 DL F1 2.75(2.2.3.7. ChangeDe)72 319.2 R(viceNotify Ev)-.165 E(ent)
-.11 E F2(This e)72 334.8 Q -.165(ve)-.275 G(nt has no equi).165 E -.275
(va)-.275 G(lent in the core protocol.).275 E
(It noti\214es client programs when one of the core)5.5 E(de)72 346.8 Q
(vices has been changed.)-.275 E 36 366.15 36 377.15 DL 36 365.15 36
376.15 DL 41.5 363.4 36 363.4 DL 42.5 363.4 37 363.4 DL 48 363.4 42.5
363.4 DL(typedef struct {)72 380.4 Q(int type;)108 392.4 Q
(unsigned long serial;)108 404.4 Q(Bool send_e)108 416.4 Q -.165(ve)
-.275 G(nt;).165 E(Display *display;)108 428.4 Q -.44(Wi)108 440.4 S
(ndo).44 E 2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(XID de)108 452.4 Q
(viceid;)-.275 E -.385(Ti)108 464.4 S(me time;).385 E(int request;)108
476.4 Q 2.75(}X)72 488.4 S(ChangeDe)-2.75 E(viceNotifyEv)-.275 E(ent;)
-.165 E 36 486.15 36 497.15 DL 36 485.15 36 496.15 DL 41.5 495.4 36
495.4 DL 42.5 495.4 37 495.4 DL 48 495.4 42.5 495.4 DL F1 2.75
(2.2.3.8. Pr)72 530.4 R(oximity Ev)-.198 E(ents)-.11 E F2(These e)72 546
Q -.165(ve)-.275 G(nts ha).165 E .33 -.165(ve n)-.22 H 2.75(oe).165 G
(qui)-2.75 E -.275(va)-.275 G(lent in the core protocol.).275 E
(Some input de)5.5 E(vices such as graphics tablets)-.275 E
(or touchscreens may send these e)72 558 Q -.165(ve)-.275 G
(nts to indicate that a stylus has mo).165 E -.165(ve)-.165 G 2.75(di)
.165 G(nto or out of contact)-2.75 E(with a positional sensing surf)72
570 Q(ace.)-.11 E(The e)72 585.6 Q -.165(ve)-.275 G
(nt contains the current v).165 E(alue of an)-.275 E 2.75(yv)-.165 G
(aluators on the de)-3.025 E(vice if that de)-.275 E(vice is reporting)
-.275 E(absolute data.)72 597.6 Q(If data for more than six v)5.5 E
(aluators is being reported, more than one proximity)-.275 E -2.365
-.275(ev e)72 609.6 T(nt may be sent.).275 E(The ax)5.5 E
(es_count member contains the number of ax)-.165 E
(es that are being reported.)-.165 E(The serv)72 621.6 Q
(er sends as man)-.165 E 2.75(yo)-.165 G 2.75(ft)-2.75 G(hese e)-2.75 E
-.165(ve)-.275 G(nts as are needed to report the de).165 E(vice data.)
-.275 E(Each e)5.5 E -.165(ve)-.275 G(nt con-).165 E
(tains the total number of ax)72 633.6 Q(es reported in the ax)-.165 E
(es_count member and the \214rst axis reported in the)-.165 E(current e)
72 645.6 Q -.165(ve)-.275 G(nt in the \214rst_axis member).165 E 5.5(.I)
-.605 G 2.75(ft)-5.5 G(he de)-2.75 E(vice supports input class)-.275 E
F1 -1.012(Va)3.666 G(luators)1.012 E F2 2.75(,b).916 G(ut is not)-2.97 E
(reporting absolute mode data, the ax)72 657.6 Q
(es_count member contains zero \(0\).)-.165 E F1(36)282.5 768 Q EP
%%Page: 37 39
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q(int type;)108 114 Q(/* ProximityIn or ProximityOut */)143.634 E
(unsigned long serial;)108 126 Q(/* # of last request processed by serv)
88.337 E(er */)-.165 E(Bool send_e)108 138 Q -.165(ve)-.275 G 100.998
(nt; /*).165 F(true if this came from a SendEv)2.75 E(ent request */)
-.165 E(Display *display;)108 150 Q(/* Display the e)102.692 E -.165(ve)
-.275 G(nt w).165 E(as read from */)-.11 E -.44(Wi)108 162 S(ndo).44 E
2.75(ww)-.275 G(indo)-2.75 E(w;)-.275 E(XID de)108 174 Q(viceid;)-.275 E
-.44(Wi)108 186 S(ndo).44 E 2.75(wr)-.275 G(oot;)-2.75 E -.44(Wi)108 198
S(ndo).44 E 2.75(ws)-.275 G(ubwindo)-2.75 E(w;)-.275 E -.385(Ti)108 210
S(me time;).385 E(int x, y;)108 222 Q(int x_root, y_root;)108 234 Q
(unsigned int state;)108 246 Q(Bool same_screen;)108 258 Q
(unsigned int de)108 270 Q 63.257(vice_state; /*)-.275 F(de)2.75 E
(vice k)-.275 E .33 -.165(ey o)-.11 H 2.75(rb).165 G(utton mask */)-2.97
E(unsigned char ax)108 282 Q(es_count;)-.165 E
(unsigned char \214rst_axis;)108 294 Q(int axis_data[6];)108 306 Q 2.75
(}X)72 318 S(ProximityNotifyEv)-2.75 E(ent;)-.165 E
(typedef XProximityNotifyEv)72 342 Q(ent XProximityInEv)-.165 E(ent;)
-.165 E(typedef XProximityNotifyEv)72 354 Q(ent XProximityOutEv)-.165 E
(ent;)-.165 E 36 351.75 36 362.75 DL 36 350.75 36 361.75 DL 41.5 361 36
361 DL 42.5 361 37 361 DL 48 361 42.5 361 DL F1 2.75(2.3. Ev)72 396 R
(ent Handling Functions)-.11 E F2
(This section discusses the X Input Extension e)72 411.6 Q -.165(ve)
-.275 G(nt handling functions that allo).165 E 2.75(wy)-.275 G(ou to:)
-2.75 E 23.65<8344>72 427.2 S(etermine the e)-23.65 E(xtension v)-.165 E
(ersion)-.165 E 23.65<834c>72 442.8 S(ist the a)-23.65 E -.275(va)-.22 G
(ilable de).275 E(vices)-.275 E 23.65<8345>72 458.4 S
(nable and disable e)-23.65 E(xtension de)-.165 E(vices)-.275 E 23.65
<8343>72 474 S(hange the mode of a de)-23.65 E(vice)-.275 E 23.65<8349>
72 489.6 S(nitialize v)-23.65 E(aluators on an input de)-.275 E(vice)
-.275 E 23.65<8347>72 505.2 S(et input de)-23.65 E(vice controls)-.275 E
23.65<8343>72 520.8 S(hange input de)-23.65 E(vice controls)-.275 E
23.65<8353>72 536.4 S(elect e)-23.65 E(xtension de)-.165 E(vice e)-.275
E -.165(ve)-.275 G(nts).165 E 23.65<8344>72 552 S(etermine selected de)
-23.65 E(vice e)-.275 E -.165(ve)-.275 G(nts).165 E 23.65<8343>72 567.6
S(ontrol e)-23.65 E -.165(ve)-.275 G(nt propog).165 E(ation)-.055 E
23.65<8353>72 583.2 S(end an e)-23.65 E -.165(ve)-.275 G(nt).165 E 23.65
<8347>72 598.8 S(et motion history)-23.65 E F1 2.75(2.3.1. Determining)
72 622.8 R(the Extension V)2.75 E(ersion)-1.1 E(37)282.5 768 Q EP
%%Page: 38 40
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(XExtensionV)72 99.6
Q(ersion * XGetExtensionV)-1.221 E(ersion\()-1.221 E/F3 11
/Times-Italic@0 SF(display)A F2(,).916 E F3(name)2.75 E F2(\)).916 E
(Display *)85.75 111.6 Q F3(display)A F2(;).916 E(char *)85.75 123.6 Q
F3(name)A F2(;).916 E F3(display)72 142.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(name)72 158.4 Q F2(Speci\214es the name of the desired e)48.174 E
(xtension.)-.165 E 36 153.75 36 164.75 DL 36 152.75 36 163.75 DL 41.5
163 36 163 DL 42.5 163 37 163 DL 48 163 42.5 163 DL F1(XGetExtensionV)
72.916 186 Q(ersion)-1.1 E F2(allo)3.666 E
(ws a client to determine whether a serv)-.275 E
(er supports the desired v)-.165 E(er)-.165 E(-)-.22 E
(sion of the input e)72 198 Q(xtension.)-.165 E(The)72 213.6 Q F1
(XExtensionV)3.666 E(ersion)-1.1 E F2
(structure returns information about the v)3.666 E(ersion of the e)-.165
E(xtension sup-)-.165 E(ported by the serv)72 225.6 Q
(er and is de\214ned as follo)-.165 E(ws:)-.275 E 36 244.95 36 255.95 DL
36 243.95 36 254.95 DL 41.5 242.2 36 242.2 DL 42.5 242.2 37 242.2 DL 48
242.2 42.5 242.2 DL(typedef struct {)72 259.2 Q(Bool present;)108 271.2
Q(short major_v)108 283.2 Q(ersion;)-.165 E(short minor_v)108 295.2 Q
(ersion;)-.165 E 2.75(}X)72 307.2 S(ExtensionV)-2.75 E(ersion;)-1.221 E
36 308.55 36 319.55 DL 36 307.55 36 318.55 DL 41.5 317.8 36 317.8 DL
42.5 317.8 37 317.8 DL 48 317.8 42.5 317.8 DL(The major and minor v)72
340.8 Q
(ersions can be compared with constants de\214ned in the header \214le)
-.165 E(<)72 352.8 Q F1(X11/extensions/XI.h).916 E F2 2.75(>. Each).916
F -.165(ve)2.75 G(rsion is a superset of the pre).165 E(vious v)-.275 E
(ersions.)-.165 E -1.21(Yo)72 368.4 S 2.75(us)1.21 G(hould use)-2.75 E
F1(XFr)3.666 E(ee)-.198 E F2
(to free the data returned by this function.)3.666 E F1 2.75
(2.3.2. Listing)72 392.4 R -.66 -1.1(Av a)2.75 H(ilable De)1.1 E(vices)
-.165 E F2 2.75(Ac)72 408 S
(lient program that wishes to access a speci\214c de)-2.75 E
(vice must \214rst determine whether that de)-.275 E(vice)-.275 E
(is connected to the X serv)72 420 Q(er)-.165 E 5.5(.T)-.605 G
(his is done through the)-5.5 E F1(XListInputDe)3.666 E(vices)-.165 E F2
(function, which will)3.666 E(return a list of all de)72 432 Q
(vices that can be opened by the X serv)-.275 E(er)-.165 E 5.5(.T)-.605
G(he client program can use one of)-5.5 E(the names de\214ned in the <)
72 444 Q F1(X11/extensions/XI.h).916 E F2 2.75(>h).916 G
(eader \214le in an)-2.75 E F1(XInter)3.666 E(nAtom)-.165 E F2
(request to)3.666 E(determine the de)72 456 Q
(vice type of the desired de)-.275 E 2.75(vice. This)-.275 F
(type can then be compared with the de)2.75 E(vice)-.275 E
(types returned by the)72 468 Q F1(XListInputDe)3.666 E(vices)-.165 E F2
(request.)3.666 E 36 487.35 36 498.35 DL 36 486.35 36 497.35 DL 41.5
484.6 36 484.6 DL 42.5 484.6 37 484.6 DL 48 484.6 42.5 484.6 DL(XDe)72
499.2 Q(viceInfo * XListInputDe)-.275 E(vices\()-.275 E F3(display)A F2
(,).916 E F3(nde)2.75 E(vices)-.165 E F2(\)).916 E(Display *)85.75 511.2
Q F3(display)A F2(;).916 E(int *)85.75 523.2 Q F3(nde)A(vices)-.165 E F2
33(;/).916 G 2.75(*R)-33 G(ETURN */)-2.75 E F3(display)72 542.4 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(nde)72 558 Q(vices)-.165 E F2 .304(Speci\214es the address of a v)
34.292 F .304(ariable into which the serv)-.275 F .303
(er can return the number of)-.165 F(input de)144 570 Q(vices a)-.275 E
-.275(va)-.22 G(ilable to the X serv).275 E(er)-.165 E(.)-.605 E 36
565.35 36 576.35 DL 36 564.35 36 575.35 DL 41.5 574.6 36 574.6 DL 42.5
574.6 37 574.6 DL 48 574.6 42.5 574.6 DL F1(XListInputDe)72.916 597.6 Q
(vices)-.165 E F2(allo)3.666 E(ws a client to determine which de)-.275 E
(vices are a)-.275 E -.275(va)-.22 G(ilable for X input and).275 E
(information about those de)72 609.6 Q 2.75(vices. An)-.275 F(array of)
2.75 E F1(XDe)3.666 E(viceInf)-.165 E(o)-.275 E F2
(structures is returned, with one ele-)3.666 E
(ment in the array for each de)72 621.6 Q 2.75(vice. The)-.275 F
(number of de)2.75 E(vices is returned in the nde)-.275 E(vices ar)-.275
E(gument.)-.198 E(The X pointer de)72 637.2 Q(vice and X k)-.275 E -.165
(ey)-.11 G(board de).165 E(vice are reported, as well as all a)-.275 E
-.275(va)-.22 G(ilable e).275 E(xtension input)-.165 E(de)72 649.2 Q
2.75(vices. The)-.275 F(use member of the)2.75 E F1(XDe)3.666 E(viceInf)
-.165 E(o)-.275 E F2(structure speci\214es the current use of the de)
3.666 E 2.75(vice. If)-.275 F(the v)72 661.2 Q(alue of this member is)
-.275 E F1(IsXP)3.666 E(ointer)-.22 E F2 2.75(,t).916 G(he de)-2.75 E
(vice is the X pointer de)-.275 E 2.75(vice. If)-.275 F(the v)2.75 E
(alue is)-.275 E F1(IsXK)72.916 673.2 Q(eyboard)-.275 E F2 2.75(,t).916
G(he de)-2.75 E(vice is the X k)-.275 E -.165(ey)-.11 G(board de).165 E
2.75(vice. If)-.275 F(the v)2.75 E(alue is)-.275 E F1(IsXExtensionDe)
3.666 E(vice)-.165 E F2 2.75(,t).916 G(he)-2.75 E(de)72 685.2 Q
(vice is a)-.275 E -.275(va)-.22 G(ilable for use as an e).275 E
(xtension input de)-.165 E(vice.)-.275 E(Each)72 700.8 Q F1(XDe)3.666 E
(viceInf)-.165 E(o)-.275 E F2(entry contains a pointer to a list of str\
uctures that describe the characteristics)3.666 E
(of each class of input supported by that de)72 712.8 Q 2.75(vice. The)
-.275 F(num_classes member contains the number of)2.75 E
(entries in that list.)72 724.8 Q F1(38)282.5 768 Q EP
%%Page: 39 41
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(If the de)72 84 Q(vice supports input class)-.275 E
F1 -1.012(Va)3.666 G(luators)1.012 E F2 2.75(,o).916 G
(ne of the structures pointed to by the)-2.75 E F1(XDe)3.666 E(viceInf)
-.165 E(o)-.275 E F2(structure will be an)72 96 Q F1(XV)3.666 E
(aluatorInf)-1.012 E(o)-.275 E F2 2.75(structure. The)3.666 F(ax)2.75 E
(es member of that structure contains the)-.165 E
(address of an array of)72 108 Q F1(XAxisInf)3.666 E(o)-.275 E F2 2.75
(structures. There)3.666 F
(is one element in this array for each axis of)2.75 E
(motion reported by the de)72 120 Q 2.75(vice. The)-.275 F
(number of elements in this array is contained in the)2.75 E(num_ax)72
132 Q(es element of the)-.165 E F1(XV)3.666 E(aluatorInf)-1.012 E(o)
-.275 E F2 2.75(structure. The)3.666 F(size of the motion b)2.75 E(uf)
-.22 E(fer for the de)-.275 E(vice)-.275 E(is reported in the motion_b)
72 144 Q(uf)-.22 E(fer member of the)-.275 E F1(XV)3.666 E(aluatorInf)
-1.012 E(o)-.275 E F2(structure.)3.666 E(The)72 159.6 Q F1(XDe)3.666 E
(viceInf)-.165 E(o)-.275 E F2(structure is de\214ned as follo)3.666 E
(ws:)-.275 E .44 LW 36 178.95 36 189.95 DL 36 177.95 36 188.95 DL 41.5
176.2 36 176.2 DL 42.5 176.2 37 176.2 DL 48 176.2 42.5 176.2 DL
(typedef struct _XDe)72 193.2 Q(viceInfo {)-.275 E(XID id;)108 205.2 Q
(Atom type;)108 217.2 Q(char *name;)108 229.2 Q(int num_classes;)108
241.2 Q(int use;)108 253.2 Q(XAn)108 265.2 Q(yClassPtr inputclassinfo;)
-.165 E 2.75(}X)72 277.2 S(De)-2.75 E(viceInfo;)-.275 E 36 278.55 36
289.55 DL 36 277.55 36 288.55 DL 41.5 287.8 36 287.8 DL 42.5 287.8 37
287.8 DL 48 287.8 42.5 287.8 DL(The structures pointed to by the)72
310.8 Q F1(XDe)3.666 E(viceInf)-.165 E(o)-.275 E F2
(structure are de\214ned as follo)3.666 E(ws:)-.275 E 36 330.15 36
341.15 DL 36 329.15 36 340.15 DL 41.5 327.4 36 327.4 DL 42.5 327.4 37
327.4 DL 48 327.4 42.5 327.4 DL(typedef struct _XK)72 344.4 Q -.165(ey)
-.275 G(Info {).165 E(XID class;)108 356.4 Q(int length;)108 368.4 Q
(unsigned short min_k)108 380.4 Q -.165(ey)-.11 G(code;).165 E
(unsigned short max_k)108 392.4 Q -.165(ey)-.11 G(code;).165 E
(unsigned short num_k)108 404.4 Q -.165(ey)-.11 G(s;).165 E 2.75(}X)72
416.4 S -2.365 -.275(Ke y)-2.75 H(Info;).275 E
(typedef struct _XButtonInfo {)72 440.4 Q(XID class;)108 452.4 Q
(int length;)108 464.4 Q(short num_b)108 476.4 Q(uttons;)-.22 E 2.75(}X)
72 488.4 S(ButtonInfo;)-2.75 E(typedef struct _XV)72 512.4 Q
(aluatorInfo {)-1.221 E(XID class;)108 524.4 Q(int length;)108 536.4 Q
(unsigned char num_ax)108 548.4 Q(es;)-.165 E(unsigned char mode;)108
560.4 Q(unsigned long motion_b)108 572.4 Q(uf)-.22 E(fer;)-.275 E
(XAxisInfoPtr ax)108 584.4 Q(es;)-.165 E 2.75(}X)72 596.4 S -1.221(Va)
-2.75 G(luatorInfo;)1.221 E 36 597.75 36 608.75 DL 36 596.75 36 607.75
DL 41.5 607 36 607 DL 42.5 607 37 607 DL 48 607 42.5 607 DL(The)72 630 Q
F1(XAxisInf)3.666 E(o)-.275 E F2(structure pointed to by the)3.666 E F1
(XV)3.666 E(aluatorInf)-1.012 E(o)-.275 E F2
(structure is de\214ned as follo)3.666 E(ws:)-.275 E 36 649.35 36 660.35
DL 36 648.35 36 659.35 DL 41.5 646.6 36 646.6 DL 42.5 646.6 37 646.6 DL
48 646.6 42.5 646.6 DL(typedef struct _XAxisInfo {)72 663.6 Q
(int resolution;)108 675.6 Q(int min_v)108 687.6 Q(alue;)-.275 E
(int max_v)108 699.6 Q(alue;)-.275 E 2.75(}X)72 711.6 S(AxisInfo;)-2.75
E F1(39)282.5 768 Q EP
%%Page: 40 42
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 75.75 36 86.75 DL 36 74.75 36 85.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(The follo)72 108 Q
(wing atom names are de\214ned in the <)-.275 E F1(X11/extensions/XI.h)
.916 E F2 2.75(>h).916 G(eader \214le.)-2.75 E F0 106.5(MOUSE Q)72 126 R
-.4(UA)-.1 G(DRA).4 E(TURE)-1.11 E -.93(TA)72 138 S 104.1(BLET SP).93 F
-.4(AC)-.92 G(EB).4 E(ALL)-.35 E(KEYBO)72 150 Q 86.3(ARD D)-.35 F -1.21
-1.11(AT A)-.4 H(GLO).71 E(VE)-.5 E -.18(TO)72 162 S 68.9
(UCHSCREEN EYETRA).18 F(CKER)-.4 E -.18(TO)72 174 S(UCHP).18 E 88.16
(AD CURSORKEYS)-.92 F -.1(BU)72 186 S(TT).1 E(ONBO)-.18 E 83.02(XF)-.4 G
(OO)-83.02 E(TMOUSE)-.4 E -.35(BA)72 198 S 94.07(RCODE ID_MODULE).35 F
(KNOB_BO)72 210 Q 89.96(XO)-.4 G(NE_KNOB)-89.96 E(TRA)72 222 Q(CKB)-.4 E
82.25(ALL NINE_KNOB)-.35 F F2(These names can be used in an)72 243.6 Q
F1(XInter)3.666 E(nAtom)-.165 E F2
(request to return an atom that can be used for com-)3.666 E
(parison with the type member of the)72 255.6 Q F1(XDe)3.666 E(viceInf)
-.165 E(o)-.275 E F2(structure.)3.666 E F1(XListInputDe)72.916 271.2 Q
(vices)-.165 E F2(returns NULL if there are no input de)3.666 E
(vices to list.)-.275 E 1.76 -.88(To f)72 298.8 T
(ree the data returned by).88 E F1(XListInputDe)3.666 E(vices)-.165 E F2
2.75(,u).916 G(se)-2.75 E F1(XFr)3.666 E(eeDe)-.198 E(viceList)-.165 E
F2(.).916 E 36 330.15 36 341.15 DL 36 329.15 36 340.15 DL 41.5 327.4 36
327.4 DL 42.5 327.4 37 327.4 DL 48 327.4 42.5 327.4 DL -.22(vo)72 342 S
(id XFreeDe).22 E(viceList\()-.275 E/F3 11/Times-Italic@0 SF(list)A F2
(\)).916 E(XDe)83 354 Q(viceInfo *)-.275 E F3(list)A F2(;).916 E F3
(list)72 373.2 Q F2 1.954(Speci\214es the pointer to the)58.547 F F1
(XDe)5.62 E(viceInf)-.165 E(o)-.275 E F2 1.954(array returned by a pre)
5.62 F 1.954(vious call to)-.275 F F1(XListInputDe)144.916 385.2 Q
(vices)-.165 E F2(.).916 E 36 380.55 36 391.55 DL 36 379.55 36 390.55 DL
41.5 389.8 36 389.8 DL 42.5 389.8 37 389.8 DL 48 389.8 42.5 389.8 DL F1
(XFr)72.916 412.8 Q(eeDe)-.198 E(viceList)-.165 E F2
(frees the list of input de)3.666 E(vice information.)-.275 E F1 2.75
(2.3.3. Enabling)72 436.8 R(and Disabling Extension De)2.75 E(vices)
-.165 E F2(Each client program that wishes to access an e)72 452.4 Q
(xtension de)-.165 E(vice must request that the serv)-.275 E(er open)
-.165 E(that de)72 464.4 Q(vice by calling the)-.275 E F1(XOpenDe)3.666
E(vice)-.165 E F2(function.)3.666 E 36 480.15 36 491.15 DL 36 479.15 36
490.15 DL 41.5 477.4 36 477.4 DL 42.5 477.4 37 477.4 DL 48 477.4 42.5
477.4 DL(XDe)72 492 Q(vice * XOpenDe)-.275 E(vice\()-.275 E F3(display)A
F2(,).916 E F3(de)2.75 E(vice_id)-.165 E F2(\)).916 E(Display *)85.75
504 Q F3(display)A F2(;).916 E(XID)85.75 516 Q F3(de)2.75 E(vice_id)
-.165 E F2(;).916 E F3(display)72 535.2 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 550.8 Q(vice_id)-.165 E F2 .724
(Speci\214es the ID that uniquely identi\214es the de)30.013 F .725
(vice to be opened.)-.275 F .725(This ID is ob-)6.225 F(tained from the)
144 562.8 Q F1(XListInputDe)3.666 E(vices)-.165 E F2(request.)3.666 E 36
558.15 36 569.15 DL 36 557.15 36 568.15 DL 41.5 567.4 36 567.4 DL 42.5
567.4 37 567.4 DL 48 567.4 42.5 567.4 DL F1(XOpenDe)72.916 590.4 Q(vice)
-.165 E F2(opens the de)3.666 E
(vice for the requesting client and, on success, returns an)-.275 E F1
(XDe)3.666 E(vice)-.165 E F2(structure, which is de\214ned as follo)72
602.4 Q(ws:)-.275 E 36 621.75 36 632.75 DL 36 620.75 36 631.75 DL 41.5
619 36 619 DL 42.5 619 37 619 DL 48 619 42.5 619 DL(typedef struct {)72
636 Q(XID de)108 648 Q(vice_id;)-.275 E(int num_classes;)108 660 Q
(XInputClassInfo *classes;)108 672 Q 2.75(}X)72 684 S(De)-2.75 E(vice;)
-.275 E 36 685.35 36 696.35 DL 36 684.35 36 695.35 DL 41.5 694.6 36
694.6 DL 42.5 694.6 37 694.6 DL 48 694.6 42.5 694.6 DL(The)72 717.6 Q F1
(XDe)3.666 E(vice)-.165 E F2
(structure contains a pointer to an array of)3.666 E F1(XInputClassInf)
3.666 E(o)-.275 E F2 2.75(structures. Each)3.666 F(ele-)2.75 E
(ment in that array contains information about e)72 729.6 Q -.165(ve)
-.275 G(nts of a particular input class supported by the).165 E F1(40)
282.5 768 Q EP
%%Page: 41 43
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(input de)72 84 Q(vice.)-.275 E(The)72 99.6 Q F1
(XInputClassInf)3.666 E(o)-.275 E F2(structure is de\214ned as follo)
3.666 E(ws:)-.275 E .44 LW 36 118.95 36 129.95 DL 36 117.95 36 128.95 DL
41.5 116.2 36 116.2 DL 42.5 116.2 37 116.2 DL 48 116.2 42.5 116.2 DL
(typedef struct {)72 133.2 Q(unsigned char input_class;)108 145.2 Q
(unsigned char e)108 157.2 Q -.165(ve)-.275 G(nt_type_base;).165 E 2.75
(}X)72 169.2 S(InputClassInfo;)-2.75 E 36 170.55 36 181.55 DL 36 169.55
36 180.55 DL 41.5 179.8 36 179.8 DL 42.5 179.8 37 179.8 DL 48 179.8 42.5
179.8 DL 2.75(Ac)72 202.8 S(lient program can determine the e)-2.75 E
-.165(ve)-.275 G(nt type and e).165 E -.165(ve)-.275 G
(nt class for a gi).165 E -.165(ve)-.275 G 2.75(ne).165 G -.165(ve)
-3.025 G(nt by using macros).165 E(de\214ned by the input e)72 214.8 Q
2.75(xtension. The)-.165 F
(name of the macro corresponds to the desired e)2.75 E -.165(ve)-.275 G
(nt, and the).165 E(macro is passed the structure that describes the de)
72 226.8 Q(vice from which input is desired, for e)-.275 E(xample:)-.165
E(De)108 248.4 Q(viceK)-.275 E -.165(ey)-.275 G(Press\(XDe).165 E
(vice *de)-.275 E(vice, e)-.275 E -.165(ve)-.275 G(nt_type, e).165 E
-.165(ve)-.275 G(nt_class\)).165 E(The macro will \214ll in the v)72 270
Q(alues of the e)-.275 E -.165(ve)-.275 G(nt class to be used in an).165
E F1(XSelectExtensionEv)3.666 E(ent)-.11 E F2(request to select the e)72
282 Q -.165(ve)-.275 G(nt and the e).165 E -.165(ve)-.275 G
(nt type to be used in comparing with the e).165 E -.165(ve)-.275 G
(nt types of).165 E -2.365 -.275(ev e)72 294 T(nts recei).275 E -.165
(ve)-.275 G 2.75(dv).165 G(ia)-2.75 E F1(XNextEv)3.666 E(ent)-.11 E F2
(.).916 E F1(XOpenDe)72.916 309.6 Q(vice)-.165 E F2(can generate)3.666 E
F1(BadDe)3.666 E(vice)-.165 E F2(errors.)3.666 E
(Before terminating, the client program should request that the serv)72
337.2 Q(er close the de)-.165 E(vice by calling)-.275 E(the)72 349.2 Q
F1(XCloseDe)3.666 E(vice)-.165 E F2(function.)3.666 E 36 364.95 36
375.95 DL 36 363.95 36 374.95 DL 41.5 362.2 36 362.2 DL 42.5 362.2 37
362.2 DL 48 362.2 42.5 362.2 DL(int XCloseDe)72 376.8 Q(vice\()-.275 E
/F3 11/Times-Italic@0 SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E
F2(\)).916 E(Display *display;)85.75 388.8 Q(XDe)85.75 400.8 Q(vice *de)
-.275 E(vice;)-.275 E F3(display)72 420 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 435.6 Q(vice)-.165 E F2(Speci\214es the de)44.071 E
(vice to be closed.)-.275 E 36 430.95 36 441.95 DL 36 429.95 36 440.95
DL 41.5 440.2 36 440.2 DL 42.5 440.2 37 440.2 DL 48 440.2 42.5 440.2 DL
F1(XCloseDe)72.916 463.2 Q(vice)-.165 E F2(closes the de)3.666 E
(vice for the requesting client and frees the associated)-.275 E F1(XDe)
3.666 E(vice)-.165 E F2(struc-)3.666 E(ture.)72 475.2 Q 2.75(Ac)72 490.8
S(lient may open the same e)-2.75 E(xtension de)-.165 E
(vice more than once.)-.275 E(Requests after the \214rst successful)5.5
E(one return an additional)72 502.8 Q F1(XDe)3.666 E(vice)-.165 E F2
(structure with the same information as the \214rst, b)3.666 E
(ut otherwise)-.22 E(ha)72 514.8 Q .33 -.165(ve n)-.22 H 2.75(oe).165 G
-.275(ff)-2.75 G 2.75(ect. A).275 F(single)2.75 E F1(XCloseDe)3.666 E
(vice)-.165 E F2(request will terminate that client')3.666 E 2.75(sa)
-.605 G(ccess to the de)-2.75 E(vice.)-.275 E(Closing a de)72 530.4 Q
(vice releases an)-.275 E 2.75(ya)-.165 G(cti)-2.75 E .33 -.165(ve o)
-.275 H 2.75(rp).165 G(assi)-2.75 E .33 -.165(ve g)-.275 H
(rabs the requesting client has established.).165 E(If the)5.5 E(de)72
542.4 Q(vice is frozen only by an acti)-.275 E .33 -.165(ve g)-.275 H
(rab of the requesting client, an).165 E 2.75(yq)-.165 G(ueued e)-2.75 E
-.165(ve)-.275 G(nts are released.).165 E
(If a client program terminates without closing a de)72 558 Q
(vice, the serv)-.275 E(er will automatically close that)-.165 E(de)72
570 Q(vice on behalf of the client.)-.275 E(This does not af)5.5 E
(fect an)-.275 E 2.75(yo)-.165 G
(ther clients that may be accessing that)-2.75 E(de)72 582 Q(vice.)-.275
E F1(XCloseDe)72.916 597.6 Q(vice)-.165 E F2(can generate)3.666 E F1
(BadDe)3.666 E(vice)-.165 E F2(errors.)3.666 E F1 2.75(2.3.4. Changing)
72 621.6 R(the Mode of a De)2.75 E(vice)-.165 E F2(Some de)72 637.2 Q
(vices are capable of reporting either relati)-.275 E .33 -.165(ve o)
-.275 H 2.75(ra).165 G(bsolute motion data.)-2.75 E 1.76 -.88(To c)5.5 H
(hange the).88 E(mode of a de)72 649.2 Q(vice from relati)-.275 E .33
-.165(ve t)-.275 H 2.75(oa).165 G(bsolute, use)-2.75 E F1(XSetDe)3.666 E
(viceMode)-.165 E F2(.).916 E F1(41)282.5 768 Q EP
%%Page: 42 44
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(int XSetDe)72 99.6 Q
(viceMode\()-.275 E/F3 11/Times-Italic@0 SF(display)A F2(,).916 E F3(de)
2.75 E(vice)-.165 E F2(,).916 E F3(mode)2.75 E F2(\)).916 E(Display *)
85.75 111.6 Q F3(display)A F2(;).916 E(XDe)85.75 123.6 Q(vice *)-.275 E
F3(de)A(vice)-.165 E F2(;).916 E(int)85.75 135.6 Q F3(mode)2.75 E F2(;)
.916 E F3(display)72 154.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 170.4 Q(vice)-.165 E F2(Speci\214es the de)44.071 E
(vice whose mode should be changed.)-.275 E F3(mode)72 186 Q F2
(Speci\214es the mode.)48.174 E -1.21(Yo)5.5 G 2.75(uc)1.21 G(an pass)
-2.75 E F1(Absolute)3.666 E F2(or)3.666 E F1(Relati)3.666 E -.11(ve)-.11
G F2(.)1.026 E 36 181.35 36 192.35 DL 36 180.35 36 191.35 DL 41.5 190.6
36 190.6 DL 42.5 190.6 37 190.6 DL 48 190.6 42.5 190.6 DL F1(XSetDe)
72.916 213.6 Q(viceMode)-.165 E F2(allo)3.666 E
(ws a client to request the serv)-.275 E(er to change the mode of a de)
-.165 E(vice that is)-.275 E
(capable of reporting either absolute positional data or relati)72 225.6
Q .33 -.165(ve m)-.275 H(otion data.).165 E(If the de)5.5 E(vice is in)
-.275 E -.275(va)-.44 G(lid).275 E(or if the client has not pre)72 237.6
Q(viously requested that the serv)-.275 E(er open the de)-.165 E
(vice via an)-.275 E F1(XOpenDe)3.666 E(vice)-.165 E F2
(request, this request will f)72 249.6 Q(ail with a)-.11 E F1(BadDe)
3.666 E(vice)-.165 E F2(error)3.666 E 5.5(.I)-.605 G 2.75(ft)-5.5 G
(he de)-2.75 E(vice does not support input class)-.275 E F1 -1.012(Va)
72.916 261.6 S(luators)1.012 E F2(or if it is not capable of reporting \
the speci\214ed mode, the request will f)3.666 E(ail with a)-.11 E F1
(Bad-)3.666 E(Match)72 273.6 Q F2(error)3.666 E(.)-.605 E
(This request will f)72 289.2 Q(ail and return)-.11 E F1(De)3.666 E
(viceBusy)-.165 E F2(if another client has already opened the de)3.666 E
(vice and)-.275 E(requested a dif)72 301.2 Q(ferent mode.)-.275 E F1
(XSetDe)72.916 316.8 Q(viceMode)-.165 E F2(can generate)3.666 E F1
(BadDe)3.666 E(vice)-.165 E F2(,).916 E F1(BadMatch)3.666 E F2(,).916 E
F1(BadMode)3.666 E F2 2.75(,a).916 G(nd)-2.75 E F1(De)3.666 E(viceBusy)
-.165 E F2(errors.)3.666 E F1 2.75(2.3.5. Initializing)72 340.8 R -1.012
(Va)2.75 G(luators on an Input De)1.012 E(vice)-.165 E F2(Some de)72
356.4 Q(vices that report absolute positional data can be initialized t\
o a starting v)-.275 E 2.75(alue. De)-.275 F(vices)-.275 E
(that are capable of reporting relati)72 368.4 Q .33 -.165(ve m)-.275 H
(otion or absolute positional data may require that their v).165 E(al-)
-.275 E(uators be initialized to a starting v)72 380.4 Q
(alue after the mode of the de)-.275 E(vice is changed to)-.275 E F1
(Absolute)3.666 E F2(.).916 E 1.76 -.88(To i)72 408 T(nitialize the v)
.88 E(aluators on such a de)-.275 E(vice, use)-.275 E F1(XSetDe)3.666 E
(viceV)-.165 E(aluators)-1.012 E F2(.).916 E 36 423.75 36 434.75 DL 36
422.75 36 433.75 DL 41.5 421 36 421 DL 42.5 421 37 421 DL 48 421 42.5
421 DL(Status XSetDe)72 435.6 Q(viceV)-.275 E(aluators\()-1.221 E F3
(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3
(valuator)2.75 E(s)-.11 E F2(,).916 E F3<8c72>2.75 E(st_valuator)-.11 E
F2(,).916 E F3(num_valuator)2.75 E(s)-.11 E F2(\)).916 E(Display *)85.75
447.6 Q F3(display)A F2(;).916 E(XDe)85.75 459.6 Q(vice *)-.275 E F3(de)
A(vice)-.165 E F2(;).916 E(int *)85.75 471.6 Q F3(valuator)A(s)-.11 E F2
(,).916 E F3<8c72>2.75 E(st_valuator)-.11 E F2(,).916 E F3(num_valuator)
2.75 E(s)-.11 E F2(;).916 E F3(display)72 490.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 506.4 Q(vice)-.165 E F2(Speci\214es the de)44.071 E
(vice whose v)-.275 E(aluators should be initialized.)-.275 E F3
(valuator)72 522 Q(s)-.11 E F2(Speci\214es the v)30.552 E
(alues to which each v)-.275 E(aluator should be set.)-.275 E F3<8c72>72
537.6 Q(st_valuator)-.11 E F2(Speci\214es the \214rst v)12.215 E
(aluator to be set.)-.275 E F3(num_valuator)72 553.2 Q(s)-.11 E F2
(Speci\214es the number of v)6.11 E(aluators to be set.)-.275 E 36
548.55 36 559.55 DL 36 547.55 36 558.55 DL 41.5 557.8 36 557.8 DL 42.5
557.8 37 557.8 DL 48 557.8 42.5 557.8 DL F1(XSetDe)72.916 580.8 Q(viceV)
-.165 E(aluators)-1.012 E F2(initializes the speci\214ed v)3.666 E
(aluators on the speci\214ed e)-.275 E(xtension input de)-.165 E(vice.)
-.275 E -1.221(Va)72 592.8 S(luators are numbered be)1.221 E
(ginning with zero.)-.165 E(Only the v)5.5 E
(aluators in the range speci\214ed by)-.275 E(\214rst_v)72 604.8 Q
(aluator and num_v)-.275 E(aluators are set.)-.275 E(A)5.5 E F1(BadV)
3.666 E(alue)-1.012 E F2(error results if the number of v)3.666 E
(aluators)-.275 E(supported by the de)72 616.8 Q
(vice is less than the follo)-.275 E(wing e)-.275 E(xpression:)-.165 E
(\214rst_v)108 634.8 Q(aluator + num_v)-.275 E(aluators)-.275 E
(If the request succeeds,)72 656.4 Q F1(Success)3.666 E F2(is returned.)
3.666 E(If the speci\214ed de)5.5 E(vice is grabbed by some other)-.275
E(client, the request will f)72 668.4 Q(ail and a status of)-.11 E F1
(Alr)3.666 E(eadyGrab)-.198 E(bed)-.11 E F2(will be returned.)3.666 E F1
(XSetDe)72.916 684 Q(viceV)-.165 E(aluators)-1.012 E F2(can generate)
3.666 E F1(BadDe)3.666 E(vice)-.165 E F2(,).916 E F1(BadLength)3.666 E
F2(,).916 E F1(BadMatch)3.666 E F2 2.75(,a).916 G(nd)-2.75 E F1(BadV)
3.666 E(alue)-1.012 E F2(errors.)72 696 Q F1(42)282.5 768 Q EP
%%Page: 43 45
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
2.75(2.3.6. Getting)72 84 R(Input De)2.75 E(vice Contr)-.165 E(ols)-.198
E/F2 11/Times-Roman@0 SF(Some input de)72 99.6 Q(vices support v)-.275 E
(arious con\214guration controls that can be queried or changed by)-.275
E 2.75(clients. The)72 111.6 R(set of supported controls will v)2.75 E
(ary from one input de)-.275 E(vice to another)-.275 E 5.5(.R)-.605 G
(equests to)-5.5 E(manipulate these controls will f)72 123.6 Q
(ail if either the tar)-.11 E(get X serv)-.198 E(er or the tar)-.165 E
(get input de)-.198 E(vice does not)-.275 E(support the requested de)72
135.6 Q(vice control.)-.275 E(Each de)72 151.2 Q
(vice control has a unique identi\214er)-.275 E 5.5(.I)-.605 G
(nformation passed with each de)-5.5 E(vice control v)-.275 E(aries in)
-.275 E(length and is mapped by data structures unique to that de)72
163.2 Q(vice control.)-.275 E 1.76 -.88(To q)72 190.8 T(uery a de).88 E
(vice control, use)-.275 E F1(XGetDe)3.666 E(viceContr)-.165 E(ol)-.198
E F2(.).916 E .44 LW 36 206.55 36 217.55 DL 36 205.55 36 216.55 DL 41.5
203.8 36 203.8 DL 42.5 203.8 37 203.8 DL 48 203.8 42.5 203.8 DL(XDe)72
218.4 Q(viceControl * XGetDe)-.275 E(viceControl\()-.275 E/F3 11
/Times-Italic@0 SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,)
.916 E F3(contr)2.75 E(ol)-.495 E F2(\)).916 E(Display *)85.75 230.4 Q
F3(display)A F2(;).916 E(XDe)85.75 242.4 Q(vice *)-.275 E F3(de)A(vice)
-.165 E F2(;).916 E(int)85.75 254.4 Q F3(contr)2.75 E(ol)-.495 E F2(;)
.916 E F3(display)72 273.6 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 289.2 Q(vice)-.165 E F2(Speci\214es the de)44.071 E
(vice whose con\214guration control status is to be returned.)-.275 E F3
(contr)72 304.8 Q(ol)-.495 E F2(Identi\214es the speci\214c de)40.716 E
(vice control to be queried.)-.275 E 36 300.15 36 311.15 DL 36 299.15 36
310.15 DL 41.5 309.4 36 309.4 DL 42.5 309.4 37 309.4 DL 48 309.4 42.5
309.4 DL F1(XGetDe)72.916 332.4 Q(viceContr)-.165 E(ol)-.198 E F2
(returns the current state of the speci\214ed de)3.666 E(vice control.)
-.275 E(If the tar)5.5 E(get X)-.198 E(serv)72 344.4 Q
(er does not support that de)-.165 E(vice control, a)-.275 E F1(BadV)
3.666 E(alue)-1.012 E F2(error is returned.)3.666 E
(If the speci\214ed de)5.5 E(vice)-.275 E(does not support that de)72
356.4 Q(vice control, a)-.275 E F1(BadMatch)3.666 E F2
(error is returned.)3.666 E
(If the request is successful, a pointer to a generic)72 372 Q F1(XDe)
3.666 E(viceState)-.165 E F2(structure is returned.)3.666 E(The infor)
5.5 E(-)-.22 E(mation returned v)72 384 Q(aries according to the speci\
\214ed control and is mapped by a structure appropriate)-.275 E
(for that control.)72 396 Q(The \214rst tw)5.5 E 2.75(om)-.11 G
(embers are common to all de)-2.75 E
(vice controls and are de\214ned as fol-)-.275 E(lo)72 408 Q(ws:)-.275 E
36 427.35 36 438.35 DL 36 426.35 36 437.35 DL 41.5 424.6 36 424.6 DL
42.5 424.6 37 424.6 DL 48 424.6 42.5 424.6 DL(typedef struct {)72 441.6
Q(XID control;)108 453.6 Q(int length;)108 465.6 Q 2.75(}X)72 477.6 S
(De)-2.75 E(viceState;)-.275 E 36 490.95 36 501.95 DL 36 489.95 36
500.95 DL 41.5 500.2 36 500.2 DL 42.5 500.2 37 500.2 DL 48 500.2 42.5
500.2 DL
(The control may be compared to constants de\214ned in the \214le <)72
523.2 Q F1(X11/extensions/XI.h).916 E F2 2.75(>. Currently).916 F
(de\214ned de)72 535.2 Q(vice controls include DEVICE_RESOLUTION.)-.275
E(The information returned for the DEVICE_RESOLUTION control is de\214n\
ed in the)72 550.8 Q F1(XDe)3.666 E(viceRes-)-.165 E(olutionState)72
562.8 Q F2(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E 36
582.15 36 593.15 DL 36 581.15 36 592.15 DL 41.5 579.4 36 579.4 DL 42.5
579.4 37 579.4 DL 48 579.4 42.5 579.4 DL(typedef struct {)72 596.4 Q
(XID control;)108 608.4 Q(int length;)108 620.4 Q(int num_v)108 632.4 Q
(aluators;)-.275 E(int *resolutions;)108 644.4 Q(int *min_resolutions;)
108 656.4 Q(int *max_resolutions;)108 668.4 Q 2.75(}X)72 680.4 S(De)
-2.75 E(viceResolutionState;)-.275 E 36 681.75 36 692.75 DL 36 680.75 36
691.75 DL 41.5 691 36 691 DL 42.5 691 37 691 DL 48 691 42.5 691 DL
(This de)72 714 Q(vice control returns a list of v)-.275 E
(aluators and the range of v)-.275 E(alid resolutions allo)-.275 E
(wed for each.)-.275 E -1.221(Va)72 726 S(luators are numbered be)1.221
E(ginning with zero \(0\).)-.165 E(Resolutions for all v)5.5 E
(aluators on the de)-.275 E(vice are)-.275 E F1(43)282.5 768 Q EP
%%Page: 44 46
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF 2.75(returned. F)72 84 R(or each v)-.165 E
(aluator i on the de)-.275 E
(vice, resolutions[i] returns the current setting of the resolu-)-.275 E
(tion, min_resolutions[i] returns the minimum v)72 96 Q
(alid setting, and max_resolutions[i] returns the)-.275 E(maximum v)72
108 Q(alid setting.)-.275 E(When this control is speci\214ed,)72 123.6 Q
F1(XGetDe)3.666 E(viceContr)-.165 E(ol)-.198 E F2 -.11(fa)3.666 G
(ils with a).11 E F1(BadMatch)3.666 E F2(error if the speci\214ed)3.666
E(de)72 135.6 Q(vice has no v)-.275 E(aluators.)-.275 E F1(XGetDe)72.916
151.2 Q(viceContr)-.165 E(ol)-.198 E F2(can generate)3.666 E F1
(BadMatch)3.666 E F2(and)3.666 E F1(BadV)3.666 E(alue)-1.012 E F2
(errors.)3.666 E F1 2.75(2.3.7. Changing)72 175.2 R(Input De)2.75 E
(vice Contr)-.165 E(ols)-.198 E F2(Some input de)72 190.8 Q
(vices support v)-.275 E
(arious con\214guration controls that can be changed by clients.)-.275 E
-.88(Ty)5.5 G(pi-).88 E(cally)72 202.8 Q 2.75(,t)-.715 G(his w)-2.75 E
(ould be done to initialize the de)-.11 E(vice to a kno)-.275 E
(wn state or con\214guration.)-.275 E(The set of sup-)5.5 E
(ported controls will v)72 214.8 Q(ary from one input de)-.275 E
(vice to another)-.275 E 5.5(.R)-.605 G
(equests to manipulate these controls)-5.5 E(will f)72 226.8 Q
(ail if either the tar)-.11 E(get X serv)-.198 E(er or the tar)-.165 E
(get input de)-.198 E(vice does not support the requested)-.275 E(de)72
238.8 Q(vice control.)-.275 E(Setting the de)5.5 E
(vice control will also f)-.275 E(ail if the tar)-.11 E(get input de)
-.198 E(vice is grabbed by)-.275 E(another client or is open by another\
 client and has been set to a con\215icting state.)72 250.8 Q(Each de)72
266.4 Q(vice control has a unique identi\214er)-.275 E 5.5(.I)-.605 G
(nformation passed with each de)-5.5 E(vice control v)-.275 E(aries in)
-.275 E(length and is mapped by data structures unique to that de)72
278.4 Q(vice control.)-.275 E 1.76 -.88(To c)72 306 T(hange a de).88 E
(vice control, use)-.275 E F1(XChangeDe)3.666 E(viceContr)-.165 E(ol)
-.198 E F2(.).916 E .44 LW 36 321.75 36 332.75 DL 36 320.75 36 331.75 DL
41.5 319 36 319 DL 42.5 319 37 319 DL 48 319 42.5 319 DL
(Status XChangeDe)72 333.6 Q(viceControl\()-.275 E/F3 11/Times-Italic@0
SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3(contr)
2.75 E(ol)-.495 E F2(,).916 E F3(value)2.75 E F2(\)).916 E(Display *)
85.75 345.6 Q F3(display)A F2(;).916 E(XDe)85.75 357.6 Q(vice *)-.275 E
F3(de)A(vice)-.165 E F2(;).916 E(int)85.75 369.6 Q F3(contr)2.75 E(ol)
-.495 E F2(;).916 E(XDe)85.75 381.6 Q(viceControl *)-.275 E F3(value)A
F2(;).916 E F3(display)72 400.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 416.4 Q(vice)-.165 E F2(Speci\214es the de)44.071 E
(vice whose con\214guration control status is to be modi\214ed.)-.275 E
F3(contr)72 432 Q(ol)-.495 E F2(Identi\214es the speci\214c de)40.716 E
(vice control to be changed.)-.275 E F3(value)72 447.6 Q F2 .66
(Speci\214es a pointer to an)48.174 F F1(XDe)4.326 E(viceContr)-.165 E
(ol)-.198 E F2 .659(structure that describes which control)4.326 F
(is to be changed and ho)144 459.6 Q 2.75(wi)-.275 G 2.75(ti)-2.75 G
2.75(st)-2.75 G 2.75(ob)-2.75 G 2.75(ec)-2.75 G(hanged.)-2.75 E 36
454.95 36 465.95 DL 36 453.95 36 464.95 DL 41.5 464.2 36 464.2 DL 42.5
464.2 37 464.2 DL 48 464.2 42.5 464.2 DL F1(XChangeDe)72.916 487.2 Q
(viceContr)-.165 E(ol)-.198 E F2
(changes the current state of the speci\214ed de)3.666 E(vice control.)
-.275 E(If the tar)5.5 E(get X)-.198 E(serv)72 499.2 Q
(er does not support that de)-.165 E(vice control, a)-.275 E F1(BadV)
3.666 E(alue)-1.012 E F2(error is returned.)3.666 E
(If the speci\214ed de)5.5 E(vice)-.275 E(does not support that de)72
511.2 Q(vice control, a)-.275 E F1(BadMatch)3.666 E F2
(error is returned.)3.666 E(If another client has the tar)5.5 E(-)-.22 E
(get de)72 523.2 Q(vice grabbed, a status of)-.275 E F1(Alr)3.666 E
(eadyGrab)-.198 E(bed)-.11 E F2(is returned.)3.666 E
(If another client has the de)5.5 E(vice)-.275 E
(open and has set it to a con\215icting state, a status of)72 535.2 Q F1
(De)3.666 E(viceBusy)-.165 E F2(is returned.)3.666 E(If the request f)
5.5 E(ails)-.11 E(for an)72 547.2 Q 2.75(yr)-.165 G(eason, the de)-2.75
E(vice control will not be changed.)-.275 E
(If the request is successful, the de)72 562.8 Q
(vice control will be changed and a status of)-.275 E F1(Success)3.666 E
F2(is returned.)3.666 E(The information passed v)72 574.8 Q(aries accor\
ding to the speci\214ed control and is mapped by a structure)-.275 E
(appropriate for that control.)72 586.8 Q(The \214rst tw)5.5 E 2.75(om)
-.11 G(embers are common to all de)-2.75 E(vice controls:)-.275 E 36
606.15 36 617.15 DL 36 605.15 36 616.15 DL 41.5 603.4 36 603.4 DL 42.5
603.4 37 603.4 DL 48 603.4 42.5 603.4 DL(typedef struct {)72 620.4 Q
(XID control;)108 632.4 Q(int length;)108 644.4 Q 2.75(}X)72 656.4 S(De)
-2.75 E(viceControl;)-.275 E 36 657.75 36 668.75 DL 36 656.75 36 667.75
DL 41.5 667 36 667 DL 42.5 667 37 667 DL 48 667 42.5 667 DL
(The control may be set using constants de\214ned in the <)72 690 Q F1
(X11/extensions/XI.h).916 E F2 2.75(>h).916 G(eader \214le.)-2.75 E(Cur)
5.5 E(-)-.22 E(rently de\214ned de)72 702 Q
(vice controls include DEVICE_RESOLUTION.)-.275 E(The information that \
can be changed by the DEVICE_RESOLUTION control is de\214ned in the)72
717.6 Q F1(XDe)72.916 729.6 Q(viceResolutionContr)-.165 E(ol)-.198 E F2
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E F1(44)282.5
768 Q EP
%%Page: 45 47
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q(XID control;)108 114 Q(int length;)108 126 Q(int \214rst_v)108 138
Q(aluator;)-.275 E(int num_v)108 150 Q(aluators;)-.275 E
(int *resolutions;)108 162 Q 2.75(}X)72 174 S(De)-2.75 E
(viceResolutionControl;)-.275 E 36 175.35 36 186.35 DL 36 174.35 36
185.35 DL 41.5 184.6 36 184.6 DL 42.5 184.6 37 184.6 DL 48 184.6 42.5
184.6 DL(This de)72 207.6 Q
(vice control changes the resolution of the speci\214ed v)-.275 E
(aluators on the speci\214ed e)-.275 E(xtension)-.165 E(input de)72
219.6 Q 2.75(vice. V)-.275 F(aluators are numbered be)-1.221 E
(ginning with zero.)-.165 E(Only the v)5.5 E
(aluators in the range speci-)-.275 E(\214ed by \214rst_v)72 231.6 Q
(aluator and num_v)-.275 E(aluators are set.)-.275 E 2.75(Av)5.5 G
(alue of -1 in the resolutions list indicates that)-3.025 E
(the resolution for this v)72 243.6 Q(aluator is not to be changed.)
-.275 E(The num_v)5.5 E(aluators member speci\214es the)-.275 E
(number of v)72 255.6 Q(aluators in the resolutions list.)-.275 E
(When this control is speci\214ed,)72 271.2 Q F1(XChangeDe)3.666 E
(viceContr)-.165 E(ol)-.198 E F2 -.11(fa)3.666 G(ils with a).11 E F1
(BadMatch)3.666 E F2(error if the spec-)3.666 E(i\214ed de)72 283.2 Q
(vice has no v)-.275 E 2.75(aluators. If)-.275 F 2.75(ar)2.75 G
(esolution is speci\214ed that is not within the range of v)-2.75 E
(alid v)-.275 E(al-)-.275 E(ues \(as returned by)72 295.2 Q F1(XGetDe)
3.666 E(viceContr)-.165 E(ol)-.198 E F2(\),).916 E F1(XChangeDe)3.666 E
(viceContr)-.165 E(ol)-.198 E F2 -.11(fa)3.666 G(ils with a).11 E F1
(BadV)3.666 E(alue)-1.012 E F2(error)3.666 E(.)-.605 E(A)72 307.2 Q F1
(BadV)3.666 E(alue)-1.012 E F2(error results if the number of v)3.666 E
(aluators supported by the de)-.275 E(vice is less than the fol-)-.275 E
(lo)72 319.2 Q(wing e)-.275 E(xpression:)-.165 E(\214rst_v)108 340.8 Q
(aluator + num_v)-.275 E(aluators,)-.275 E F1(XChangeDe)72.916 362.4 Q
(viceContr)-.165 E(ol)-.198 E F2(can generate)3.666 E F1(BadMatch)3.666
E F2(and)3.666 E F1(BadV)3.666 E(alue)-1.012 E F2(errors.)3.666 E F1
2.75(2.3.8. Selecting)72 386.4 R(Extension De)2.75 E(vice Ev)-.165 E
(ents)-.11 E F2 1.76 -.88(To s)72 402 T(elect de).88 E(vice input e)
-.275 E -.165(ve)-.275 G(nts, use).165 E F1(XSelectExtensionEv)3.666 E
(ent)-.11 E F2 5.5(.T).916 G(he parameters passed are a pointer)-5.5 E
(to a list of classes that de\214ne the desired e)72 414 Q -.165(ve)
-.275 G(nt types and de).165 E(vices, a count of the number of ele-)
-.275 E(ments in the list, and the ID of the windo)72 426 Q 2.75(wf)
-.275 G(rom which e)-2.75 E -.165(ve)-.275 G(nts are desired.).165 E 36
441.75 36 452.75 DL 36 440.75 36 451.75 DL 41.5 439 36 439 DL 42.5 439
37 439 DL 48 439 42.5 439 DL(int XSelectExtensionEv)72 453.6 Q(ent\()
-.165 E/F3 11/Times-Italic@0 SF(display)A F2(,).916 E F3(window)2.75 E
F2(,).916 E F3 -.165(ev)2.75 G(ent_list).165 E F2(,).916 E F3 -.165(ev)
2.75 G(ent_count).165 E F2(\)).916 E(Display *)85.75 465.6 Q F3(display)
A F2(;).916 E -.44(Wi)85.75 477.6 S(ndo).44 E(w)-.275 E F3(window)2.75 E
F2(;).916 E(XEv)85.75 489.6 Q(entClass *)-.165 E F3 -.165(ev)C(ent_list)
.165 E F2(;).916 E(int)85.75 501.6 Q F3 -.165(ev)2.75 G(ent_count).165 E
F2(;).916 E F3(display)72 520.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(window)72 536.4 Q F2(Speci\214es the ID of the windo)37.768 E 2.75
(wf)-.275 G(rom which the client wishes to recei)-2.75 E .33 -.165(ve e)
-.275 H -.165(ve)-.11 G(nts.).165 E F3 -.165(ev)72 552 S(ent_list).165 E
F2 .772(Speci\214es a pointer to an array of e)30.002 F -.165(ve)-.275 G
.772(nt classes that specify which e).165 F -.165(ve)-.275 G .771
(nts are de-).165 F(sired.)144 564 Q F3 -.165(ev)72 579.6 S(ent_count)
.165 E F2(Speci\214es the number of elements in the e)19.013 E -.165(ve)
-.275 G(nt_list.).165 E 36 574.95 36 585.95 DL 36 573.95 36 584.95 DL
41.5 584.2 36 584.2 DL 42.5 584.2 37 584.2 DL 48 584.2 42.5 584.2 DL F1
(XSelectExtensionEv)72.916 607.2 Q(ent)-.11 E F2(requests the serv)3.666
E(er to send e)-.165 E -.165(ve)-.275 G(nts that match the e).165 E
-.165(ve)-.275 G(nts and de).165 E(vices)-.275 E(described by the e)72
619.2 Q -.165(ve)-.275 G(nt list and that come from the requested windo)
.165 E 4.18 -.715(w. T)-.275 H(he elements of the).715 E F1(XEv)72.916
631.2 Q(entClass)-.11 E F2(array are the e)3.666 E -.165(ve)-.275 G
(nt_class v).165 E(alues obtained by in)-.275 E -.22(vo)-.44 G
(king a macro with the pointer to).22 E(an)72 643.2 Q F1(XDe)3.666 E
(vice)-.165 E F2(structure returned by the)3.666 E F1(XOpenDe)3.666 E
(vice)-.165 E F2 2.75(request. F)3.666 F(or e)-.165 E(xample, the)-.165
E F1(De)3.666 E(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E F2(macro w)72
655.2 Q(ould return the)-.11 E F1(XEv)3.666 E(entClass)-.11 E F2(for)
3.666 E F1(De)3.666 E(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E F2 -2.365
-.275(ev e)3.666 H(nts from the speci\214ed de).275 E(vice if it)-.275 E
(were in)72 667.2 Q -.22(vo)-.44 G -.11(ke).22 G 2.75(di).11 G 2.75(nt)
-2.75 G(he follo)-2.75 E(wing form:)-.275 E(De)108 685.2 Q(viceK)-.275 E
-.165(ey)-.275 G(Press \(XDe).165 E(vice *de)-.275 E(vice, e)-.275 E
-.165(ve)-.275 G(nt_type, e).165 E -.165(ve)-.275 G(nt_class\)).165 E
(Macros are de\214ned for the follo)72 706.8 Q(wing e)-.275 E -.165(ve)
-.275 G(nt classes:).165 E F1(45)282.5 768 Q EP
%%Page: 46 48
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
(De)72.916 90 Q(viceK)-.165 E(eyPr)-.275 E(ess)-.198 E(De)72.916 102 Q
(viceK)-.165 E(eyRelease)-.275 E(De)72.916 114 Q(viceButtonPr)-.165 E
(ess)-.198 E(De)72.916 126 Q(viceButtonRelease)-.165 E(De)72.916 138 Q
(viceMotionNotify)-.165 E(De)72.916 150 Q(viceF)-.165 E(ocusIn)-.275 E
(De)72.916 162 Q(viceF)-.165 E(ocusOut)-.275 E(Pr)72.916 174 Q
(oximityIn)-.198 E(Pr)72.916 186 Q(oximityOut)-.198 E(De)72.916 198 Q
(viceStateNotify)-.165 E(De)72.916 210 Q(viceMappingNotify)-.165 E
(ChangeDe)72.916 222 Q(viceNotify)-.165 E(De)72.916 234 Q(viceP)-.165 E
(ointerMotionHint)-.22 E(De)72.916 246 Q(viceButton1Motion)-.165 E(De)
72.916 258 Q(viceButton2Motion)-.165 E(De)72.916 270 Q
(viceButton3Motion,)-.165 E(De)72.916 282 Q(viceButton4Motion)-.165 E
(De)72.916 294 Q(viceButton5Motion)-.165 E(De)72.916 306 Q
(viceButtonMotion,)-.165 E(De)72.916 318 Q(viceOwnerGrabButton)-.165 E
(De)72.916 330 Q(viceButtonPr)-.165 E(essGrab)-.198 E/F2 11
/Times-Roman@0 SF 1.76 -.88(To g)72 351.6 T(et the ne).88 E(xt a)-.165 E
-.275(va)-.22 G(ilable e).275 E -.165(ve)-.275 G
(nt from within a client program, use the core).165 E F1(XNextEv)3.666 E
(ent)-.11 E F2(function.)3.666 E(This returns the ne)72 363.6 Q(xt e)
-.165 E -.165(ve)-.275 G(nt whether it came from a core de).165 E
(vice or an e)-.275 E(xtension de)-.165 E(vice.)-.275 E(Succeeding)72
379.2 Q F1(XSelectExtensionEv)3.666 E(ent)-.11 E F2(requests using e)
3.666 E -.165(ve)-.275 G(nt classes for the same de).165 E(vice as w)
-.275 E(as)-.11 E(speci\214ed on a pre)72 391.2 Q
(vious request will replace the pre)-.275 E(vious set of selected e)
-.275 E -.165(ve)-.275 G(nts from that de).165 E(vice)-.275 E
(with the ne)72 403.2 Q 2.75(ws)-.275 G(et.)-2.75 E F1
(XSelectExtensionEv)72.916 418.8 Q(ent)-.11 E F2(can generate)3.666 E F1
(BadAccess)3.666 E F2(,).916 E F1(BadClass)3.666 E F2(,).916 E F1
(BadLength)3.666 E F2 2.75(,a).916 G(nd)-2.75 E F1(BadW)3.666 E(indo)
-.198 E(w)-.11 E F2(errors.)72 430.8 Q F1 2.75(2.3.9. Determining)72
454.8 R(Selected De)2.75 E(vice Ev)-.165 E(ents)-.11 E F2 1.76 -.88
(To d)72 470.4 T(etermine which e).88 E(xtension e)-.165 E -.165(ve)
-.275 G(nts are currently selected from a gi).165 E -.165(ve)-.275 G
2.75(nw).165 G(indo)-2.75 E 1.43 -.715(w, u)-.275 H(se).715 E F1
(XGetSelectedExtensionEv)72.916 482.4 Q(ents)-.11 E F2(.).916 E F1(46)
282.5 768 Q EP
%%Page: 47 49
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF
(int XGetSelectedExtensionEv)72 99.6 Q(ents\()-.165 E/F3 11
/Times-Italic@0 SF(display)A F2(,).916 E F3(window)2.75 E F2(,).916 E F3
(this_client_count)2.75 E F2(,).916 E F3(this_client)2.75 E F2(,).916 E
F3(all_clients_count)138 111.6 Q F2(,).916 E F3(all_clients)2.75 E F2
(\)).916 E(Display *)85.75 123.6 Q F3(display)A F2(;).916 E -.44(Wi)
85.75 135.6 S(ndo).44 E(w)-.275 E F3(window)2.75 E F2(;).916 E(int *)
85.75 147.6 Q F3(this_client_count)A F2 5.5(;/).916 G 2.75(*R)-5.5 G
(ETURN */)-2.75 E(XEv)85.75 159.6 Q(entClass **)-.165 E F3(this_client)A
F2 19.25(;/).916 G 2.75(*R)-19.25 G(ETURN */)-2.75 E(int *)85.75 171.6 Q
F3(all_clients_count)A F2 5.5(;/).916 G 2.75(*R)-5.5 G(ETURN */)-2.75 E
(XEv)85.75 183.6 Q(entClass **)-.165 E F3(all_clients)A F2 19.25(;/).916
G 2.75(*R)-19.25 G(ETURN */)-2.75 E F3(display)72 202.8 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(window)72 218.4 Q F2(Speci\214es the ID of the windo)37.768 E 2.75
(wf)-.275 G(rom which the client wishes to recei)-2.75 E .33 -.165(ve e)
-.275 H -.165(ve)-.11 G(nts.).165 E F3(this_client_count)72 234 Q F2
(Returns the number of elements in the this_client list.)A F3
(this_client)72 249.6 Q F2 1.276(Returns a list of)26.163 F F1(XEv)4.942
E(entClasses)-.11 E F2 1.277(that specify which e)4.943 F -.165(ve)-.275
G 1.277(nts are selected by this).165 F(client.)144 261.6 Q F3
(all_clients_count)72 277.2 Q F2
(Returns the number of elements in the all_clients list.)A F3
(all_clients)72 292.8 Q F2 1.685(Returns a list of)26.163 F F1(XEv)5.351
E(entClasses)-.11 E F2 1.685(that specify which e)5.351 F -.165(ve)-.275
G 1.684(nts are selected by all).165 F(clients.)144 304.8 Q 36 300.15 36
311.15 DL 36 299.15 36 310.15 DL 41.5 309.4 36 309.4 DL 42.5 309.4 37
309.4 DL 48 309.4 42.5 309.4 DL F1(XGetSelectedExtensionEv)72.916 332.4
Q(ents)-.11 E F2(returns pointers to tw)3.666 E 2.75(oe)-.11 G -.165(ve)
-3.025 G(nt class arrays.).165 E(One lists the e)5.5 E(xten-)-.165 E
(sion e)72 344.4 Q -.165(ve)-.275 G
(nts selected by this client from the speci\214ed windo).165 E 4.18
-.715(w. T)-.275 H(he other lists the e).715 E(xtension e)-.165 E -.165
(ve)-.275 G(nts).165 E
(selected by all clients from the speci\214ed windo)72 356.4 Q 4.18
-.715(w. T)-.275 H(his information is analogous to that returned).715 E
(in your_e)72 368.4 Q -.165(ve)-.275 G(nt_mask and all_e).165 E -.165
(ve)-.275 G(nt_masks of the).165 E F1(XW)3.666 E(indo)-.198 E(wAttrib)
-.11 E(utes)-.22 E F2(structure when an)3.666 E F1(XGetW)72.916 380.4 Q
(indo)-.198 E(wAttrib)-.11 E(utes)-.22 E F2(request is made.)3.666 E
1.76 -.88(To f)5.5 H(ree the tw).88 E 2.75(oa)-.11 G
(rrays returned by this function, use)-2.75 E F1(XFr)72.916 392.4 Q(ee)
-.198 E F2(.).916 E F1(XGetSelectedExtensionEv)72.916 408 Q(ents)-.11 E
F2(can generate)3.666 E F1(BadW)3.666 E(indo)-.198 E(w)-.11 E F2
(errors.)3.666 E F1 2.75(2.3.10. Contr)72 432 R(olling Ev)-.198 E
(ent Pr)-.11 E(opagation)-.198 E F2(Extension e)72 447.6 Q -.165(ve)
-.275 G(nts propag).165 E(ate up the windo)-.055 E 2.75(wh)-.275 G
(ierarch)-2.75 E 2.75(yi)-.055 G 2.75(nt)-2.75 G
(he same manner as core e)-2.75 E -.165(ve)-.275 G 2.75(nts. If).165 F
2.75(aw)2.75 G(in-)-2.75 E(do)72 459.6 Q 2.75(wi)-.275 G 2.75(sn)-2.75 G
(ot interested in an e)-2.75 E(xtension e)-.165 E -.165(ve)-.275 G
(nt, it usually propag).165 E(ates to the closest ancestor that is)-.055
E(interested, unless the dont_propag)72 471.6 Q(ate list prohibits it.)
-.055 E(Grabs of e)5.5 E(xtension de)-.165 E(vices may alter the set)
-.275 E(of windo)72 483.6 Q(ws that recei)-.275 E .33 -.165(ve a p)-.275
H(articular e).165 E(xtension e)-.165 E -.165(ve)-.275 G(nt.).165 E
(Client programs may control e)72 499.2 Q -.165(ve)-.275 G(nt propag)
.165 E(ation through the use of the follo)-.055 E(wing tw)-.275 E 2.75
(of)-.11 G(unctions:)-2.75 E F1(XChangeDe)72.916 511.2 Q(viceDontPr)
-.165 E(opagateList)-.198 E F2(and)3.666 E F1(XGetDe)3.666 E(viceDontPr)
-.165 E(opagateList)-.198 E F2(.).916 E 36 530.55 36 541.55 DL 36 529.55
36 540.55 DL 41.5 527.8 36 527.8 DL 42.5 527.8 37 527.8 DL 48 527.8 42.5
527.8 DL(int XChangeDe)72 542.4 Q(viceDontPropag)-.275 E(ateList\()-.055
E F3(display)A F2(,).916 E F3(window)2.75 E F2(,).916 E F3 -.165(ev)2.75
G(ent_count).165 E F2(,).916 E F3 -.165(ev)2.75 G(ents).165 E F2(,).916
E F3(mode)2.75 E F2(\)).916 E(Display *)85.75 554.4 Q F3(display)A F2(;)
.916 E -.44(Wi)85.75 566.4 S(ndo).44 E(w)-.275 E F3(window)2.75 E F2(;)
.916 E(int)85.75 578.4 Q F3 -.165(ev)2.75 G(ent_count).165 E F2(;).916 E
(XEv)85.75 590.4 Q(entClass *)-.165 E F3 -.165(ev)C(ents).165 E F2(;)
.916 E(int)85.75 602.4 Q F3(mode)2.75 E F2(;).916 E F3(display)72 621.6
Q F2(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)
-.605 E F3(window)72 637.2 Q F2(Speci\214es the desired windo)37.768 E
-.715(w.)-.275 G F3 -.165(ev)72 652.8 S(ent_count).165 E F2
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nts list.).165 E F3 -.165(ev)72 668.4 S(ents).165 E F2
(Speci\214es a pointer to the list of XEv)44.676 E(entClasses.)-.165 E
F3(mode)72 684 Q F2(Speci\214es the mode.)48.174 E -1.21(Yo)5.5 G 2.75
(uc)1.21 G(an pass)-2.75 E F1(AddT)3.666 E(oList)-1.012 E F2(or)3.666 E
F1(DeleteFr)3.666 E(omList)-.198 E F2(.).916 E 36 679.35 36 690.35 DL 36
678.35 36 689.35 DL 41.5 688.6 36 688.6 DL 42.5 688.6 37 688.6 DL 48
688.6 42.5 688.6 DL F1(XChangeDe)72.916 711.6 Q(viceDontPr)-.165 E
(opagateList)-.198 E F2(adds an e)3.666 E -.165(ve)-.275 G
(nt to or deletes an e).165 E -.165(ve)-.275 G(nt from the do_not_prop-)
.165 E(ag)72 723.6 Q(ate list of e)-.055 E(xtension e)-.165 E -.165(ve)
-.275 G(nts for the speci\214ed windo).165 E 4.18 -.715(w. T)-.275 H
(here is one list per windo).715 E 1.43 -.715(w, a)-.275 H(nd the list)
.715 E F1(47)282.5 768 Q EP
%%Page: 48 50
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(remains for the life of the windo)72 84 Q 4.18 -.715
(w. T)-.275 H
(he list is not altered if a client that changed the list termi-).715 E
(nates.)72 96 Q(Suppression of e)72 111.6 Q -.165(ve)-.275 G(nt propag)
.165 E(ation is not allo)-.055 E(wed for all e)-.275 E -.165(ve)-.275 G
2.75(nts. If).165 F 2.75(as)2.75 G(peci\214ed)-2.75 E F1(XEv)3.666 E
(entClass)-.11 E F2(is)3.666 E(in)72 123.6 Q -.275(va)-.44 G
(lid because suppression of that e).275 E -.165(ve)-.275 G
(nt is not allo).165 E(wed, a)-.275 E F1(BadClass)3.666 E F2
(error results.)3.666 E F1(XChangeDe)72.916 139.2 Q(viceDontPr)-.165 E
(opagateList)-.198 E F2(can generate)3.666 E F1(BadClass)3.666 E F2(,)
.916 E F1(BadMode)3.666 E F2 2.75(,a).916 G(nd)-2.75 E F1(BadW)3.666 E
(indo)-.198 E(w)-.11 E F2(errors.)72 151.2 Q .44 LW 36 182.55 36 193.55
DL 36 181.55 36 192.55 DL 41.5 179.8 36 179.8 DL 42.5 179.8 37 179.8 DL
48 179.8 42.5 179.8 DL(XEv)72 194.4 Q(entClass * XGetDe)-.165 E
(viceDontPropag)-.275 E(ateList\()-.055 E/F3 11/Times-Italic@0 SF
(display)A F2(,).916 E F3(window)2.75 E F2(,).916 E F3 -.165(ev)2.75 G
(ent_count).165 E F2(\)).916 E(Display *)88.5 206.4 Q F3(display)A F2(;)
.916 E -.44(Wi)88.5 218.4 S(ndo).44 E(w)-.275 E F3(window)2.75 E F2(;)
.916 E(int *)88.5 230.4 Q F3 -.165(ev)C(ent_count).165 E F2 122.673(;/)
.916 G(*RETURN */)-122.673 E F3(display)72 249.6 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(window)72 265.2 Q F2(Speci\214es the desired windo)37.768 E -.715(w.)
-.275 G F3 -.165(ev)72 280.8 S(ent_count).165 E F2
(Returns the number of elements in the array returned by this function.)
19.013 E 36 276.15 36 287.15 DL 36 275.15 36 286.15 DL 41.5 285.4 36
285.4 DL 42.5 285.4 37 285.4 DL 48 285.4 42.5 285.4 DL F1(XGetDe)72.916
308.4 Q(viceDontPr)-.165 E(opagateList)-.198 E F2(allo)3.666 E
(ws a client to determine the do_not_propag)-.275 E(ate list of e)-.055
E(xten-)-.165 E(sion e)72 320.4 Q -.165(ve)-.275 G
(nts for the speci\214ed windo).165 E 4.18 -.715(w. I)-.275 H 2.75(tr)
.715 G(eturns an array of)-2.75 E F1(XEv)3.666 E(entClass)-.11 E F2 2.75
(,e).916 G(ach)-2.75 E F1(XEv)3.666 E(entClass)-.11 E F2
(representing a de)72 332.4 Q(vice/e)-.275 E -.165(ve)-.275 G
(nt type pair).165 E 5.5(.T)-.605 G 2.75(of)-6.38 G
(ree the data returned by this function, use)-2.75 E F1(XFr)3.666 E(ee)
-.198 E F2(.).916 E F1(XGetDe)72.916 348 Q(viceDontPr)-.165 E
(opagateList)-.198 E F2(can generate)3.666 E F1(BadW)3.666 E(indo)-.198
E(w)-.11 E F2(errors.)3.666 E F1 2.75(2.3.11. Sending)72 372 R(an Ev)
2.75 E(ent)-.11 E F2 1.76 -.88(To s)72 387.6 T(end an e).88 E
(xtension e)-.165 E -.165(ve)-.275 G(nt to another client, use).165 E F1
(XSendExtensionEv)3.666 E(ent)-.11 E F2(.).916 E 36 403.35 36 414.35 DL
36 402.35 36 413.35 DL 41.5 400.6 36 400.6 DL 42.5 400.6 37 400.6 DL 48
400.6 42.5 400.6 DL(int XSendExtensionEv)72 415.2 Q(ent\()-.165 E F3
(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,).916 E F3(window)
2.75 E F2(,).916 E F3(pr)2.75 E(opa)-.495 E(gate)-.11 E F2(,).916 E F3
-.165(ev)2.75 G(ent_count).165 E F2(,).916 E F3 -.165(ev)2.75 G
(ent_list).165 E F2(,).916 E F3 -.165(ev)2.75 G(ent).165 E F2(\)).916 E
(Display *)85.75 427.2 Q F3(display)A F2(;).916 E(XDe)85.75 439.2 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E -.44(Wi)85.75 451.2 S
(ndo).44 E(w)-.275 E F3(window)2.75 E F2(;).916 E(Bool)85.75 463.2 Q F3
(pr)2.75 E(opa)-.495 E(gate)-.11 E F2(;).916 E(int)85.75 475.2 Q F3
-.165(ev)2.75 G(ent_count).165 E F2(;).916 E(XEv)85.75 487.2 Q
(entClass *)-.165 E F3 -.165(ev)C(ent_list).165 E F2(;).916 E(XEv)85.75
499.2 Q(ent *)-.165 E F3 -.165(ev)C(ent).165 E F2(;).916 E F3(display)72
518.4 Q F2(Speci\214es the connection to the X serv)40.221 E(er)-.165 E
(.)-.605 E F3(de)72 534 Q(vice)-.165 E F2(Speci\214es the de)44.071 E
(vice whose ID is recorded in the e)-.275 E -.165(ve)-.275 G(nt.).165 E
F3(window)72 549.6 Q F2 .957(Speci\214es the destination windo)37.768 F
3.707(wI)-.275 G 3.707(D. Y)-3.707 F .957(ou can pass a windo)-1.21 F
3.707(wI)-.275 G(D,)-3.707 E F1 -.22(Po)4.623 G(interW).22 E(in-)-.198 E
(do)144 561.6 Q(w)-.11 E F2(or)3.666 E F1(InputF)3.666 E(ocus)-.275 E F2
(.).916 E F3(pr)72 577.2 Q(opa)-.495 E(gate)-.11 E F2
(Speci\214es a boolean v)27.384 E(alue that is either)-.275 E F1 -.814
(Tr)3.666 G(ue).814 E F2(or)3.666 E F1 -.275(Fa)3.666 G(lse).275 E F2(.)
.916 E F3 -.165(ev)72 592.8 S(ent_count).165 E F2
(Speci\214es the number of elements in the e)19.013 E -.165(ve)-.275 G
(nt_list array).165 E(.)-.715 E F3 -.165(ev)72 608.4 S(ent_list).165 E
F2(Speci\214es a pointer to an array of)30.002 E F1(XEv)3.666 E
(entClass)-.11 E F2(.).916 E F3 -.165(ev)72 624 S(ent).165 E F2
(Speci\214es a pointer to the e)48.955 E -.165(ve)-.275 G
(nt that is to be sent.).165 E 36 619.35 36 630.35 DL 36 618.35 36
629.35 DL 41.5 628.6 36 628.6 DL 42.5 628.6 37 628.6 DL 48 628.6 42.5
628.6 DL F1(XSendExtensionEv)72.916 651.6 Q(ent)-.11 E F2
(identi\214es the destination windo)3.666 E 1.43 -.715(w, d)-.275 H
(etermines which clients should).715 E(recei)72 663.6 Q .33 -.165(ve t)
-.275 H(he speci\214ed e).165 E -.165(ve)-.275 G(nt, and ignores an).165
E 2.75(ya)-.165 G(cti)-2.75 E .33 -.165(ve g)-.275 H 2.75(rabs. It).165
F(requires a list of)2.75 E F1(XEv)3.666 E(entClass)-.11 E F2(to be)
3.666 E 2.75(speci\214ed. These)72 675.6 R
(are obtained by opening an input de)2.75 E(vice with the)-.275 E F1
(XOpenDe)3.666 E(vice)-.165 E F2(request.)3.666 E F1(XSendExtensionEv)
72.916 691.2 Q(ent)-.11 E F2(uses the windo)3.666 E 2.75(wa)-.275 G
-.198(rg)-2.75 G(ument to identify the destination windo).198 E 2.75(wa)
-.275 G 2.75(sf)-2.75 G(ollo)-2.75 E(ws:)-.275 E 23.65<8349>72 706.8 S
2.75(fy)-23.65 G(ou pass)-2.75 E F1 -.22(Po)3.666 G(interW).22 E(indo)
-.198 E(w)-.11 E F2 2.75(,t).916 G(he destination windo)-2.75 E 2.75(wi)
-.275 G 2.75(st)-2.75 G(he windo)-2.75 E 2.75(wt)-.275 G
(hat contains the)-2.75 E(pointer)99.5 718.8 Q(.)-.605 E F1(48)282.5 768
Q EP
%%Page: 49 51
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF 23.65<8349>72 84 S 2.75(fy)-23.65 G(ou pass)-2.75 E
F1(InputF)3.666 E(ocus)-.275 E F2(and if the focus windo)3.666 E 2.75
(wc)-.275 G(ontains the pointer)-2.75 E 2.75(,t)-.44 G
(he destination win-)-2.75 E(do)99.5 96 Q 2.75(wi)-.275 G 2.75(st)-2.75
G(he windo)-2.75 E 2.75(wt)-.275 G(hat contains the pointer)-2.75 E 5.5
(.I)-.605 G 2.75(ft)-5.5 G(he focus windo)-2.75 E 2.75(wd)-.275 G
(oes not contain the)-2.75 E(pointer)99.5 108 Q 2.75(,t)-.44 G
(he destination windo)-2.75 E 2.75(wi)-.275 G 2.75(st)-2.75 G
(he focus windo)-2.75 E -.715(w.)-.275 G 1.76 -.88(To d)72 123.6 T
(etermine which clients should recei).88 E .33 -.165(ve t)-.275 H
(he speci\214ed e).165 E -.165(ve)-.275 G(nts,).165 E F1
(XSendExtensionEv)3.666 E(ent)-.11 E F2(uses the)3.666 E(propag)72 135.6
Q(ate ar)-.055 E(gument as follo)-.198 E(ws:)-.275 E 23.65<8349>72 151.2
S 2.75(fp)-23.65 G(ropag)-2.75 E(ate is)-.055 E F1 -.275(Fa)3.666 G(lse)
.275 E F2 2.75(,t).916 G(he e)-2.75 E -.165(ve)-.275 G(nt is sent to e)
.165 E -.165(ve)-.275 G(ry client selecting from the destination windo)
.165 E(w)-.275 E(an)99.5 163.2 Q 2.75(yo)-.165 G 2.75(ft)-2.75 G(he e)
-2.75 E -.165(ve)-.275 G(nts speci\214ed in the e).165 E -.165(ve)-.275
G(nt_list array).165 E(.)-.715 E 23.65<8349>72 178.8 S 2.75(fp)-23.65 G
(ropag)-2.75 E(ate is)-.055 E F1 -.814(Tr)3.666 G(ue).814 E F2
(and no clients ha)3.666 E .33 -.165(ve s)-.22 H
(elected from the destination windo).165 E 2.75(wa)-.275 G .33 -.165
(ny o)-2.75 H 2.75(ft).165 G(he)-2.75 E -2.365 -.275(ev e)99.5 190.8 T
(nts speci\214ed in the e).275 E -.165(ve)-.275 G(nt_list array).165 E
2.75(,t)-.715 G(he destination is replaced with the closest ancestor)
-2.75 E(of destination for which some client has selected one of the sp\
eci\214ed e)99.5 202.8 Q -.165(ve)-.275 G(nts and for which).165 E
(no interv)99.5 214.8 Q(ening windo)-.165 E 2.75(wh)-.275 G(as that e)
-2.75 E -.165(ve)-.275 G(nt in its do_not_propag).165 E(ate mask.)-.055
E(If no such windo)5.5 E(w)-.275 E -.165(ex)99.5 226.8 S
(ists, or if the windo).165 E 2.75(wi)-.275 G 2.75(sa)-2.75 G 2.75(na)
-2.75 G(ncestor of the focus windo)-2.75 E 1.43 -.715(w, a)-.275 H(nd)
.715 E F1(InputF)3.666 E(ocus)-.275 E F2 -.11(wa)3.666 G 2.75(so).11 G
(riginally)-2.75 E(speci\214ed as the destination, the e)99.5 238.8 Q
-.165(ve)-.275 G(nt is not sent to an).165 E 2.75(yc)-.165 G 2.75
(lients. Otherwise,)-2.75 F(the e)2.75 E -.165(ve)-.275 G(nt is).165 E
(reported to e)99.5 250.8 Q -.165(ve)-.275 G
(ry client selecting on the \214nal destination an).165 E 2.75(yo)-.165
G 2.75(ft)-2.75 G(he e)-2.75 E -.165(ve)-.275 G(nts speci\214ed in).165
E -2.365 -.275(ev e)99.5 262.8 T(nt_list.).275 E(The e)72 278.4 Q -.165
(ve)-.275 G(nt in the).165 E F1(XEv)3.666 E(ent)-.11 E F2
(structure must be one of the e)3.666 E -.165(ve)-.275 G
(nts de\214ned by the input e).165 E(xtension, so)-.165 E
(that the X serv)72 290.4 Q(er can correctly byte sw)-.165 E
(ap the contents as necessary)-.11 E 5.5(.T)-.715 G
(he contents of the e)-5.5 E -.165(ve)-.275 G(nt are).165 E
(otherwise unaltered and uncheck)72 302.4 Q(ed by the X serv)-.11 E
(er e)-.165 E(xcept to force send_e)-.165 E -.165(ve)-.275 G(nt to).165
E F1 -.814(Tr)3.666 G(ue).814 E F2(in the for)3.666 E(-)-.22 E -.11(wa)
72 314.4 S(rded e).11 E -.165(ve)-.275 G
(nt and to set the sequence number in the e).165 E -.165(ve)-.275 G
(nt correctly).165 E(.)-.715 E F1(XSendExtensionEv)72.916 330 Q(ent)-.11
E F2(returns zero if the con)3.666 E -.165(ve)-.44 G
(rsion-to-wire protocol f).165 E(ailed; otherwise, it)-.11 E
(returns nonzero.)72 342 Q F1(XSendExtensionEv)72.916 357.6 Q(ent)-.11 E
F2(can generate)3.666 E F1(BadClass)3.666 E F2(,).916 E F1(BadDe)3.666 E
(vice)-.165 E F2(,).916 E F1(BadV)3.666 E(alue)-1.012 E F2 2.75(,a).916
G(nd)-2.75 E F1(BadW)3.666 E(indo)-.198 E(w)-.11 E F2(errors.)72 369.6 Q
F1 2.75(2.3.12. Getting)72 393.6 R(Motion History)2.75 E .44 LW 36
412.95 36 423.95 DL 36 411.95 36 422.95 DL 41.5 410.2 36 410.2 DL 42.5
410.2 37 410.2 DL 48 410.2 42.5 410.2 DL F2(XDe)72 424.8 Q(viceT)-.275 E
(imeCoord * XGetDe)-.385 E(viceMotionEv)-.275 E(ents\()-.165 E/F3 11
/Times-Italic@0 SF(display)A F2(,).916 E F3(de)2.75 E(vice)-.165 E F2(,)
.916 E F3(start)2.75 E F2(,).916 E F3(stop)2.75 E F2(,).916 E F3(ne)2.75
E(vents_r)-.165 E(eturn)-.407 E F2(,).916 E F3(mode_r)2.75 E(eturn)-.407
E F2(,).916 E F3(axis_count_r)129.75 436.8 Q(eturn)-.407 E F2(\);).916 E
(Display *)85.75 448.8 Q F3(display)A F2(;).916 E(XDe)85.75 460.8 Q
(vice *)-.275 E F3(de)A(vice)-.165 E F2(;).916 E -.385(Ti)85.75 472.8 S
(me).385 E F3(start)2.75 E F2(,).916 E F3(stop)2.75 E F2(;).916 E(int *)
85.75 484.8 Q F3(ne)A(vents_r)-.165 E(eturn)-.407 E F2(;).916 E(int *)
85.75 496.8 Q F3(mode_r)A(eturn)-.407 E F2(;).916 E(int *)85.75 508.8 Q
F3(axis_count_r)A(eturn)-.407 E F2(;).916 E F3(display)72 528 Q F2
(Speci\214es the connection to the X serv)40.221 E(er)-.165 E(.)-.605 E
F3(de)72 543.6 Q(vice)-.165 E F2(Speci\214es the desired de)44.071 E
(vice.)-.275 E F3(start)72 559.2 Q F2(Speci\214es the start time.)51.826
E F3(stop)72 574.8 Q F2(Speci\214es the stop time.)53.663 E F3(ne)72
590.4 Q(vents_r)-.165 E(eturn)-.407 E F2
(Returns the number of positions in the motion b)6.583 E(uf)-.22 E
(fer returned for this request.)-.275 E F3(mode_r)72 606 Q(eturn)-.407 E
F2 .912(Returns the mode of the ne)15.581 F -.165(ve)-.275 G .912
(nts information.).165 F .911(The mode will be one of the fol-)6.412 F
(lo)144 618 Q(wing:)-.275 E F1(Absolute)3.666 E F2(or)3.666 E F1(Relati)
3.666 E -.11(ve)-.11 G F2(.)1.026 E F3(axis_count_r)72 633.6 Q(eturn)
-.407 E F2(Returns the number of ax)144 645.6 Q
(es reported in each of the positions returned.)-.165 E 36 640.95 36
651.95 DL 36 639.95 36 650.95 DL 41.5 650.2 36 650.2 DL 42.5 650.2 37
650.2 DL 48 650.2 42.5 650.2 DL F1(XGetDe)72.916 673.2 Q(viceMotionEv)
-.165 E(ents)-.11 E F2(returns all positions in the de)3.666 E(vice')
-.275 E 2.75(sm)-.605 G(otion history b)-2.75 E(uf)-.22 E(fer that f)
-.275 E(all)-.11 E(between the speci\214ed start and stop times inclusi)
72 685.2 Q -.165(ve)-.275 G 5.5(.I).165 G 2.75(ft)-5.5 G
(he start time is in the future or is later)-2.75 E
(than the stop time, no positions are returned.)72 697.2 Q
(The return type for this function is an)72 712.8 Q F1(XDe)3.666 E
(viceT)-.165 E(imeCoord)-.198 E F2
(structure, which is de\214ned as follo)3.666 E(ws:)-.275 E F1(49)282.5
768 Q EP
%%Page: 50 52
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
.44 LW 36 87.75 36 98.75 DL 36 86.75 36 97.75 DL 41.5 85 36 85 DL 42.5
85 37 85 DL 48 85 42.5 85 DL/F2 11/Times-Roman@0 SF(typedef struct {)72
102 Q -.385(Ti)108 114 S(me time;).385 E(unsigned int *data;)108 126 Q
2.75(}X)72 138 S(De)-2.75 E(viceT)-.275 E(imeCoord;)-.385 E 36 139.35 36
150.35 DL 36 138.35 36 149.35 DL 41.5 148.6 36 148.6 DL 42.5 148.6 37
148.6 DL 48 148.6 42.5 148.6 DL
(The data member is a pointer to an array of data items.)72 171.6 Q
(Each item is of type int, and there is one)5.5 E
(data item per axis of motion reported by the de)72 183.6 Q 2.75
(vice. The)-.275 F(number of ax)2.75 E(es reported by the de)-.165 E
(vice is)-.275 E(returned in the axis_count v)72 195.6 Q(ariable.)-.275
E(The v)72 211.2 Q(alue of the data items depends on the mode of the de)
-.275 E 2.75(vice. The)-.275 F(mode is returned in the mode)2.75 E -.275
(va)72 223.2 S 2.75(riable. If).275 F(the mode is)2.75 E F1(Absolute)
3.666 E F2 2.75(,t).916 G(he data items are the ra)-2.75 E 2.75(wv)-.165
G(alues generated by the de)-3.025 E(vice.)-.275 E
(These may be scaled by the client program using the maximum v)72 235.2
Q(alues that the de)-.275 E(vice can gener)-.275 E(-)-.22 E
(ate for each axis of motion that it reports.)72 247.2 Q(The maximum v)
5.5 E(alue for each axis is reported in the)-.275 E(max_v)72 259.2 Q
(al member of the)-.275 E F1(XAxisInf)3.666 E(o)-.275 E F2
(structure, which is part of the information returned by the)3.666 E F1
(XListInputDe)72.916 271.2 Q(vices)-.165 E F2(request.)3.666 E
(If the mode is)72 286.8 Q F1(Relati)3.666 E -.11(ve)-.11 G F2 2.75(,t)
1.026 G(he data items are the relati)-2.75 E .33 -.165(ve v)-.275 H
(alues generated by the de)-.11 E 2.75(vice. The)-.275 F(client)2.75 E
(program must choose an initial position for the de)72 298.8 Q
(vice and maintain a current position by accumu-)-.275 E
(lating these relati)72 310.8 Q .33 -.165(ve v)-.275 H(alues.)-.11 E
(Consecuti)72 326.4 Q .33 -.165(ve c)-.275 H(alls to).165 E F1(XGetDe)
3.666 E(viceMotionEv)-.165 E(ents)-.11 E F2(can return data of dif)3.666
E(ferent modes, that is, if)-.275 E
(some client program has changed the mode of the de)72 338.4 Q
(vice via an)-.275 E F1(XSetDe)3.666 E(viceMode)-.165 E F2(request.)
3.666 E F1(XGetDe)72.916 354 Q(viceMotionEv)-.165 E(ents)-.11 E F2
(can generate)3.666 E F1(BadDe)3.666 E(vice)-.165 E F2(and)3.666 E F1
(BadMatch)3.666 E F2(errors.)3.666 E 1.76 -.88(To f)72 381.6 T
(ree the data returned by).88 E F1(XGetDe)3.666 E(viceMotionEv)-.165 E
(ents)-.11 E F2 2.75(,u).916 G(se)-2.75 E F1(XFr)3.666 E(eeDe)-.198 E
(viceMotionEv)-.165 E(ents)-.11 E F2(.).916 E 36 400.95 36 411.95 DL 36
399.95 36 410.95 DL 41.5 398.2 36 398.2 DL 42.5 398.2 37 398.2 DL 48
398.2 42.5 398.2 DL -.22(vo)72 412.8 S(id XFreeDe).22 E(viceMotionEv)
-.275 E(ents\()-.165 E/F3 11/Times-Italic@0 SF -.165(ev)C(ents).165 E F2
(\)).916 E(XDe)88.5 424.8 Q(viceT)-.275 E(imeCoord *)-.385 E F3 -.165
(ev)C(ents).165 E F2(;).916 E F3 -.165(ev)72 444 S(ents).165 E F2 1.849
(Speci\214es the pointer to the)44.676 F F1(XDe)5.515 E(viceT)-.165 E
(imeCoord)-.198 E F2 1.849(array returned by a pre)5.515 F(vious)-.275 E
(call to)144 456 Q F1(XGetDe)3.666 E(viceMotionEv)-.165 E(ents)-.11 E F2
(.).916 E 36 451.35 36 462.35 DL 36 450.35 36 461.35 DL 41.5 460.6 36
460.6 DL 42.5 460.6 37 460.6 DL 48 460.6 42.5 460.6 DL F1(XFr)72.916
483.6 Q(eeDe)-.198 E(viceMotionEv)-.165 E(ents)-.11 E F2
(frees the speci\214ed array of motion information.)3.666 E F1(50)282.5
768 Q EP
%%Page: 51 53
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
12/Times-Bold@0 SF -.3(Ap)257.31 84 S(pendix A).3 E/F3 11/Times-Roman@0
SF(The follo)72 99.6 Q(wing information is contained in the)-.275 E F1
(<X11/extensions/XInput.h>)2.75 E F3(and)2.75 E F1(<X11/exten-)2.75 E
(sions/XI.h>)72 111.6 Q F3(header \214les:)2.75 E F1(51)282.5 768 Q EP
%%Page: 52 54
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(/* Definitions used by the library and client */)
71.822 102 S -.356(#ifndef _XINPUT_H_)71.822 126 S -.356
(#define _XINPUT_H_)71.822 138 S -.356(#ifndef _XLIB_H_)71.822 162 S
-.356(#include <X11/Xlib.h>)71.822 174 S -.356(#endif)71.822 186 S -.356
(#ifndef _XI_H_)71.822 210 S -.356(#include "XI.h")71.822 222 S -.356
(#endif)71.822 234 S -.356(#define _deviceKeyPress)71.822 258 S(0)35.288
E -.356(#define _deviceKeyRelease)71.822 270 S(1)26.4 E -.356
(#define _deviceButtonPress)71.822 294 S(0)21.956 E -.356
(#define _deviceButtonRelease)71.822 306 S(1)13.068 E -.356
(#define _deviceMotionNotify)71.822 330 S(0)17.512 E -.356
(#define _deviceFocusIn)71.822 354 S(0)39.732 E -.356
(#define _deviceFocusOut)71.822 366 S(1)35.288 E -.356
(#define _proximityIn)71.822 390 S(0)48.62 E -.356
(#define _proximityOut)71.822 402 S(1)44.176 E -.356
(#define _deviceStateNotify)71.822 426 S(0)21.956 E -.356
(#define _deviceMappingNotify)71.822 438 S(1)13.068 E -.356
(#define _changeDeviceNotify)71.822 450 S(2)17.512 E -.356
(#define FindTypeAndClass\(d, type, class, classid, offset\))71.822 474
S 4.088({i)22.22 G -.356(nt i; XInputClassInfo *ip;)-4.444 G -.356
(type = 0; class = 0;)22.22 G -.356
(for \(i=0, ip= \(\(XDevice *\) d\)->classes;)22.22 G -.356
(i< \(\(XDevice *\) d\)->num_classes;)8.888 G -.356
(i++, ip++\) if \(ip->input_class == classid\))8.888 G -.356({type =)
22.22 G -.356(ip->event_type_base + offset;)8.888 G -.356(class =)26.664
G -.356(\(\(XDevice *\) d\)->device_id << 8 | type;}})8.888 G -.356
(#define DeviceKeyPress\(d, type, class\))71.822 498 S -.356
(FindTypeAndClass\(d, type, class, KeyClass, _deviceKeyPress\))22.22 G
-.356(#define DeviceKeyRelease\(d, type, class\))71.822 522 S -.356
(FindTypeAndClass\(d, type, class, KeyClass, _deviceKeyRelease\))22.22 G
-.356(#define DeviceButtonPress\(d, type, class\))71.822 546 S -.356
(FindTypeAndClass\(d, type, class, ButtonClass, _deviceButtonPress\))
22.22 G -.356(#define DeviceButtonRelease\(d, type, class\))71.822 570 S
-.356
(FindTypeAndClass\(d, type, class, ButtonClass, _deviceButtonRelease\))
22.22 G -.356(#define DeviceMotionNotify\(d, type, class\))71.822 594 S
-.356
(FindTypeAndClass\(d, type, class, ValuatorClass, _deviceMotionNotify\))
22.22 G -.356(#define DeviceFocusIn\(d, type, class\))71.822 618 S -.356
(FindTypeAndClass\(d, type, class, FocusClass, _deviceFocusIn\))22.22 G
-.356(#define DeviceFocusOut\(d, type, class\))71.822 642 S -.356
(FindTypeAndClass\(d, type, class, FocusClass, _deviceFocusOut\))22.22 G
-.356(#define ProximityIn\(d, type, class\))71.822 666 S -.356
(FindTypeAndClass\(d, type, class, ProximityClass, _proximityIn\))22.22
G -.356(#define ProximityOut\(d, type, class\))71.822 690 S -.356
(FindTypeAndClass\(d, type, class, ProximityClass, _proximityOut\))22.22
G -.356(#define DeviceStateNotify\(d, type, class\))71.822 714 S -.356
(FindTypeAndClass\(d, type, class, OtherClass, _deviceStateNotify\))
22.22 G F1(52)282.5 768 Q EP
%%Page: 53 55
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(#define DeviceMappingNotify\(d, type, class\))
71.822 84 S -.356
(FindTypeAndClass\(d, type, class, OtherClass, _deviceMappingNotify\))
22.22 G -.356(#define ChangeDeviceNotify\(d, type, class\))71.822 108 S
-.356
(FindTypeAndClass\(d, type, class, OtherClass, _changeDeviceNotify\))
22.22 G -.356(#define DevicePointerMotionHint\(d, type, class\))71.822
132 S 4.088({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _devicePointerMotionHint;})8.888
G -.356(#define DeviceButton1Motion\(d, type, class\))71.822 156 S 4.088
({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton1Motion;})8.888 G
-.356(#define DeviceButton2Motion\(d, type, class\))71.822 180 S 4.088
({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton2Motion;})8.888 G
-.356(#define DeviceButton3Motion\(d, type, class\))71.822 204 S 4.088
({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton3Motion;})8.888 G
-.356(#define DeviceButton4Motion\(d, type, class\))71.822 228 S 4.088
({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton4Motion;})8.888 G
-.356(#define DeviceButton5Motion\(d, type, class\))71.822 252 S 4.088
({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButton5Motion;})8.888 G
-.356(#define DeviceButtonMotion\(d, type, class\))71.822 276 S 4.088
({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButtonMotion;})8.888 G
-.356(#define DeviceOwnerGrabButton\(d, type, class\))71.822 300 S 4.088
({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceOwnerGrabButton;})8.888 G
-.356(#define DeviceButtonPressGrab\(d, type, class\))71.822 324 S 4.088
({c)22.22 G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _deviceButtonGrab;})8.888 G -.356
(#define NoExtensionEvent\(d, type, class\))71.822 348 S 4.088({c)22.22
G -.356(lass =)-4.444 G -.356
(\(\(XDevice *\) d\)->device_id << 8 | _noExtensionEvent;})8.888 G -.356
(#define BadDevice\(dpy, error\) _xibaddevice\(dpy, &error\))71.822 372
S -.356(#define BadClass\(dpy, error\) _xibadclass\(dpy, &error\))71.822
396 S -.356(#define BadEvent\(dpy, error\) _xibadevent\(dpy, &error\))
71.822 420 S -.356
(#define BadMode\(dpy, error\) _xibadmode\(dpy, &error\))71.822 444 S
-.356(#define DeviceBusy\(dpy, error\) _xidevicebusy\(dpy, &error\))
71.822 468 S -.356
(/***************************************************************)71.822
492 S(*)76.266 504 Q 4.088(*D)76.266 516 S -.356(eviceKey events.)-4.444
G -.356(These events are sent by input devices that)8.888 G 4.088(*s)
76.266 528 S -.356(upport input class Keys.)-4.444 G 4.088(*T)76.266 540
S -.356(he location of the X pointer is reported in the coordinate)
-4.444 G 4.088(*f)76.266 552 S -.356
(ields of the x,y and x_root,y_root fields.)-4.444 G(*)76.266 564 Q
-.356(*/)76.266 576 S -.356(typedef struct)71.822 600 S({)89.598 612 Q
48.884 -.356(int type;)89.598 624 T -.356(/* of event */)39.996 G -.356
(unsigned long)89.598 636 S 26.664 -.356(serial; /*)8.888 H 4.088(#o)
4.444 G 4.088(fl)-4.444 G -.356(ast request processed */)-4.444 G 44.44
-.356(Bool send_event;)89.598 648 T -.356
(/* true if from SendEvent request */)13.332 G 31.108 -.356
(Display *display;)89.598 660 T -.356
(/* Display the event was read from */)22.22 G 35.552 -.356
(Window window;)89.598 672 T -.356
(/* "event" window reported relative to */)31.108 G 48.884 -.356
(XID deviceid;)89.598 684 T 35.552 -.356(Window root; /*)89.598 696 T
-.356(root window event occured on */)4.444 G 35.552 -.356
(Window subwindow;)89.598 708 T -.356(/* child window */)17.776 G 44.44
-.356(Time time;)89.598 720 T -.356(/* milliseconds */)39.996 G F1(53)
282.5 768 Q EP
%%Page: 54 56
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 48.884 -.356(int x,)89.598 84 T 35.552 -.356(y; /*)4.444
H -.356(x, y coordinates in event window */)4.444 G 48.884 -.356
(int x_root;)89.598 96 T -.356(/* coordinates relative to root */)31.108
G 48.884 -.356(int y_root;)89.598 108 T -.356
(/* coordinates relative to root */)31.108 G -.356(unsigned int)89.598
120 S 31.108 -.356(state; /*)13.332 H -.356(key or button mask */)4.444
G -.356(unsigned int)89.598 132 S 22.22 -.356(keycode; /*)13.332 H -.356
(detail */)4.444 G 44.44 -.356(Bool same_screen;)89.598 144 T -.356
(/* same screen flag */)8.888 G -.356(unsigned int)89.598 156 S -.356
(device_state; /* device key or button mask */)13.332 G -.356
(unsigned char)89.598 168 S -.356(axes_count;)8.888 G -.356
(unsigned char)89.598 180 S -.356(first_axis;)8.888 G 48.884 -.356
(int axis_data[6];)89.598 192 T 4.088(}X)89.598 204 S -.356
(DeviceKeyEvent;)-4.444 G -.356
(typedef XDeviceKeyEvent XDeviceKeyPressedEvent;)71.822 228 S -.356
(typedef XDeviceKeyEvent XDeviceKeyReleasedEvent;)71.822 240 S -.356
(/*******************************************************************)
71.822 264 S(*)76.266 276 Q 4.088(*D)76.266 288 S -.356
(eviceButton events.)-4.444 G -.356
(These events are sent by extension devices)8.888 G 4.088(*t)76.266 300
S -.356(hat support input class Buttons.)-4.444 G(*)76.266 312 Q -.356
(*/)76.266 324 S -.356(typedef struct {)71.822 348 S 44.44 -.356
(int type;)89.598 360 T -.356(/* of event */)39.996 G -.356
(unsigned long serial;)89.598 372 S -.356
(/* # of last request processed by server */)31.108 G 39.996 -.356
(Bool send_event;)89.598 384 T -.356
(/* true if from a SendEvent request */)13.332 G 26.664 -.356
(Display *display;)89.598 396 T -.356
(/* Display the event was read from */)22.22 G 31.108 -.356
(Window window;)89.598 408 T -.356
(/* "event" window reported relative to */)31.108 G 44.44 -.356
(XID deviceid;)89.598 420 T 31.108 -.356(Window root;)89.598 432 T -.356
(/* root window that the event occured on */)39.996 G 31.108 -.356
(Window subwindow;)89.598 444 T -.356(/* child window */)17.776 G 39.996
-.356(Time time;)89.598 456 T -.356(/* milliseconds */)39.996 G 44.44
-.356(int x,)89.598 468 T 35.552 -.356(y; /*)4.444 H -.356
(x, y coordinates in event window */)4.444 G 44.44 -.356(int x_root;)
89.598 480 T -.356(/* coordinates relative to root */)31.108 G 44.44
-.356(int y_root;)89.598 492 T -.356(/* coordinates relative to root */)
31.108 G -.356(unsigned int)89.598 504 S 31.108 -.356(state; /*)8.888 H
-.356(key or button mask */)4.444 G -.356(unsigned int)89.598 516 S
26.664 -.356(button; /*)8.888 H -.356(detail */)4.444 G 39.996 -.356
(Bool same_screen;)89.598 528 T -.356(/* same screen flag */)8.888 G
-.356(unsigned int)89.598 540 S -.356
(device_state; /* device key or button mask */)8.888 G -.356
(unsigned char axes_count;)89.598 552 S -.356(unsigned char first_axis;)
89.598 564 S 44.44 -.356(int axis_data[6];)89.598 576 T 4.088(}X)89.598
588 S -.356(DeviceButtonEvent;)-4.444 G -.356
(typedef XDeviceButtonEvent XDeviceButtonPressedEvent;)71.822 612 S
-.356(typedef XDeviceButtonEvent XDeviceButtonReleasedEvent;)71.822 624
S -.356
(/*******************************************************************)
71.822 648 S(*)76.266 660 Q 4.088(*D)76.266 672 S -.356
(eviceMotionNotify event.)-4.444 G -.356
(These events are sent by extension devices)8.888 G 4.088(*t)76.266 684
S -.356(hat support input class Valuators.)-4.444 G(*)76.266 696 Q -.356
(*/)76.266 708 S F1(54)282.5 768 Q EP
%%Page: 55 57
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(typedef struct)71.822 84 S({)89.598 96 Q 44.44
-.356(int type;)89.598 108 T -.356(/* of event */)35.552 G -.356
(unsigned long serial;)89.598 120 S -.356
(/* # of last request processed by server */)26.664 G 39.996 -.356
(Bool send_event;)89.598 132 T -.356
(/* true if from a SendEvent request */)8.888 G 26.664 -.356
(Display *display;)89.598 144 T -.356
(/* Display the event was read from */)17.776 G 31.108 -.356
(Window window;)89.598 156 T -.356
(/* "event" window reported relative to */)26.664 G 44.44 -.356
(XID deviceid;)89.598 168 T 31.108 -.356(Window root; /*)89.598 180 T
-.356(root window that the event occured on */)4.444 G 31.108 -.356
(Window subwindow;)89.598 192 T -.356(/* child window */)13.332 G 39.996
-.356(Time time;)89.598 204 T -.356(/* milliseconds */)35.552 G 44.44
-.356(int x,)89.598 216 T 31.108 -.356(y; /*)4.444 H -.356
(x, y coordinates in event window */)4.444 G 44.44 -.356(int x_root;)
89.598 228 T -.356(/* coordinates relative to root */)26.664 G 44.44
-.356(int y_root;)89.598 240 T -.356(/* coordinates relative to root */)
26.664 G -.356(unsigned int)89.598 252 S 26.664 -.356(state; /*)8.888 H
-.356(key or button mask */)4.444 G 39.996 -.356(char is_hint;)89.598
264 T -.356(/* detail */)22.22 G 39.996 -.356(Bool same_screen;)89.598
276 T -.356(/* same screen flag */)4.444 G -.356(unsigned int)89.598 288
S -.356(device_state; /* device key or button mask */)8.888 G -.356
(unsigned char axes_count;)89.598 300 S -.356(unsigned char first_axis;)
89.598 312 S 44.44 -.356(int axis_data[6];)89.598 324 T 4.088(}X)89.598
336 S -.356(DeviceMotionEvent;)-4.444 G -.356
(/*******************************************************************)
71.822 360 S(*)76.266 372 Q 4.088(*D)76.266 384 S -.356
(eviceFocusChange events.)-4.444 G -.356
(These events are sent when the focus)8.888 G 4.088(*o)76.266 396 S
4.088(fa)-4.444 G 4.088(ne)-4.444 G -.356
(xtension device that can be focused is changed.)-4.444 G(*)76.266 408 Q
-.356(*/)76.266 420 S -.356(typedef struct)71.822 444 S({)89.598 456 Q
44.44 -.356(int type;)89.598 468 T -.356(/* of event */)31.108 G -.356
(unsigned long serial;)89.598 480 S -.356
(/* # of last request processed by server */)22.22 G 39.996 -.356
(Bool send_event;)89.598 492 T -.356
(/* true if from a SendEvent request */)4.444 G 26.664 -.356
(Display *display;)89.598 504 T -.356
(/* Display the event was read from */)13.332 G 31.108 -.356
(Window window;)89.598 516 T -.356
(/* "event" window reported relative to */)22.22 G 44.44 -.356
(XID deviceid;)89.598 528 T 44.44 -.356(int mode;)89.598 540 T -.356
(/* NotifyNormal, NotifyGrab, NotifyUngrab */)31.108 G 44.44 -.356
(int detail;)89.598 552 T -.356(/*)99.322 564 S 4.088(*N)103.766 576 S
-.356(otifyAncestor, NotifyVirtual, NotifyInferior,)-4.444 G 4.088(*N)
103.766 588 S -.356
(otifyNonLinear,NotifyNonLinearVirtual, NotifyPointer,)-4.444 G 4.088
(*N)103.766 600 S -.356(otifyPointerRoot, NotifyDetailNone)-4.444 G
-.356(*/)103.766 612 S 66.66 -.356(Time time;)89.598 624 T 4.088(}X)
89.598 636 S -.356(DeviceFocusChangeEvent;)-4.444 G -.356
(typedef XDeviceFocusChangeEvent XDeviceFocusInEvent;)71.822 660 S -.356
(typedef XDeviceFocusChangeEvent XDeviceFocusOutEvent;)71.822 672 S
-.356
(/*******************************************************************)
71.822 696 S(*)76.266 708 Q 4.088(*P)76.266 720 S -.356
(roximityNotify events.)-4.444 G -.356
(These events are sent by those absolute)8.888 G F1(55)282.5 768 Q EP
%%Page: 56 58
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 4.088(*p)76.266 84 S -.356(ositioning devices that are c\
apable of generating proximity information.)-4.444 G(*)76.266 96 Q -.356
(*/)76.266 108 S -.356(typedef struct)71.822 132 S({)89.598 144 Q 53.328
-.356(int type;)89.598 156 T -.356(/* ProximityIn or ProximityOut */)
26.664 G -.356(unsigned long)89.598 168 S 13.332 -.356(serial; /*)13.332
H 4.088(#o)4.444 G 4.088(fl)-4.444 G -.356
(ast request processed by server */)-4.444 G 48.884 -.356
(Bool send_event;)89.598 180 T -.356
(/* true if this came from a SendEvent request */)4.444 G 35.552 -.356
(Display *display;)89.598 192 T -.356
(/* Display the event was read from */)8.888 G 39.996 -.356
(Window window;)89.598 204 T 72.776 -.356(XID deviceid;)89.598 216 T
39.996 -.356(Window root;)89.598 228 T 39.996 -.356(Window subwindow;)
89.598 240 T 48.884 -.356(Time time;)89.598 252 T 53.328 -.356(int x,)
89.598 264 T -.356(y;)4.444 G 53.328 -.356(int x_root,)89.598 276 T
-.356(y_root;)4.444 G -.356(unsigned int)89.598 288 S -.356(state;)
17.776 G 48.884 -.356(Bool same_screen;)89.598 300 T -.356(unsigned int)
89.598 312 S -.356(device_state; /* device key or button mask */)17.776
G -.356(unsigned char)89.598 324 S -.356(axes_count;)13.332 G -.356
(unsigned char)89.598 336 S -.356(first_axis;)13.332 G 53.328 -.356
(int axis_data[6];)89.598 348 T 4.088(}X)89.598 360 S -.356
(ProximityNotifyEvent;)-4.444 G -.356
(typedef XProximityNotifyEvent XProximityInEvent;)71.822 372 S -.356
(typedef XProximityNotifyEvent XProximityOutEvent;)71.822 384 S -.356
(/*******************************************************************)
71.822 408 S(*)76.266 420 Q 4.088(*D)76.266 432 S -.356
(eviceStateNotify events are generated on EnterWindow and FocusIn)-4.444
G 4.088(*f)76.266 444 S -.356
(or those clients who have selected DeviceState.)-4.444 G(*)76.266 456 Q
-.356(*/)76.266 468 S -.356(typedef struct)71.822 492 S({)89.598 504 Q
-.356(unsigned char)89.598 516 S -.356(class;)6.952 G -.356
(unsigned char)89.598 528 S -.356(length;)6.952 G 4.088(}X)89.598 540 S
-.356(InputClass;)-4.444 G -.356(typedef struct {)71.822 564 S 44.44
-.356(int type;)89.598 576 T -.356(unsigned long serial;)89.598 588 S
-.356(/* # of last request processed by server */)31.108 G 39.996 -.356
(Bool send_event;)89.598 600 T -.356
(/* true if this came from a SendEvent request */)13.332 G 26.664 -.356
(Display *display;)89.598 612 T -.356
(/* Display the event was read from */)22.22 G 31.108 -.356
(Window window;)89.598 624 T 44.44 -.356(XID deviceid;)89.598 636 T
39.996 -.356(Time time;)89.598 648 T 44.44 -.356(int num_classes;)89.598
660 T 23.892 -.356(char data[64];)89.598 672 T 4.088(}X)71.822 684 S
-.356(DeviceStateNotifyEvent;)-4.444 G -.356(typedef struct {)71.822 708
S -.356(unsigned char)89.598 720 S -.356(class;)6.952 G F1(56)282.5 768
Q EP
%%Page: 57 59
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(unsigned char)89.598 84 S -.356(length;)6.952 G
-.356(unsigned char)89.598 96 S -.356(num_valuators;)6.952 G -.356
(unsigned char)89.598 108 S -.356(mode;)6.952 G 74.448 -.356
(int valuators[6];)89.598 120 T 4.088(}X)71.822 132 S -.356
(ValuatorStatus;)-4.444 G -.356(typedef struct {)71.822 156 S -.356
(unsigned char)89.598 168 S -.356(class;)6.952 G -.356(unsigned char)
89.598 180 S -.356(length;)6.952 G 38.06 -.356(short num_keys;)89.598
192 T 42.504 -.356(char keys[32];)89.598 204 T 4.088(}X)71.822 216 S
-.356(KeyStatus;)-4.444 G -.356(typedef struct {)71.822 240 S -.356
(unsigned char)89.598 252 S -.356(class;)6.952 G -.356(unsigned char)
89.598 264 S -.356(length;)6.952 G 38.06 -.356(short num_buttons;)89.598
276 T 42.504 -.356(char buttons[32];)89.598 288 T 4.088(}X)71.822 300 S
-.356(ButtonStatus;)-4.444 G -.356
(/*******************************************************************)
71.822 324 S(*)76.266 336 Q 4.088(*D)76.266 348 S -.356
(eviceMappingNotify event.)-4.444 G -.356
(This event is sent when the key mapping,)8.888 G 4.088(*m)76.266 360 S
-.356
(odifier mapping, or button mapping of an extension device is changed.)
-4.444 G(*)76.266 372 Q -.356(*/)76.266 384 S -.356(typedef struct {)
71.822 408 S 44.44 -.356(int type;)89.598 420 T -.356
(unsigned long serial;)89.598 432 S -.356
(/* # of last request processed by server */)31.108 G 39.996 -.356
(Bool send_event;)89.598 444 T -.356
(/* true if this came from a SendEvent request */)13.332 G 26.664 -.356
(Display *display;)89.598 456 T -.356
(/* Display the event was read from */)22.22 G 31.108 -.356
(Window window;)89.598 468 T -.356(/* unused */)31.108 G 44.44 -.356
(XID deviceid;)89.598 480 T 39.996 -.356(Time time;)89.598 492 T 44.44
-.356(int request;)89.598 504 T -.356
(/* one of MappingModifier, MappingKeyboard,)26.664 G -.356
(MappingPointer */)231.806 516 S 44.44 -.356(int first_keycode;/*)89.598
528 T -.356(first keycode */)4.444 G 44.44 -.356(int count;)89.598 540 T
-.356(/* defines range of change w. first_keycode*/)35.552 G 4.088(}X)
71.822 552 S -.356(DeviceMappingEvent;)-4.444 G -.356
(/*******************************************************************)
71.822 576 S(*)76.266 588 Q 4.088(*C)76.266 600 S -.356
(hangeDeviceNotify event.)-4.444 G -.356(This event is sent when an)
8.888 G 4.088(*X)76.266 612 S -.356
(ChangeKeyboard or XChangePointer request is made.)-4.444 G(*)76.266 624
Q -.356(*/)76.266 636 S -.356(typedef struct {)71.822 660 S 44.44 -.356
(int type;)89.598 672 T -.356(unsigned long serial;)89.598 684 S -.356
(/* # of last request processed by server */)31.108 G 39.996 -.356
(Bool send_event;)89.598 696 T -.356
(/* true if this came from a SendEvent request */)13.332 G 26.664 -.356
(Display *display;)89.598 708 T -.356
(/* Display the event was read from */)22.22 G 31.108 -.356
(Window window;)89.598 720 T -.356(/* unused */)31.108 G F1(57)282.5 768
Q EP
%%Page: 58 60
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 44.44 -.356(XID deviceid;)89.598 84 T 39.996 -.356
(Time time;)89.598 96 T 44.44 -.356(int request;)89.598 108 T -.356
(/* NewPointer or NewKeyboard */)26.664 G 4.088(}X)71.822 120 S -.356
(ChangeDeviceNotifyEvent;)-4.444 G -.356
(/*******************************************************************)
71.822 144 S(*)76.266 156 Q 4.088(*C)76.266 168 S -.356
(ontrol structures for input devices that support input class)-4.444 G
4.088(*F)76.266 180 S 4.444 -.356(eedback. These)-4.444 H -.356
(are used by the XGetFeedbackControl and)4.444 G 4.088(*X)76.266 192 S
-.356(ChangeFeedbackControl functions.)-4.444 G(*)76.266 204 Q -.356(*/)
76.266 216 S -.356(typedef struct {)71.822 240 S 48.884 -.356
(XID class;)94.042 252 T 48.884 -.356(int length;)94.042 264 T 48.884
-.356(XID id;)94.042 276 T 4.088(}X)71.822 288 S -.356(FeedbackState;)
-4.444 G -.356(typedef struct {)71.822 312 S 17.776 -.356(XID class;)
89.598 324 T 17.776 -.356(int length;)89.598 336 T 17.776 -.356(XID id;)
89.598 348 T 17.776 -.356(int click;)89.598 360 T 17.776 -.356
(int percent;)89.598 372 T 17.776 -.356(int pitch;)89.598 384 T 17.776
-.356(int duration;)89.598 396 T 17.776 -.356(int led_mask;)89.598 408 T
17.776 -.356(int global_auto_repeat;)89.598 420 T 13.332 -.356
(char auto_repeats[32];)89.598 432 T 4.088(}X)71.822 444 S -.356
(KbdFeedbackState;)-4.444 G -.356(typedef struct {)71.822 468 S 17.776
-.356(XID class;)89.598 480 T 17.776 -.356(int length;)89.598 492 T
17.776 -.356(XID id;)89.598 504 T 17.776 -.356(int accelNum;)89.598 516
T 17.776 -.356(int accelDenom;)89.598 528 T 17.776 -.356(int threshold;)
89.598 540 T 4.088(}X)71.822 552 S -.356(PtrFeedbackState;)-4.444 G
-.356(typedef struct {)71.822 576 S 17.776 -.356(XID class;)89.598 588 T
17.776 -.356(int length;)89.598 600 T 17.776 -.356(XID id;)89.598 612 T
17.776 -.356(int resolution;)89.598 624 T 17.776 -.356(int minVal;)
89.598 636 T 17.776 -.356(int maxVal;)89.598 648 T 4.088(}X)71.822 660 S
-.356(IntegerFeedbackState;)-4.444 G -.356(typedef struct {)71.822 684 S
17.776 -.356(XID class;)89.598 696 T 17.776 -.356(int length;)89.598 708
T 17.776 -.356(XID id;)89.598 720 T F1(58)282.5 768 Q EP
%%Page: 59 61
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 17.776 -.356(int max_symbols;)89.598 84 T 17.776 -.356
(int num_syms_supported;)89.598 96 T 4.444 -.356
(KeySym *syms_supported;)89.598 108 T 4.088(}X)71.822 120 S -.356
(StringFeedbackState;)-4.444 G -.356(typedef struct {)71.822 144 S
17.776 -.356(XID class;)89.598 156 T 17.776 -.356(int length;)89.598 168
T 17.776 -.356(XID id;)89.598 180 T 17.776 -.356(int percent;)89.598 192
T 17.776 -.356(int pitch;)89.598 204 T 17.776 -.356(int duration;)89.598
216 T 4.088(}X)71.822 228 S -.356(BellFeedbackState;)-4.444 G -.356
(typedef struct {)71.822 252 S 17.776 -.356(XID class;)89.598 264 T
17.776 -.356(int length;)89.598 276 T 17.776 -.356(XID id;)89.598 288 T
17.776 -.356(int led_values;)89.598 300 T 17.776 -.356(int led_mask;)
89.598 312 T 4.088(}X)71.822 324 S -.356(LedFeedbackState;)-4.444 G
-.356(typedef struct {)71.822 348 S 48.884 -.356(XID class;)94.042 360 T
48.884 -.356(int length;)94.042 372 T 32.78 -.356(XID id;)94.042 384 T
4.088(}X)71.822 396 S -.356(FeedbackControl;)-4.444 G -.356
(typedef struct {)71.822 420 S 17.776 -.356(XID class;)89.598 432 T
17.776 -.356(int length;)89.598 444 T 17.776 -.356(XID id;)89.598 456 T
17.776 -.356(int accelNum;)89.598 468 T 17.776 -.356(int accelDenom;)
89.598 480 T 17.776 -.356(int threshold;)89.598 492 T 4.088(}X)71.822
504 S -.356(PtrFeedbackControl;)-4.444 G -.356(typedef struct {)71.822
528 S 17.776 -.356(XID class;)89.598 540 T 17.776 -.356(int length;)
89.598 552 T 17.776 -.356(XID id;)89.598 564 T 17.776 -.356(int click;)
89.598 576 T 17.776 -.356(int percent;)89.598 588 T 17.776 -.356
(int pitch;)89.598 600 T 17.776 -.356(int duration;)89.598 612 T 17.776
-.356(int led_mask;)89.598 624 T 17.776 -.356(int led_value;)89.598 636
T 17.776 -.356(int key;)89.598 648 T 17.776 -.356(int auto_repeat_mode;)
89.598 660 T 4.088(}X)71.822 672 S -.356(KbdFeedbackControl;)-4.444 G
-.356(typedef struct {)71.822 696 S 17.776 -.356(XID class;)89.598 708 T
17.776 -.356(int length;)89.598 720 T F1(59)282.5 768 Q EP
%%Page: 60 62
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 17.776 -.356(XID id;)89.598 84 T 17.776 -.356
(int num_keysyms;)89.598 96 T 4.444 -.356(KeySym *syms_to_display;)
89.598 108 T 4.088(}X)71.822 120 S -.356(StringFeedbackControl;)-4.444 G
-.356(typedef struct {)71.822 144 S 17.776 -.356(XID class;)89.598 156 T
17.776 -.356(int length;)89.598 168 T 17.776 -.356(XID id;)89.598 180 T
17.776 -.356(int int_to_display;)89.598 192 T 4.088(}X)71.822 204 S
-.356(IntegerFeedbackControl;)-4.444 G -.356(typedef struct {)71.822 228
S 17.776 -.356(XID class;)89.598 240 T 17.776 -.356(int length;)89.598
252 T 17.776 -.356(XID id;)89.598 264 T 17.776 -.356(int percent;)89.598
276 T 17.776 -.356(int pitch;)89.598 288 T 17.776 -.356(int duration;)
89.598 300 T 4.088(}X)71.822 312 S -.356(BellFeedbackControl;)-4.444 G
-.356(typedef struct {)71.822 336 S 17.776 -.356(XID class;)89.598 348 T
17.776 -.356(int length;)89.598 360 T 17.776 -.356(XID id;)89.598 372 T
17.776 -.356(int led_mask;)89.598 384 T 17.776 -.356(int led_values;)
89.598 396 T 4.088(}X)71.822 408 S -.356(LedFeedbackControl;)-4.444 G
-.356
(/*******************************************************************)
71.822 432 S(*)76.266 444 Q 4.088(*D)76.266 456 S -.356
(evice control structures.)-4.444 G(*)76.266 468 Q -.356(*/)76.266 480 S
-.356(typedef struct {)71.822 504 S 48.884 -.356(XID control;)94.042 516
T 48.884 -.356(int length;)94.042 528 T 4.088(}X)71.822 540 S -.356
(DeviceControl;)-4.444 G -.356(typedef struct {)71.822 564 S 48.884
-.356(XID control;)94.042 576 T 48.884 -.356(int length;)94.042 588 T
48.884 -.356(int first_valuator;)94.042 600 T 48.884 -.356
(int num_valuators;)94.042 612 T 48.884 -.356(int *resolutions;)94.042
624 T 4.088(}X)71.822 636 S -.356(DeviceResolutionControl;)-4.444 G
-.356(typedef struct {)71.822 660 S 48.884 -.356(XID control;)94.042 672
T 48.884 -.356(int length;)94.042 684 T 48.884 -.356(int num_valuators;)
94.042 696 T 48.884 -.356(int *resolutions;)94.042 708 T 48.884 -.356
(int *min_resolutions;)94.042 720 T F1(60)282.5 768 Q EP
%%Page: 61 63
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 48.884 -.356(int *max_resolutions;)94.042 84 T 4.088(}X)
71.822 96 S -.356(DeviceResolutionState;)-4.444 G -.356
(/*******************************************************************)
71.822 120 S(*)76.266 132 Q 4.088(*A)76.266 144 S 4.088(na)-4.444 G
-.356(rray of XDeviceList structures is returned by the)-4.444 G 4.088
(*X)76.266 156 S -.356(ListInputDevices function.)-4.444 G -.356
(Each entry contains information)8.888 G 4.088(*a)76.266 168 S -.356
(bout one input device.)-4.444 G -.356
(Among that information is an array of)8.888 G 4.088(*p)76.266 180 S
-.356(ointers to structures that describe the characteristics of)-4.444
G 4.088(*t)76.266 192 S -.356(he input device.)-4.444 G(*)76.266 204 Q
-.356(*/)76.266 216 S -.356
(typedef struct _XAnyClassinfo *XAnyClassPtr;)71.822 240 S -.356
(typedef struct _XAnyClassinfo {)71.822 264 S 19.448 -.356(XID class;)
89.598 276 T 19.448 -.356(int length;)89.598 288 T 4.088(}X)89.598 300 S
-.356(AnyClassInfo;)-4.444 G -.356
(typedef struct _XDeviceInfo *XDeviceInfoPtr;)71.822 324 S -.356
(typedef struct _XDeviceInfo)71.822 348 S({)89.598 360 Q 71.104 -.356
(XID id;)89.598 372 T 66.66 -.356(Atom type;)89.598 384 T 66.66 -.356
(char *name;)89.598 396 T 71.104 -.356(int num_classes;)89.598 408 T
71.104 -.356(int use;)89.598 420 T 6.952 -.356
(XAnyClassPtr inputclassinfo;)89.598 432 T 4.088(}X)89.598 444 S -.356
(DeviceInfo;)-4.444 G -.356(typedef struct _XKeyInfo *XKeyInfoPtr;)
71.822 468 S -.356(typedef struct _XKeyInfo)71.822 492 S({)89.598 504 Q
74.448 -.356(XID class;)89.598 516 T 74.448 -.356(int length;)89.598 528
T -.356(unsigned short)89.598 540 S -.356(min_keycode;)26.664 G -.356
(unsigned short)89.598 552 S -.356(max_keycode;)26.664 G -.356
(unsigned short)89.598 564 S -.356(num_keys;)26.664 G 4.088(}X)89.598
576 S -.356(KeyInfo;)-4.444 G -.356
(typedef struct _XButtonInfo *XButtonInfoPtr;)71.822 600 S -.356
(typedef struct _XButtonInfo {)71.822 624 S 46.948 -.356(XID class;)
89.598 636 T 46.948 -.356(int length;)89.598 648 T 10.56 -.356
(short num_buttons;)89.598 660 T 4.088(}X)89.598 672 S -.356
(ButtonInfo;)-4.444 G -.356(typedef struct _XAxisInfo *XAxisInfoPtr;)
71.822 696 S -.356(typedef struct _XAxisInfo {)71.822 720 S F1(61)282.5
768 Q EP
%%Page: 62 64
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 19.448 -.356(int resolution;)89.598 84 T 19.448 -.356
(int min_value;)89.598 96 T 19.448 -.356(int max_value;)89.598 108 T
4.088(}X)89.598 120 S -.356(AxisInfo;)-4.444 G -.356
(typedef struct _XValuatorInfo *XValuatorInfoPtr;)71.822 144 S -.356
(typedef struct)71.822 168 S -.356(_XValuatorInfo)20.284 G({)89.598 180
Q 74.448 -.356(XID class;)89.598 192 T 74.448 -.356(int length;)89.598
204 T -.356(unsigned char)89.598 216 S -.356(num_axes;)31.108 G -.356
(unsigned char)89.598 228 S -.356(mode;)31.108 G -.356(unsigned long)
89.598 240 S -.356(motion_buffer;)31.108 G 31.108 -.356
(XAxisInfoPtr axes;)89.598 252 T 4.088(}X)89.598 264 S -.356
(ValuatorInfo;)-4.444 G -.356
(/*******************************************************************)
71.822 300 S(*)76.266 312 Q 4.088(*A)76.266 324 S 4.088(nX)-4.444 G
-.356(Device structure is returned by the XOpenDevice function.)-4.444 G
4.088(*I)76.266 336 S 4.088(tc)-4.444 G -.356
(ontains an array of pointers to XInputClassInfo structures.)-4.444 G
4.088(*E)76.266 348 S -.356
(ach contains information about a class of input supported by the)-4.444
G 4.088(*d)76.266 360 S -.356
(evice, including a pointer to an array of data for each type of event)
-4.444 G 4.088(*t)76.266 372 S -.356(he device reports.)-4.444 G(*)
76.266 384 Q -.356(*/)76.266 396 S -.356(typedef struct {)71.822 432 S
-.356(unsigned char)107.374 444 S -.356(input_class;)13.332 G -.356
(unsigned char)107.374 456 S -.356(event_type_base;)13.332 G 4.088(}X)
71.822 468 S -.356(InputClassInfo;)-4.444 G -.356(typedef struct {)
71.822 492 S 84.436 -.356(XID device_id;)107.374 504 T 84.436 -.356
(int num_classes;)107.374 516 T 31.108 -.356(XInputClassInfo *classes;)
107.374 528 T 4.088(}X)71.822 540 S -.356(Device;)-4.444 G -.356
(/*******************************************************************)
71.822 576 S(*)76.266 588 Q 4.088(*T)76.266 600 S -.356
(he following structure is used to return information for the)-4.444 G
4.088(*X)76.266 612 S -.356(GetSelectedExtensionEvents function.)-4.444
G(*)76.266 624 Q -.356(*/)76.266 636 S -.356(typedef struct {)71.822 660
S 17.776 -.356(XEventClass event_type;)107.374 672 T 53.328 -.356
(XID device;)107.374 684 T 4.088(}X)71.822 696 S -.356(EventList;)-4.444
G -.356
(/*******************************************************************)
71.822 720 S F1(62)282.5 768 Q EP
%%Page: 63 65
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF(*)76.266 84 Q 4.088(*T)76.266 96 S -.356
(he following structure is used to return motion history data from)
-4.444 G 4.088(*a)76.266 108 S 4.088(ni)-4.444 G -.356
(nput device that supports the input class Valuators.)-4.444 G 4.088(*T)
76.266 120 S -.356
(his information is returned by the XGetDeviceMotionEvents function.)
-4.444 G(*)76.266 132 Q -.356(*/)76.266 144 S -.356(typedef struct {)
71.822 168 S 8.888 -.356(Time time;)107.374 180 T 13.332 -.356
(int *data;)107.374 192 T 4.088(}X)71.822 204 S -.356(DeviceTimeCoord;)
-4.444 G -.356
(/*******************************************************************)
71.822 240 S(*)76.266 252 Q 4.088(*D)76.266 264 S -.356
(evice state structure.)-4.444 G 4.088(*T)76.266 276 S -.356
(his is returned by the XQueryDeviceState request.)-4.444 G(*)76.266 288
Q -.356(*/)76.266 300 S -.356(typedef struct {)71.822 324 S 29.172 -.356
(XID device_id;)107.374 336 T 29.172 -.356(int num_classes;)107.374 348
T 21.12 -.356(XInputClass *data;)107.374 360 T 4.088(}X)71.822 372 S
-.356(DeviceState;)-4.444 G -.356
(/*******************************************************************)
71.822 396 S(*)76.266 408 Q 4.088(*N)76.266 420 S -.356
(ote that the mode field is a bitfield that reports the Proximity)-4.444
G 4.088(*s)76.266 432 S -.356(tatus of the device as well as the mode.)
-4.444 G -.356(The mode field should)8.888 G 4.088(*b)76.266 444 S 4.088
(eO)-4.444 G -.356
(R'd with the mask DeviceMode and compared with the values)-4.444 G
4.088(*A)76.266 456 S -.356
(bsolute and Relative to determine the mode, and should be OR'd)-4.444 G
4.088(*w)76.266 468 S -.356
(ith the mask ProximityState and compared with the values InProximity)
-4.444 G 4.088(*a)76.266 480 S -.356
(nd OutOfProximity to determine the proximity state.)-4.444 G(*)76.266
492 Q -.356(*/)76.266 504 S -.356(typedef struct {)71.822 528 S -.356
(unsigned char)89.598 540 S -.356(class;)6.952 G -.356(unsigned char)
89.598 552 S -.356(length;)6.952 G -.356(unsigned char)89.598 564 S
-.356(num_valuators;)6.952 G -.356(unsigned char)89.598 576 S -.356
(mode;)6.952 G 74.448 -.356(int *valuators;)89.598 588 T 4.088(}X)71.822
600 S -.356(ValuatorState;)-4.444 G -.356(typedef struct {)71.822 624 S
-.356(unsigned char)89.598 636 S -.356(class;)6.952 G -.356
(unsigned char)89.598 648 S -.356(length;)6.952 G 38.06 -.356
(short num_keys;)89.598 660 T 42.504 -.356(char keys[32];)89.598 672 T
4.088(}X)71.822 684 S -.356(KeyState;)-4.444 G -.356(typedef struct {)
71.822 708 S -.356(unsigned char)89.598 720 S -.356(class;)6.952 G F1
(63)282.5 768 Q EP
%%Page: 64 66
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(unsigned char)89.598 84 S -.356(length;)6.952 G
38.06 -.356(short num_buttons;)89.598 96 T 42.504 -.356
(char buttons[32];)89.598 108 T 4.088(}X)71.822 120 S -.356
(ButtonState;)-4.444 G -.356
(/*******************************************************************)
71.822 144 S(*)76.266 156 Q 4.088(*F)76.266 168 S -.356
(unction definitions.)-4.444 G(*)76.266 180 Q -.356(*/)76.266 192 S
-.356(_XFUNCPROTOBEGIN)71.822 216 S -.356(extern int)71.822 240 S -.356
(XChangeKeyboardDevice\()10.56 G -.356(#if NeedFunctionPrototypes)71.822
252 S 24.728 -.356(Display* /*)89.598 264 T -.356(display */,)4.444 G
24.728 -.356(XDevice* /*)89.598 276 T -.356(device */)4.444 G -.356
(#endif)71.822 288 S -.356(\);)71.822 300 S -.356(extern int)71.822 324
S -.356(XChangePointerDevice\()10.56 G -.356(#if NeedFunctionPrototypes)
71.822 336 S 24.728 -.356(Display* /*)89.598 348 T -.356(display */,)
4.444 G 24.728 -.356(XDevice* /*)89.598 360 T -.356(device */,)4.444 G
74.448 -.356(int /*)89.598 372 T -.356(xaxis */,)4.444 G 74.448 -.356
(int /*)89.598 384 T -.356(yaxis */)4.444 G -.356(#endif)71.822 396 S
-.356(\);)71.822 408 S -.356(extern int)71.822 432 S -.356
(XGrabDevice\()10.56 G -.356(#if NeedFunctionPrototypes)71.822 444 S
24.728 -.356(Display* /*)89.598 456 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 468 T -.356(device */,)4.444 G 33.616 -.356
(Window /*)89.598 480 T -.356(grab_window */,)4.444 G 42.504 -.356
(Bool /*)89.598 492 T -.356(ownerEvents */,)4.444 G 74.448 -.356(int /*)
89.598 504 T -.356(event count */,)4.444 G 6.952 -.356(XEventClass* /*)
89.598 516 T -.356(event_list */,)4.444 G 74.448 -.356(int /*)89.598 528
T -.356(this_device_mode */,)4.444 G 74.448 -.356(int /*)89.598 540 T
-.356(other_devices_mode */,)4.444 G 42.504 -.356(Time /*)89.598 552 T
-.356(time */)4.444 G -.356(#endif)71.822 564 S -.356(\);)71.822 576 S
-.356(extern int)71.822 600 S -.356(XUngrabDevice\()10.56 G -.356
(#if NeedFunctionPrototypes)71.822 612 S 24.728 -.356(Display* /*)89.598
624 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 636 T
-.356(device */,)4.444 G 42.504 -.356(Time /*)89.598 648 T -.356
(time */)4.444 G -.356(#endif)71.822 660 S -.356(\);)71.822 672 S -.356
(extern int)71.822 696 S -.356(XGrabDeviceKey\()10.56 G -.356
(#if NeedFunctionPrototypes)71.822 708 S 24.728 -.356(Display* /*)89.598
720 T -.356(display */,)4.444 G F1(64)282.5 768 Q EP
%%Page: 65 67
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 24.728 -.356(XDevice* /*)89.598 84 T -.356(device */,)
4.444 G -.356(unsigned int)89.598 96 S -.356(/* key */,)11.396 G -.356
(unsigned int)89.598 108 S -.356(/* modifiers */,)11.396 G 24.728 -.356
(XDevice* /*)89.598 120 T -.356(modifier_device */,)4.444 G 33.616 -.356
(Window /*)89.598 132 T -.356(grab_window */,)4.444 G 42.504 -.356
(Bool /*)89.598 144 T -.356(owner_events */,)4.444 G -.356(unsigned int)
89.598 156 S -.356(/* event_count */,)11.396 G 6.952 -.356
(XEventClass* /*)89.598 168 T -.356(event_list */,)4.444 G 74.448 -.356
(int /*)89.598 180 T -.356(this_device_mode */,)4.444 G 74.448 -.356
(int /*)89.598 192 T -.356(other_devices_mode */)4.444 G -.356(#endif)
71.822 204 S -.356(\);)71.822 216 S -.356(extern int)71.822 240 S -.356
(XUngrabDeviceKey\()10.56 G -.356(#if NeedFunctionPrototypes)71.822 252
S 24.728 -.356(Display* /*)89.598 264 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 276 T -.356(device */,)4.444 G -.356
(unsigned int)89.598 288 S -.356(/* key */,)11.396 G -.356(unsigned int)
89.598 300 S -.356(/* modifiers */,)11.396 G 24.728 -.356(XDevice* /*)
89.598 312 T -.356(modifier_dev */,)4.444 G 33.616 -.356(Window /*)
89.598 324 T -.356(grab_window */)4.444 G -.356(#endif)71.822 336 S
-.356(\);)71.822 348 S -.356(extern int)71.822 372 S -.356
(XGrabDeviceButton\()10.56 G -.356(#if NeedFunctionPrototypes)71.822 384
S 24.728 -.356(Display* /*)89.598 396 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 408 T -.356(device */,)4.444 G -.356
(unsigned int)89.598 420 S -.356(/* button */,)11.396 G -.356
(unsigned int)89.598 432 S -.356(/* modifiers */,)11.396 G 24.728 -.356
(XDevice* /*)89.598 444 T -.356(modifier_device */,)4.444 G 33.616 -.356
(Window /*)89.598 456 T -.356(grab_window */,)4.444 G 42.504 -.356
(Bool /*)89.598 468 T -.356(owner_events */,)4.444 G -.356(unsigned int)
89.598 480 S -.356(/* event_count */,)11.396 G 6.952 -.356
(XEventClass* /*)89.598 492 T -.356(event_list */,)4.444 G 74.448 -.356
(int /*)89.598 504 T -.356(this_device_mode */,)4.444 G 74.448 -.356
(int /*)89.598 516 T -.356(other_devices_mode */)4.444 G -.356(#endif)
71.822 528 S -.356(\);)71.822 540 S -.356(extern int)71.822 564 S -.356
(XUngrabDeviceButton\()10.56 G -.356(#if NeedFunctionPrototypes)71.822
576 S 24.728 -.356(Display* /*)89.598 588 T -.356(display */,)4.444 G
24.728 -.356(XDevice* /*)89.598 600 T -.356(device */,)4.444 G -.356
(unsigned int)89.598 612 S -.356(/* button */,)11.396 G -.356
(unsigned int)89.598 624 S -.356(/* modifiers */,)11.396 G 24.728 -.356
(XDevice* /*)89.598 636 T -.356(modifier_dev */,)4.444 G 33.616 -.356
(Window /*)89.598 648 T -.356(grab_window */)4.444 G -.356(#endif)71.822
660 S -.356(\);)71.822 672 S -.356(extern int)71.822 696 S -.356
(XAllowDeviceEvents\()10.56 G -.356(#if NeedFunctionPrototypes)71.822
708 S 24.728 -.356(Display* /*)89.598 720 T -.356(display */,)4.444 G F1
(65)282.5 768 Q EP
%%Page: 66 68
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 24.728 -.356(XDevice* /*)89.598 84 T -.356(device */,)
4.444 G 74.448 -.356(int /*)89.598 96 T -.356(event_mode */,)4.444 G
42.504 -.356(Time /*)89.598 108 T -.356(time */)4.444 G -.356(#endif)
71.822 120 S -.356(\);)71.822 132 S -.356(extern int)71.822 156 S -.356
(XGetDeviceFocus\()10.56 G -.356(#if NeedFunctionPrototypes)71.822 168 S
24.728 -.356(Display* /*)89.598 180 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 192 T -.356(device */,)4.444 G 29.172 -.356
(Window* /*)89.598 204 T -.356(focus */,)4.444 G 42.504 -.356(int* /*)
89.598 216 T -.356(revert_to */,)4.444 G 38.06 -.356(Time* /*)89.598 228
T -.356(time */)4.444 G -.356(#endif)71.822 240 S -.356(\);)71.822 252 S
-.356(extern int)71.822 276 S -.356(XSetDeviceFocus\()10.56 G -.356
(#if NeedFunctionPrototypes)71.822 288 S 24.728 -.356(Display* /*)89.598
300 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 312 T
-.356(device */,)4.444 G 33.616 -.356(Window /*)89.598 324 T -.356
(focus */,)4.444 G 74.448 -.356(int /*)89.598 336 T -.356(revert_to */,)
4.444 G 42.504 -.356(Time /*)89.598 348 T -.356(time */)4.444 G -.356
(#endif)71.822 360 S -.356(\);)71.822 372 S -.356(extern XFeedbackState)
71.822 396 S -.356(*XGetFeedbackControl\()16.676 G -.356
(#if NeedFunctionPrototypes)71.822 408 S 24.728 -.356(Display* /*)89.598
420 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 432 T
-.356(device */,)4.444 G 42.504 -.356(int* /*)89.598 444 T -.356
(num_feedbacks */)4.444 G -.356(#endif)71.822 456 S -.356(\);)71.822 468
S -.356(extern int)71.822 492 S -.356(XFreeFeedbackList\()10.56 G -.356
(#if NeedFunctionPrototypes)71.822 504 S 21.12 -.356(XFeedbackState* /*)
89.598 516 T -.356(list */)4.444 G -.356(#endif)71.822 528 S -.356(\);)
71.822 540 S -.356(extern int)71.822 564 S -.356
(XChangeFeedbackControl\()10.56 G -.356(#if NeedFunctionPrototypes)
71.822 576 S 24.728 -.356(Display* /*)89.598 588 T -.356(display */,)
4.444 G 24.728 -.356(XDevice* /*)89.598 600 T -.356(device */,)4.444 G
-.356(unsigned long)89.598 612 S -.356(/* mask */,)6.952 G 12.232 -.356
(XFeedbackControl* /*)89.598 624 T 4.088(f*)4.444 G(/)-4.444 E -.356
(#endif)71.822 636 S -.356(\);)71.822 648 S -.356(extern int)71.822 672
S -.356(XDeviceBell\()10.56 G -.356(#if NeedFunctionPrototypes)71.822
684 S 24.728 -.356(Display* /*)89.598 696 T -.356(display */,)4.444 G
24.728 -.356(XDevice* /*)89.598 708 T -.356(device */,)4.444 G 74.448
-.356(XID /*)89.598 720 T -.356(feedbackclass */,)4.444 G F1(66)282.5
768 Q EP
%%Page: 67 69
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF 74.448 -.356(XID /*)89.598 84 T -.356(feedbackid */,)
4.444 G 74.448 -.356(int /*)89.598 96 T -.356(percent */)4.444 G -.356
(#endif)71.822 108 S -.356(\);)71.822 120 S -.356(extern KeySym)71.822
144 S -.356(*XGetDeviceKeyMapping\()24.728 G -.356
(#if NeedFunctionPrototypes)71.822 156 S 24.728 -.356(Display* /*)89.598
168 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 180 T
-.356(device */,)4.444 G -.356(#if NeedWidePrototypes)71.822 192 S -.356
(unsigned int)89.598 204 S -.356(/* first */,)11.396 G -.356(#else)
71.822 216 S 29.172 -.356(KeyCode /*)89.598 228 T -.356(first */,)4.444
G -.356(#endif)71.822 240 S 74.448 -.356(int /*)89.598 252 T -.356
(keycount */,)4.444 G 42.504 -.356(int* /*)89.598 264 T -.356
(syms_per_code */)4.444 G -.356(#endif)71.822 276 S -.356(\);)71.822 288
S -.356(extern int)71.822 312 S -.356(XChangeDeviceKeyMapping\()10.56 G
-.356(#if NeedFunctionPrototypes)71.822 324 S 24.728 -.356(Display* /*)
89.598 336 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598
348 T -.356(device */,)4.444 G 74.448 -.356(int /*)89.598 360 T -.356
(first */,)4.444 G 74.448 -.356(int /*)89.598 372 T -.356
(syms_per_code */,)4.444 G 29.172 -.356(KeySym* /*)89.598 384 T -.356
(keysyms */,)4.444 G 74.448 -.356(int /*)89.598 396 T -.356(count */)
4.444 G -.356(#endif)71.822 408 S -.356(\);)71.822 420 S -.356
(extern XModifierKeymap)71.822 444 S -.356(*XGetDeviceModifierMapping\()
12.232 G -.356(#if NeedFunctionPrototypes)71.822 456 S 24.728 -.356
(Display* /*)89.598 468 T -.356(display */,)4.444 G 24.728 -.356
(XDevice* /*)89.598 480 T -.356(device */)4.444 G -.356(#endif)71.822
492 S -.356(\);)71.822 504 S -.356(extern int)71.822 528 S -.356
(XSetDeviceModifierMapping\()10.56 G -.356(#if NeedFunctionPrototypes)
71.822 540 S 24.728 -.356(Display* /*)89.598 552 T -.356(display */,)
4.444 G 24.728 -.356(XDevice* /*)89.598 564 T -.356(device */,)4.444 G
16.676 -.356(XModifierKeymap* /*)89.598 576 T -.356(modmap */)4.444 G
-.356(#endif)71.822 588 S -.356(\);)71.822 600 S -.356(extern int)71.822
624 S -.356(XSetDeviceButtonMapping\()10.56 G -.356
(#if NeedFunctionPrototypes)71.822 636 S 24.728 -.356(Display* /*)89.598
648 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598 660 T
-.356(device */,)4.444 G -.356(unsigned char*)89.598 672 S -.356
(/* map[] */,)2.508 G 74.448 -.356(int /*)89.598 684 T -.356(nmap */)
4.444 G -.356(#endif)71.822 696 S -.356(\);)71.822 708 S F1(67)282.5 768
Q EP
%%Page: 68 70
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(extern int)71.822 84 S -.356
(XGetDeviceButtonMapping\()10.56 G -.356(#if NeedFunctionPrototypes)
71.822 96 S 24.728 -.356(Display* /*)89.598 108 T -.356(display */,)
4.444 G 24.728 -.356(XDevice* /*)89.598 120 T -.356(device */,)4.444 G
-.356(unsigned char*)89.598 132 S -.356(/* map[] */,)2.508 G -.356
(unsigned int)89.598 144 S -.356(/* nmap */)11.396 G -.356(#endif)71.822
156 S -.356(\);)71.822 168 S -.356(extern XDeviceState)71.822 192 S
-.356(*XQueryDeviceState\()25.564 G -.356(#if NeedFunctionPrototypes)
71.822 204 S 24.728 -.356(Display* /*)89.598 216 T -.356(display */,)
4.444 G 24.728 -.356(XDevice* /*)89.598 228 T -.356(device */)4.444 G
-.356(#endif)71.822 240 S -.356(\);)71.822 252 S -.356(extern int)71.822
276 S -.356(XFreeDeviceState\()10.56 G -.356(#if NeedFunctionPrototypes)
71.822 288 S 2.508 -.356(XDeviceState* /*)89.598 300 T -.356(list */)
4.444 G -.356(#endif)71.822 312 S -.356(\);)71.822 324 S -.356
(extern XExtensionVersion *XGetExtensionVersion\()71.822 348 S -.356
(#if NeedFunctionPrototypes)71.822 360 S 24.728 -.356(Display* /*)89.598
372 T -.356(display */,)4.444 G -.356(_Xconst char*)89.598 384 S -.356
(/* name */)6.952 G -.356(#endif)71.822 396 S -.356(\);)71.822 408 S
-.356(extern XDeviceInfo)71.822 432 S -.356(*XListInputDevices\()2.508 G
-.356(#if NeedFunctionPrototypes)71.822 444 S 24.728 -.356(Display* /*)
89.598 456 T -.356(display */,)4.444 G 42.504 -.356(int* /*)89.598 468 T
-.356(ndevices */)4.444 G -.356(#endif)71.822 480 S -.356(\);)71.822 492
S -.356(extern int)71.822 516 S -.356(XFreeDeviceList\()10.56 G -.356
(#if NeedFunctionPrototypes)71.822 528 S 6.952 -.356(XDeviceInfo* /*)
89.598 540 T -.356(list */)4.444 G -.356(#endif)71.822 552 S -.356(\);)
71.822 564 S -.356(extern XDevice)71.822 588 S -.356(*XOpenDevice\()
20.284 G -.356(#if NeedFunctionPrototypes)71.822 600 S 24.728 -.356
(Display* /*)89.598 612 T -.356(display */,)4.444 G 74.448 -.356(XID /*)
89.598 624 T -.356(id */)4.444 G -.356(#endif)71.822 636 S -.356(\);)
71.822 648 S -.356(extern int)71.822 672 S -.356(XCloseDevice\()10.56 G
-.356(#if NeedFunctionPrototypes)71.822 684 S 24.728 -.356(Display* /*)
89.598 696 T -.356(display */,)4.444 G 24.728 -.356(XDevice* /*)89.598
708 T -.356(device */)4.444 G -.356(#endif)71.822 720 S F1(68)282.5 768
Q EP
%%Page: 69 71
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(\);)71.822 84 S -.356(extern int)71.822 108 S -.356
(XSetDeviceMode\()10.56 G -.356(#if NeedFunctionPrototypes)71.822 120 S
24.728 -.356(Display* /*)89.598 132 T -.356(display */,)4.444 G 24.728
-.356(XDevice* /*)89.598 144 T -.356(device */,)4.444 G 74.448 -.356
(int /*)89.598 156 T -.356(mode */)4.444 G -.356(#endif)71.822 168 S
-.356(\);)71.822 180 S -.356(extern int)71.822 204 S -.356
(XSetDeviceValuators\()10.56 G -.356(#if NeedFunctionPrototypes)71.822
216 S 24.728 -.356(Display* /*)89.598 228 T -.356(display */,)4.444 G
24.728 -.356(XDevice* /*)89.598 240 T -.356(device */,)4.444 G 42.504
-.356(int* /*)89.598 252 T -.356(valuators */,)4.444 G 74.448 -.356
(int /*)89.598 264 T -.356(first_valuator */,)4.444 G 74.448 -.356
(int /*)89.598 276 T -.356(num_valuators */)4.444 G -.356(#endif)71.822
288 S -.356(\);)71.822 300 S -.356(extern XDeviceControl)71.822 324 S
-.356(*XGetDeviceControl\()16.676 G -.356(#if NeedFunctionPrototypes)
71.822 336 S 24.728 -.356(Display* /*)89.598 348 T -.356(display */,)
4.444 G 24.728 -.356(XDevice* /*)89.598 360 T -.356(device */,)4.444 G
74.448 -.356(int /*)89.598 372 T -.356(control */)4.444 G -.356(#endif)
71.822 384 S -.356(\);)71.822 396 S -.356(extern int)71.822 420 S -.356
(XChangeDeviceControl\()10.56 G -.356(#if NeedFunctionPrototypes)71.822
432 S 24.728 -.356(Display* /*)89.598 444 T -.356(display */,)4.444 G
24.728 -.356(XDevice* /*)89.598 456 T -.356(device */,)4.444 G 74.448
-.356(int /*)89.598 468 T -.356(control */,)4.444 G 21.12 -.356
(XDeviceControl* /*)89.598 480 T 4.088(d*)4.444 G(/)-4.444 E -.356
(#endif)71.822 492 S -.356(\);)71.822 504 S -.356(extern int)71.822 528
S -.356(XSelectExtensionEvent\()10.56 G -.356
(#if NeedFunctionPrototypes)71.822 540 S 24.728 -.356(Display* /*)89.598
552 T -.356(display */,)4.444 G 33.616 -.356(Window /*)89.598 564 T
4.088(w*)4.444 G -.356(/,)-4.444 G 6.952 -.356(XEventClass* /*)89.598
576 T -.356(event_list */,)4.444 G 74.448 -.356(int /*)89.598 588 T
-.356(count */)4.444 G -.356(#endif)71.822 600 S -.356(\);)71.822 612 S
-.356(extern int)71.822 636 S -.356(XGetSelectedExtensionEvents\()10.56
G -.356(#if NeedFunctionPrototypes)71.822 648 S 24.728 -.356
(Display* /*)89.598 660 T -.356(display */,)4.444 G 33.616 -.356
(Window /*)89.598 672 T 4.088(w*)4.444 G -.356(/,)-4.444 G 42.504 -.356
(int* /*)89.598 684 T -.356(this_client_count */,)4.444 G 2.508 -.356
(XEventClass** /*)89.598 696 T -.356(this_client_list */,)4.444 G 42.504
-.356(int* /*)89.598 708 T -.356(all_clients_count */,)4.444 G 2.508
-.356(XEventClass** /*)89.598 720 T -.356(all_clients_list */)4.444 G F1
(69)282.5 768 Q EP
%%Page: 70 72
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(#endif)71.822 84 S -.356(\);)71.822 96 S -.356
(extern int)71.822 120 S -.356(XChangeDeviceDontPropagateList\()10.56 G
-.356(#if NeedFunctionPrototypes)71.822 132 S 24.728 -.356(Display* /*)
89.598 144 T -.356(display */,)4.444 G 33.616 -.356(Window /*)89.598 156
T -.356(window */,)4.444 G 74.448 -.356(int /*)89.598 168 T -.356
(count */,)4.444 G 6.952 -.356(XEventClass* /*)89.598 180 T -.356
(events */,)4.444 G 74.448 -.356(int /*)89.598 192 T -.356(mode */)4.444
G -.356(#endif)71.822 204 S -.356(\);)71.822 216 S -.356
(extern XEventClass)71.822 240 S -.356(*XGetDeviceDontPropagateList\()
2.508 G -.356(#if NeedFunctionPrototypes)71.822 252 S 24.728 -.356
(Display* /*)89.598 264 T -.356(display */,)4.444 G 33.616 -.356
(Window /*)89.598 276 T -.356(window */,)4.444 G 42.504 -.356(int* /*)
89.598 288 T -.356(count */)4.444 G -.356(#endif)71.822 300 S -.356(\);)
71.822 312 S -.356(extern Status)71.822 336 S -.356
(XSendExtensionEvent\()24.728 G -.356(#if NeedFunctionPrototypes)71.822
348 S 24.728 -.356(Display* /*)89.598 360 T -.356(display */,)4.444 G
24.728 -.356(XDevice* /*)89.598 372 T -.356(device */,)4.444 G 33.616
-.356(Window /*)89.598 384 T -.356(dest */,)4.444 G 42.504 -.356
(Bool /*)89.598 396 T -.356(prop */,)4.444 G 74.448 -.356(int /*)89.598
408 T -.356(count */,)4.444 G 6.952 -.356(XEventClass* /*)89.598 420 T
-.356(list */,)4.444 G 29.172 -.356(XEvent* /*)89.598 432 T -.356
(event */)4.444 G -.356(#endif)71.822 444 S -.356(\);)71.822 456 S -.356
(extern XDeviceTimeCoord)71.822 480 S -.356(*XGetDeviceMotionEvents\()
7.788 G -.356(#if NeedFunctionPrototypes)71.822 492 S 24.728 -.356
(Display* /*)89.598 504 T -.356(display */,)4.444 G 24.728 -.356
(XDevice* /*)89.598 516 T -.356(device */,)4.444 G 42.504 -.356(Time /*)
89.598 528 T -.356(start */,)4.444 G 42.504 -.356(Time /*)89.598 540 T
-.356(stop */,)4.444 G 42.504 -.356(int* /*)89.598 552 T -.356
(nEvents */,)4.444 G 42.504 -.356(int* /*)89.598 564 T -.356(mode */,)
4.444 G 42.504 -.356(int* /*)89.598 576 T -.356(axis_count */)4.444 G
-.356(#endif)71.822 588 S -.356(\);)71.822 600 S -.356(extern int)71.822
624 S -.356(XFreeDeviceMotionEvents\()10.56 G -.356
(#if NeedFunctionPrototypes)71.822 636 S 12.232 -.356
(XDeviceTimeCoord* /*)89.598 648 T -.356(events */)4.444 G -.356(#endif)
71.822 660 S -.356(\);)71.822 672 S -.356(extern int)71.822 696 S -.356
(XFreeDeviceControl\()10.56 G -.356(#if NeedFunctionPrototypes)71.822
708 S 21.12 -.356(XDeviceControl* /*)89.598 720 T -.356(control */)4.444
G F1(70)282.5 768 Q EP
%%Page: 71 73
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(#endif)71.822 84 S -.356(\);)71.822 96 S -.356
(_XFUNCPROTOEND)71.822 120 S -.356(#endif /* _XINPUT_H_ */)71.822 144 S
-.356(/* Definitions used by the server, library and client */)71.822
168 S -.356(#ifndef _XI_H_)71.822 192 S -.356(#define _XI_H_)71.822 216
S -.356(#define sz_xGetExtensionVersionReq)71.822 240 S(8)41.404 E -.356
(#define sz_xGetExtensionVersionReply)71.822 252 S -.356(32)32.516 G
-.356(#define sz_xListInputDevicesReq)71.822 264 S(4)82.236 E -.356
(#define sz_xListInputDevicesReply)71.822 276 S -.356(32)45.848 G -.356
(#define sz_xOpenDeviceReq)71.822 288 S(8)81.4 E -.356
(#define sz_xOpenDeviceReply)71.822 300 S -.356(32)72.512 G -.356
(#define sz_xCloseDeviceReq)71.822 312 S(8)76.956 E -.356
(#define sz_xSetDeviceModeReq)71.822 324 S(8)68.068 E -.356
(#define sz_xSetDeviceModeReply)71.822 336 S -.356(32)59.18 G -.356
(#define sz_xSelectExtensionEventReq)71.822 348 S -.356(12)36.96 G -.356
(#define sz_xGetSelectedExtensionEventsReq)71.822 360 S(8)10.296 E -.356
(#define sz_xGetSelectedExtensionEventsReply)71.822 372 S -.356(32)1.408
G -.356(#define sz_xChangeDeviceDontPropagateListReq)71.822 384 S -.356
(12)24.464 G -.356(#define sz_xGetDeviceDontPropagateListReq)71.822 396
S(8)10.296 E -.356(#define sz_xGetDeviceDontPropagateListReply)71.822
408 S -.356(32)1.408 G -.356(#define sz_xGetDeviceMotionEventsReq)71.822
420 S -.356(16)32.516 G -.356(#define sz_xGetDeviceMotionEventsReply)
71.822 432 S -.356(32)51.128 G -.356
(#define sz_xChangeKeyboardDeviceReq)71.822 444 S(8)36.96 E -.356
(#define sz_xChangeKeyboardDeviceReply)71.822 456 S -.356(32)28.072 G
-.356(#define sz_xChangePointerDeviceReq)71.822 468 S(8)41.404 E -.356
(#define sz_xChangePointerDeviceReply)71.822 480 S -.356(32)32.516 G
-.356(#define sz_xGrabDeviceReq)71.822 492 S -.356(20)81.4 G -.356
(#define sz_xGrabDeviceReply)71.822 504 S -.356(32)72.512 G -.356
(#define sz_xUngrabDeviceReq)71.822 516 S -.356(12)72.512 G -.356
(#define sz_xGrabDeviceKeyReq)71.822 528 S -.356(20)68.068 G -.356
(#define sz_xGrabDeviceKeyReply)71.822 540 S -.356(32)59.18 G -.356
(#define sz_xUngrabDeviceKeyReq)71.822 552 S -.356(16)59.18 G -.356
(#define sz_xGrabDeviceButtonReq)71.822 564 S -.356(20)82.236 G -.356
(#define sz_xGrabDeviceButtonReply)71.822 576 S -.356(32)45.848 G -.356
(#define sz_xUngrabDeviceButtonReq)71.822 588 S -.356(16)45.848 G -.356
(#define sz_xAllowDeviceEventsReq)71.822 600 S -.356(12)50.292 G -.356
(#define sz_xGetDeviceFocusReq)71.822 612 S(8)63.624 E -.356
(#define sz_xGetDeviceFocusReply)71.822 624 S -.356(32)82.236 G -.356
(#define sz_xSetDeviceFocusReq)71.822 636 S -.356(16)63.624 G -.356
(#define sz_xGetFeedbackControlReq)71.822 648 S(8)45.848 E -.356
(#define sz_xGetFeedbackControlReply)71.822 660 S -.356(32)36.96 G -.356
(#define sz_xChangeFeedbackControlReq)71.822 672 S -.356(12)32.516 G
-.356(#define sz_xGetDeviceKeyMappingReq)71.822 684 S(8)41.404 E -.356
(#define sz_xGetDeviceKeyMappingReply)71.822 696 S -.356(32)32.516 G
-.356(#define sz_xChangeDeviceKeyMappingReq)71.822 708 S(8)28.072 E
-.356(#define sz_xGetDeviceModifierMappingReq)71.822 720 S(8)46.684 E F1
(71)282.5 768 Q EP
%%Page: 72 74
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(#define sz_xSetDeviceModifierMappingReq)71.822 84 S
(8)46.684 E -.356(#define sz_xSetDeviceModifierMappingReply)71.822 96 S
-.356(32)10.296 G -.356(#define sz_xGetDeviceButtonMappingReq)71.822 108
S(8)28.072 E -.356(#define sz_xGetDeviceButtonMappingReply)71.822 120 S
-.356(32)46.684 G -.356(#define sz_xSetDeviceButtonMappingReq)71.822 132
S(8)28.072 E -.356(#define sz_xSetDeviceButtonMappingReply)71.822 144 S
-.356(32)46.684 G -.356(#define sz_xQueryDeviceStateReq)71.822 156 S(8)
82.236 E -.356(#define sz_xQueryDeviceStateReply)71.822 168 S -.356(32)
45.848 G -.356(#define sz_xSendExtensionEventReq)71.822 180 S -.356(16)
45.848 G -.356(#define sz_xDeviceBellReq)71.822 192 S(8)81.4 E -.356
(#define sz_xSetDeviceValuatorsReq)71.822 204 S(8)45.848 E -.356
(#define sz_xSetDeviceValuatorsReply)71.822 216 S -.356(32)36.96 G -.356
(#define sz_xGetDeviceControlReq)71.822 228 S(8)82.236 E -.356
(#define sz_xGetDeviceControlReply)71.822 240 S -.356(32)45.848 G -.356
(#define sz_xChangeDeviceControlReq)71.822 252 S(8)41.404 E -.356
(#define sz_xChangeDeviceControlReply)71.822 264 S -.356(32)32.516 G
-.356(#define INAME)71.822 288 S -.356("XInputExtension")79.728 G -.356
(#define XI_KEYBOARD)71.822 312 S -.356("KEYBOARD")25.564 G -.356
(#define XI_MOUSE)71.822 324 S -.356("MOUSE")11.396 G -.356
(#define XI_TABLET)71.822 336 S -.356("TABLET")6.952 G -.356
(#define XI_TOUCHSCREEN)71.822 348 S -.356("TOUCHSCREEN")12.232 G -.356
(#define XI_TOUCHPAD)71.822 360 S -.356("TOUCHPAD")25.564 G -.356
(#define XI_BARCODE)71.822 372 S -.356("BARCODE")2.508 G -.356
(#define XI_BUTTONBOX)71.822 384 S -.356("BUTTONBOX")21.12 G -.356
(#define XI_KNOB_BOX)71.822 396 S -.356("KNOB_BOX")25.564 G -.356
(#define XI_ONE_KNOB)71.822 408 S -.356("ONE_KNOB")25.564 G -.356
(#define XI_NINE_KNOB)71.822 420 S -.356("NINE_KNOB")21.12 G -.356
(#define XI_TRACKBALL)71.822 432 S -.356("TRACKBALL")21.12 G -.356
(#define XI_QUADRATURE)71.822 444 S -.356("QUADRATURE")16.676 G -.356
(#define XI_ID_MODULE)71.822 456 S -.356("ID_MODULE")21.12 G -.356
(#define XI_SPACEBALL)71.822 468 S -.356("SPACEBALL")21.12 G -.356
(#define XI_DATAGLOVE)71.822 480 S -.356("DATAGLOVE")21.12 G -.356
(#define XI_EYETRACKER)71.822 492 S -.356("EYETRACKER")16.676 G -.356
(#define XI_CURSORKEYS)71.822 504 S -.356("CURSORKEYS")16.676 G -.356
(#define XI_FOOTMOUSE)71.822 516 S -.356("FOOTMOUSE")21.12 G -.356
(#define Dont_Check)71.822 540 S(0)57.508 E -.356
(#define XInput_Initial_Release)71.822 552 S(1)31.68 E -.356
(#define XInput_Add_XDeviceBell)71.822 564 S(2)31.68 E -.356
(#define XInput_Add_XSetDeviceValuators)71.822 576 S(3)23.628 E -.356
(#define XInput_Add_XChangeDeviceControl)71.822 588 S(4)19.184 E -.356
(#define XI_Absent)71.822 612 S(0)34.452 E -.356(#define XI_Present)
71.822 624 S(1)30.008 E -.356(#define XI_Initial_Release_Major)71.822
648 S(1)50.292 E -.356(#define XI_Initial_Release_Minor)71.822 660 S(0)
50.292 E -.356(#define XI_Add_XDeviceBell_Major)71.822 684 S(1)50.292 E
-.356(#define XI_Add_XDeviceBell_Minor)71.822 696 S(1)50.292 E -.356
(#define XI_Add_XSetDeviceValuators_Major)71.822 720 S(1)14.74 E F1(72)
282.5 768 Q EP
%%Page: 73 75
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(#define XI_Add_XSetDeviceValuators_Minor)71.822 84
S(2)14.74 E -.356(#define XI_Add_XChangeDeviceControl_Major)71.822 108 S
(1)10.296 E -.356(#define XI_Add_XChangeDeviceControl_Minor)71.822 120 S
(3)10.296 E -.356(#define DEVICE_RESOLUTION)71.822 144 S(1)26.4 E -.356
(#define NoSuchExtension)71.822 168 S(1)35.288 E -.356(#define COUNT)
71.822 192 S(0)79.728 E -.356(#define CREATE)71.822 204 S(1)75.284 E
-.356(#define NewPointer)71.822 228 S(0)30.008 E -.356
(#define NewKeyboard)71.822 240 S(1)53.064 E -.356(#define XPOINTER)
71.822 264 S(0)38.896 E -.356(#define XKEYBOARD)71.822 276 S(1)34.452 E
-.356(#define UseXKeyboard)71.822 300 S -.356(0xFF)48.62 G -.356
(#define IsXPointer)71.822 324 S(0)30.008 E -.356(#define IsXKeyboard)
71.822 336 S(1)53.064 E -.356(#define IsXExtensionDevice)71.822 348 S(2)
21.956 E -.356(#define AsyncThisDevice)71.822 372 S(0)35.288 E -.356
(#define SyncThisDevice)71.822 384 S(1)39.732 E -.356
(#define ReplayThisDevice)71.822 396 S(2)3.344 E -.356
(#define AsyncOtherDevices)71.822 408 S(3)26.4 E -.356(#define AsyncAll)
71.822 420 S(4)38.896 E -.356(#define SyncAll)71.822 432 S(5)70.84 E
-.356(#define FollowKeyboard)71.822 456 S(3)39.732 E -.356
(#define RevertToFollowKeyboard)71.822 468 S(3)31.68 E -.356
(#define DvAccelNum)71.822 492 S -.356(\(1L << 0\))62.216 G -.356
(#define DvAccelDenom)71.822 504 S -.356(\(1L << 1\))53.328 G -.356
(#define DvThreshold)71.822 516 S -.356(\(1L << 2\))57.772 G -.356
(#define DvKeyClickPercent)71.822 540 S -.356(\(1L<<0\))26.4 G -.356
(#define DvPercent)71.822 552 S -.356(\(1L<<1\))34.452 G -.356
(#define DvPitch)71.822 564 S -.356(\(1L<<2\))70.84 G -.356
(#define DvDuration)71.822 576 S -.356(\(1L<<3\))30.008 G -.356
(#define DvLed)71.822 588 S -.356(\(1L<<4\))79.728 G -.356
(#define DvLedMode)71.822 600 S -.356(\(1L<<5\))34.452 G -.356
(#define DvKey)71.822 612 S -.356(\(1L<<6\))79.728 G -.356
(#define DvAutoRepeatMode)71.822 624 S -.356(\(1L<<7\))3.344 G -.356
(#define DvString)71.822 648 S -.356(\(1L << 0\))71.104 G -.356
(#define DvInteger)71.822 672 S -.356(\(1L << 0\))66.66 G -.356
(#define DeviceMode)71.822 696 S -.356(\(1L << 0\))62.216 G -.356
(#define Relative)71.822 708 S(0)71.104 E -.356(#define Absolute)71.822
720 S(1)71.104 E F1(73)282.5 768 Q EP
%%Page: 74 76
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
8/Courier@0 SF -.356(#define ProximityState)71.822 84 S -.356
(\(1L << 1\))44.44 G -.356(#define InProximity)71.822 96 S -.356
(\(0L << 1\))57.772 G -.356(#define OutOfProximity)71.822 108 S -.356
(\(1L << 1\))44.44 G -.356(#define AddToList)71.822 132 S(0)66.66 E
-.356(#define DeleteFromList)71.822 144 S(1)44.44 E -.356
(#define KeyClass)71.822 168 S(0)38.896 E -.356(#define ButtonClass)
71.822 180 S(1)53.064 E -.356(#define ValuatorClass)71.822 192 S(2)
44.176 E -.356(#define FeedbackClass)71.822 204 S(3)44.176 E -.356
(#define ProximityClass)71.822 216 S(4)12.232 E -.356
(#define FocusClass)71.822 228 S(5)57.508 E -.356(#define OtherClass)
71.822 240 S(6)57.508 E -.356(#define KbdFeedbackClass)71.822 264 S(0)
30.844 E -.356(#define PtrFeedbackClass)71.822 276 S(1)30.844 E -.356
(#define StringFeedbackClass)71.822 288 S(2)17.512 E -.356
(#define IntegerFeedbackClass)71.822 300 S(3)13.068 E -.356
(#define LedFeedbackClass)71.822 312 S(4)30.844 E -.356
(#define BellFeedbackClass)71.822 324 S(5)26.4 E -.356
(#define _devicePointerMotionHint 0)71.822 348 S -.356
(#define _deviceButton1Motion)71.822 360 S(1)17.512 E -.356
(#define _deviceButton2Motion)71.822 372 S(2)17.512 E -.356
(#define _deviceButton3Motion)71.822 384 S(3)17.512 E -.356
(#define _deviceButton4Motion)71.822 396 S(4)17.512 E -.356
(#define _deviceButton5Motion)71.822 408 S(5)17.512 E -.356
(#define _deviceButtonMotion)71.822 420 S(6)21.956 E -.356
(#define _deviceButtonGrab)71.822 432 S(7)30.844 E -.356
(#define _deviceOwnerGrabButton)71.822 444 S(8)8.624 E -.356
(#define _noExtensionEvent)71.822 456 S(9)30.844 E -.356
(#define XI_BadDevice)71.822 480 S(0)21.12 E -.356(#define XI_BadEvent)
71.822 492 S(1)25.564 E -.356(#define XI_BadMode)71.822 504 S(2)2.508 E
-.356(#define XI_DeviceBusy)71.822 516 S(3)16.676 E -.356
(#define XI_BadClass)71.822 528 S(4)25.564 E 19.448 -.356
(typedef unsigned)71.822 552 T 20.284 -.356(long XEventClass;)4.444 H
-.356
(/*******************************************************************)
71.822 576 S(*)76.266 588 Q 4.088(*E)76.266 600 S -.356
(xtension version structure.)-4.444 G(*)76.266 612 Q -.356(*/)76.266 624
S -.356(typedef struct {)71.822 648 S 29.172 -.356(int present;)107.374
660 T 20.284 -.356(short major_version;)107.374 672 T 20.284 -.356
(short minor_version;)107.374 684 T 4.088(}X)71.822 696 S -.356
(ExtensionVersion;)-4.444 G -.356(#endif /* _XI_H_ */)71.822 720 S F1
(74)282.5 768 Q EP
%%Page: 75 77
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E
(75)282.5 768 Q EP
%%Page: 1 78
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 13/Times-Bold@0 SF -1.196
(Ta)239.127 120 S(ble of Contents)1.196 E/F2 11/Times-Roman@0 SF
(1. Input Extension Ov)72 171.6 Q(ervie)-.165 E 2.846(w.)-.275 G 19.25(\
.......................................................................\
............................ 1)-2.846 F(1.1. Design Approach)72 187.2 Q
19.25(.................................................................\
............................................. 1)5.464 F
(1.2. Core Input De)72 202.8 Q .239(vices .............................\
.......................................................................\
........)-.275 F(1)22 E(1.3. Extension Input De)72 218.4 Q 2.373(vices \
.......................................................................\
............................)-.275 F(1)22 E(1.3.1. Input De)72 234 Q
(vice Classes)-.275 E 19.25(...........................................\
........................................................... 2)3.902 F
(1.4. Using Extension Input De)72 249.6 Q .844(vices ..................\
.......................................................................)
-.275 F(2)22 E(2. Library Extension Requests)72 265.2 Q 19.25(.........\
.......................................................................\
................. 3)4.54 F(2.1. W)72 280.8 Q(indo)-.44 E 2.75(wM)-.275 G
(anager Functions)-2.75 E 19.25(.......................................\
...................................................... 3)4.342 F
(2.1.1. Changing the Core De)72 296.4 Q .239(vices ....................\
.......................................................................\
.)-.275 F(3)22 E(2.1.2. Ev)72 312 Q(ent Synchronization and Core Grabs)
-.165 E 19.25(.........................................................\
................ 5)4.111 F(2.1.3. Extension Acti)72 327.6 Q .33 -.165
(ve G)-.275 H .096(rabs ...............................................\
...................................................).165 F(5)22 E
(2.1.4. P)72 343.2 Q(assi)-.165 E -.165(ve)-.275 G(ly Grabbing a K).165
E 2.56 -.165(ey .)-.275 H 19.25(.......................................\
...................................................... 7).165 F
(2.1.5. P)72 358.8 Q(assi)-.165 E -.165(ve)-.275 G(ly Grabbing a Button)
.165 E 13.75(..........................................................\
................................ 10)3.913 F(2.1.6. Tha)72 374.4 Q
(wing a De)-.165 E 2.549(vice .........................................\
.................................................................)-.275
F(12)16.5 E(2.1.7. Controlling De)72 390 Q(vice F)-.275 E 2.527(ocus ..\
.......................................................................\
.....................)-.165 F(14)16.5 E(2.1.8. Controlling De)72 405.6 Q
(vice Feedback)-.275 E 13.75(..........................................\
............................................... 16)2.989 F
(2.1.9. Ringing a Bell on an Input De)72 421.2 Q .844(vice ............\
.....................................................................)
-.275 F(23)16.5 E(2.1.10. Controlling De)72 436.8 Q(vice Encoding)-.275
E 13.75(...............................................................\
........................ 24)2.978 F(2.1.11. Controlling Button Mapping)
72 452.4 Q 13.75(......................................................\
.................................. 26)3.594 F
(2.1.12. Obtaining the State of a De)72 468 Q 2.384(vice ..............\
.....................................................................)
-.275 F(27)16.5 E(2.2. Ev)72 483.6 Q .723(ents ........................\
.......................................................................\
.................................)-.165 F(29)16.5 E(2.2.1. Ev)72 499.2 Q
(ent T)-.165 E .998(ypes ..............................................\
......................................................................)
-.88 F(29)16.5 E(2.2.2. Ev)72 514.8 Q(ent Classes)-.165 E 13.75(.......\
.......................................................................\
................................... 30)5.002 F(2.2.3. Ev)72 530.4 Q
(ent Structures)-.165 E 13.75(.........................................\
.................................................................... 31)
4.397 F(2.2.3.1. De)72 546 Q(vice K)-.275 E .33 -.165(ey E)-.275 H -.165
(ve).165 G 1.46(nts ...................................................\
...................................................).165 F(31)16.5 E
(2.2.3.2. De)72 561.6 Q(vice Button Ev)-.275 E .393(ents ..............\
.......................................................................\
.............)-.165 F(32)16.5 E(2.2.3.3. De)72 577.2 Q(vice Motion Ev)
-.275 E .701(ents .....................................................\
............................................)-.165 F(33)16.5 E
(2.2.3.4. De)72 592.8 Q(vice F)-.275 E(ocus Ev)-.165 E 1.482(ents .....\
.......................................................................\
.......................)-.165 F(34)16.5 E(2.2.3.5. De)72 608.4 Q
(vice StateNotify Ev)-.275 E .404(ent .................................\
...........................................................)-.165 F(35)
16.5 E(2.2.3.6. De)72 624 Q(vice Mapping Ev)-.275 E .404(ent ..........\
.......................................................................\
...............)-.165 F(36)16.5 E(2.2.3.7. ChangeDe)72 639.6 Q
(viceNotify Ev)-.275 E 2.549(ent ......................................\
..................................................)-.165 F(36)16.5 E
(2.2.3.8. Proximity Ev)72 655.2 Q .712(ents ...........................\
.......................................................................\
.......)-.165 F(36)16.5 E(2.3. Ev)72 670.8 Q(ent Handling Functions)
-.165 E 13.75(.........................................................\
........................................ 37)3.165 F
(2.3.1. Determining the Extension V)72 686.4 Q 2.098(ersion ...........\
....................................................................)
-1.221 F(37)16.5 E(2.3.2. Listing A)72 702 Q -.275(va)-.814 G(ilable De)
.275 E 2.241(vices ....................................................\
..........................................)-.275 F(38)16.5 E
(2.3.3. Enabling and Disabling Extension De)72 717.6 Q 1.46(vices .....\
..............................................................)-.275 F
(40)16.5 E/F3 11/Times-Bold@0 SF(i)286.471 768 Q EP
%%Page: 2 79
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 531.38(-- --)0 4 R/F1 11/Times-Bold@0 SF 2.75
(XI)72 52 S(nput Extension Library)-2.75 E(X11, Release 6.4)229.413 E/F2
11/Times-Roman@0 SF(2.3.4. Changing the Mode of a De)72 84 Q 2.692(vice\
 ......................................................................\
..............)-.275 F(41)16.5 E(2.3.5. Initializing V)72 99.6 Q
(aluators on an Input De)-1.221 E 2.692(vice ..........................\
............................................)-.275 F(42)16.5 E
(2.3.6. Getting Input De)72 115.2 Q(vice Controls)-.275 E 13.75(.......\
.......................................................................\
......... 43)4.507 F(2.3.7. Changing Input De)72 130.8 Q(vice Controls)
-.275 E 13.75(.........................................................\
........................... 44)2.978 F(2.3.8. Selecting Extension De)72
146.4 Q(vice Ev)-.275 E .404(ents .....................................\
...........................................)-.165 F(45)16.5 E
(2.3.9. Determining Selected De)72 162 Q(vice Ev)-.275 E .723(ents ....\
.......................................................................\
..)-.165 F(46)16.5 E(2.3.10. Controlling Ev)72 177.6 Q(ent Propag)-.165
E .162(ation ..........................................................\
...........................)-.055 F(47)16.5 E(2.3.11. Sending an Ev)72
193.2 Q 2.56(ent ......................................................\
...................................................)-.165 F(48)16.5 E
(2.3.12. Getting Motion History)72 208.8 Q 13.75(......................\
.......................................................................\
... 49)3.605 F(2.3.12. Appendix A)222.462 224.4 Q 13.75(...............\
............................................................... 51)262
236.4 R F1(ii)284.942 768 Q F0 531.38(-- --)0 795 R EP
%%Trailer
end
%%EOF
