; include dt-actor.ss first

(define (dt-make-draggable object)
  (define grabbed-by-touch #f)
  (define ax-minus-gx #f)  ; anchor x coordinate minus grab x coordinate
  (define ay-minus-gy #f)  ; anchor y coordinate minus grab y coordinate
  (define orig-z #f)
  (define (grab touch)
;   (when (not grabbed-by-touch)
    (send (get-top-group object) raise)
    (set! grabbed-by-touch (dt-touch-id touch))
    (let* ((pos (send (get-top-group object) position)))
      (set! ax-minus-gx (- (first pos) (dt-x touch)))
      (set! ay-minus-gy (- (second pos) (dt-y touch)))
      (set! orig-z (third pos))))
  (define (drag old-touch new-touch)
    (when (equal? grabbed-by-touch (dt-touch-id old-touch))
      (let* ((zfac (/ (send (get-top-group object) z) orig-z))
             (new-x (+ (dt-x new-touch) (* zfac ax-minus-gx)))
             (new-y (+ (dt-y new-touch) (* zfac ay-minus-gy))))
        (send (get-top-group object) xy new-x new-y))))
  (define (release touch)
    (when (equal? grabbed-by-touch (dt-touch-id touch))
      (set! grabbed-by-touch #f)))
  (define drag-actor (make-object dt-actor%))
  (send drag-actor down-function grab)
  (send drag-actor move-function drag)
  (send drag-actor up-function release)
  (send drag-actor attach-to object))
