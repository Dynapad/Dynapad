AC_PREREQ([2.69])
AC_INIT([Pad++], [0.9p5])
AC_CONFIG_SRCDIR([../pad.in])
AM_INIT_AUTOMAKE

AC_PROG_CXX

#--------------------------------------------------------------------
#    Manually turn off cache
#--------------------------------------------------------------------
cache_file="/dev/null"

#--------------------------------------------------------------------
#    Define some basic subdirectory locations
#--------------------------------------------------------------------
SRC=.
KPL=../kpl
AC_SUBST(SRC)
AC_SUBST(KPL)

#--------------------------------------------------------------------
#    Set up config.h header file
#--------------------------------------------------------------------
AC_CONFIG_HEADER(config.h)

#--------------------------------------------------------------------
#    Find home directory
#--------------------------------------------------------------------
PADHOME=`cd ..; pwd`
AC_SUBST(PADHOME)

#--------------------------------------------------------------------
#    Check for uname
#--------------------------------------------------------------------
AC_CHECK_PROG(UNAME, uname, uname, none)
if test $UNAME = "none"; then
	AC_MSG_ERROR(uname not found)
fi

#--------------------------------------------------------------------
#       Calculate the system architecture.  Special test to
#       distinguish RS6000-based AIX systems from other AIX systems.
#--------------------------------------------------------------------
AS_MESSAGE([checking machine architecture...])
CPU=`uname -m | tr ' /' '_-'`
OS=`uname -s | tr ' /' '_-'`
if test "$OS" = "SunOS"; then
    OSRELEASE=`uname -r`
    if test $OSRELEASE -ge 5.0; then
	OS="Solaris"
    fi
fi
if test "$OS" = "AIX"; then
    CPU=$HOSTTYPE
fi
if test "$OS" = "IRIX" -o "$OS" = "IRIX64"; then
    CPU=MIPS
    OS=IRIX
fi
if expr "$OS" : "CYGWIN.*" >/dev/null; then
    OS=CYGWIN
fi
ARCH="bin-$CPU-$OS"
AC_SUBST(CPU)
AC_SUBST(OS)
AC_SUBST(ARCH)

#--------------------------------------------------------------------
#       Look for GNU Make
#--------------------------------------------------------------------
AS_MESSAGE([checking for GNU Make...])
AC_CHECK_PROG(GMAKE1, gmake, gmake, none)
GMAKE=$GMAKE1
if test $GMAKE = "none"; then
    AC_CHECK_PROG(GMAKE2, make, make, none)
    GMAKE=$GMAKE2
    if test $GMAKE = "none"; then
        AC_MSG_ERROR(GNU Make not found)
    else
        if test "`make -v | grep GNU`" = ""; then
            AC_MSG_ERROR(GNU Make not found)
        fi
    fi
fi
AC_SUBST(GMAKE)

#--------------------------------------------------------------------
#       Clean up previous configuration without removing installation
#       of other architecture builds.
#--------------------------------------------------------------------
AS_MESSAGE([checking to remove previous configurations...])
rm -f $SRC/Makefile $SRC/config.h $SRC/config.status $SRC/config.cache
rm -f $SRC/config.status $SRC/config.cache

#--------------------------------------------------------------------
#       Decide which C++ compiler to use.  
#         Use CC on SGI's.
#         and gcc on everything else.
#--------------------------------------------------------------------
AC_PROG_CC
AC_PROG_CPP

if test "$OS" = "CYGWIN"; then
    AC_CHECK_PROGS(CXX, gcc, none)
    if test "$CXX" = "gcc"; then
        AC_CHECK_PROGS(CXXLINK, g++, none)
	LIBCXX_FILE="g++"
    fi
    if test "$CXXLINK" = "none"; then
        AC_MSG_ERROR(no C++ compiler found)
    fi
    CC=gcc
    CXX=gcc
    CXXLINK=g++
#    CCFLAGS="-Wall -g -DCYGWIN"
#    CXXFLAGS="-Wall -g -DCYGWIN"
    CCFLAGS="-O2 -DCYGWIN"
    CXXFLAGS="-O2 -DCYGWIN"
else
    AC_CHECK_PROGS(CXX, gcc, none)
    if test "$CXX" = "gcc"; then
        AC_CHECK_PROGS(CXXLINK, g++, none)
	LIBCXX_FILE="g++"
    fi
    if test "$CXXLINK" = "none"; then
        AC_MSG_ERROR(no C++ compiler found)
    fi
    CC=gcc
    CXX=gcc
    CXXLINK=g++
#    CCFLAGS="-Wall -g -DXSHM"
#    CXXFLAGS="-Wall -g -DXSHM"
    CCFLAGS="-O2 -DXSHM"
    CXXFLAGS="-O2 -DXSHM"
fi
AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(CXXLINK)
AC_SUBST(LIBCXX_FILE)
AC_SUBST(CCFLAGS)
AC_SUBST(CXXFLAGS)

#--------------------------------------------------------------------
#       Need to do these two early
#--------------------------------------------------------------------
AC_USE_SYSTEM_EXTENSIONS
AC_SEARCH_LIBS([strerror],[cposix])

#--------------------------------------------------------------------
#       Check if random() exists, or should we use rand()
#--------------------------------------------------------------------
AS_MESSAGE([checking for random function...])
AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>]], [[random();]])],[AC_DEFINE(HAVE_RANDOM, 1)],[])
AC_SUBST(RANDOM)

#--------------------------------------------------------------------
#       Check for prototype for socket
#--------------------------------------------------------------------
AS_MESSAGE([checking for socket prototype...])
AC_EGREP_HEADER([int(.)*socket], sys/socket.h, 
	AC_DEFINE(HAVE_SOCKET_PROTO, 1))

#--------------------------------------------------------------------
#       Check for prototype for connect
#--------------------------------------------------------------------
AS_MESSAGE([checking for connect prototype...])
AC_EGREP_HEADER([int(.)*connect], sys/socket.h, 
	AC_DEFINE(HAVE_CONNECT_PROTO, 1))

#--------------------------------------------------------------------
#       Check to see if we need to link with socket libraries
#--------------------------------------------------------------------
AS_MESSAGE([checking for socket library...])
AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
#include <sys/socket.h>]], [[int sock;
struct sockaddr sa;
connect(sock, &sa, sizeof(sa));]])],[SOCKETLIBS=""],[SOCKETLIBS="-lsocket"])

AS_MESSAGE([checking for nsl library...])
AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>]], [[gethostbyname("");]])],[NSLLIBS=""],[NSLLIBS="-lnsl"])

#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	dynamic loading and shared libraries:
#
#	DL_OBJS -	Name of the object file that implements dynamic
#			loading for Tcl on this system.
#	DL_LIBS -	Library file(s) to include in tclsh and other base
#			applications in order for the "load" command to work.
#	LD_FLAGS -	Flags to pass to the compiler when linking object
#			files into an executable application binary such
#			as tclsh.
#	LD_SEARCH_FLAGS-Flags to pass to ld, such as "-R /usr/local/tcl/lib",
#			that tell the run-time dynamic linker where to look
#			for shared libraries such as libtcl.so.  Depends on
#			the variable LIB_INSTALL_DIR in the Makefile.
#	MAKE_LIB -	Command to execute to build the Tcl library;
#			differs depending on whether or not Tcl is being
#			compiled as a shared library.
#	SHLIB_CFLAGS -	Flags to pass to cc when compiling the components
#			of a shared library (may request position-independent
#			code, among other things).
#	SHLIB_LD -	Base command to use for combining object files
#			into a shared library.
#       SHLIB_LD_FLAGS- Flags to pass to ld for combining object files into a shared library
#	SHLIB_LD_LIBS -	Dependent libraries for the linker to scan when
#			creating shared libraries.  This symbol typically
#			goes at the end of the "ld" commands that build
#			shared libraries. The value of the symbol is
#			"${LIBS}" if all of the dependent libraries should
#			be specified when creating a shared library.  If
#			dependent libraries should not be specified (as on
#			SunOS 4.x, where they cause the link to fail, or in
#			general if Tcl and Tk aren't themselves shared
#			libraries), then this symbol has an empty string
#			as its value.
#	SHLIB_SUFFIX -	Suffix to use for the names of dynamically loadable
#			extensions.  An empty string means we don't know how
#			to use shared libraries on this platform.
#--------------------------------------------------------------------

# Step 1: set the variable "system" to hold the name and version number
# for the system.  This can usually be done via the "uname" command, but
# there are a few systems, like Next, where this doesn't work.

AC_MSG_CHECKING([system version (for dynamic loading)])
if test -f /usr/lib/NextStep/software_version; then
    system=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    system=`uname -s`-`uname -r`
    if test "$?" -ne 0 ; then
	AC_MSG_RESULT([unknown (can't find uname command)])
	system=unknown
    else
	# Special check for weird MP-RAS system (uname returns weird
	# results, and the version is kept in special file).
    
	if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
	    system=MP-RAS-`awk '{print $3}' /etc/.relid'`
	fi
	if test "`uname -s`" = "AIX" ; then
	    system=AIX-`uname -v`.`uname -r`
	fi
	AC_MSG_RESULT($system)
    fi
fi

# Step 2: check for existence of -ldl library.  This is needed because
# Linux can use either -ldl or -ldld for dynamic loading.

AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)

# Step 3: disable dynamic loading if requested via a command-line switch.

AC_ARG_ENABLE(load, [  --disable-load          disallow dynamic loading and "load" command],
    [tcl_ok=$enableval], [tcl_ok=yes])
if test "$tcl_ok" = "no"; then
    system=unknown
fi

# Step 4: set configuration options based on system name and version.

fullSrcDir=`cd $srcdir; pwd`
AIX=no
SWINCLUDE=""
case $system in
    AIX-*)
	SHLIB_CFLAGS=""
	SHLIB_LD="$fullSrcDir/ldAix /bin/ld -bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512"
	SHLIB_LD_FLAGS="-bhalt:4 -bM:SRE -bE:lib.exp -H512 -T512"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	DL_OBJS="tclLoadAix.o"
	DL_LIBS="-lld"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-L${LIB_INSTALL_DIR}'
	AC_DEFINE(NO_DLFCN_H)
	AIX=yes
	;;
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
	SHLIB_CFLAGS="+z"
	SHLIB_LD="ld -b"
	SHLIB_LD_FLAGS="-b"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".sl"
	DL_LIBS="-ldld"
	LD_FLAGS="-Wl,-E"
	LD_SEARCH_FLAGS='-Wl,+b,${LIB_INSTALL_DIR}:.'
	;;
    IRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX="..o"
	SHLIB_LD_LIBS=""
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS=""
	;;
    IRIX-5.*)
	SHLIB_CFLAGS=""
	SHLIB_LD="ld -shared -rdata_shared"
	SHLIB_LD_FLAGS="-shared -rdata_shared -all"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_INSTALL_DIR}'
	;;
    Darwin*)
	SHLIB_SUFFIX=".dylib"
	SWINCLUDE="-I/sw/include"
        ;;
    Linux*)
	SHLIB_CFLAGS="-fPIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	if test "$have_dl" = yes; then
	    SHLIB_LD="${CC} -shared"
	    SHLIB_LD_FLAGS="-shared"
	    DL_LIBS="-ldl"
	    LD_FLAGS="-rdynamic"
	    LD_SEARCH_FLAGS=""
	else
	    AC_CHECK_HEADER(dld.h, [
		SHLIB_LD="ld -shared"
		SHLIB_LD_FLAGS="-shared"
		DL_LIBS="-ldld"
		LD_FLAGS=""
		LD_SEARCH_FLAGS=""])
	fi
	;;
    MP-RAS-02*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_FLAGS="-G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    MP-RAS-*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_FLAGS="-G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	LD_FLAGS="-Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
    NetBSD-*|FreeBSD-*)
	# Not available on all versions:  check for include file.
	AC_CHECK_HEADER(dlfcn.h, [
	    SHLIB_CFLAGS="-fpic"
	    SHLIB_LD="ld -Bshareable"
	    SHLIB_LD_FLAGS="-Bshareable"
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX=".so"
	    DL_LIBS=""
	    LD_FLAGS=""
	    LD_SEARCH_FLAGS=""
	], [
	    SHLIB_CFLAGS=""
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX="..o"
	    DL_LIBS=""
	    LD_FLAGS=""
	    LD_SEARCH_FLAGS=""
	])

	# FreeBSD doesn't handle version numbers with dots.  Also, have to
	# append a dummy version number to .so file names.

	;;
    NEXTSTEP-*)
	SHLIB_CFLAGS=""
	SHLIB_LD="cc -nostdlib -r"
	SHLIB_LD_FLAGS="-nostdlib -r"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-1.[012])
	# OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1
	SHLIB_CFLAGS=""
	# Hack: make package name same as library name
	SHLIB_LD='ld -R -export $@:'
	SHLIB_LD_FLAGS='-R -export $@:'
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-1.*)
	# OSF/1 1.3 from OSF using ELF, and derivatives, including AD2
	SHLIB_CFLAGS="-fpic"
	SHLIB_LD="ld -shared"
	SHLIB_LD_FLAGS="-shared"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    OSF1-V*)
        # Digital OSF/1
	SHLIB_CFLAGS=""
	SHLIB_LD='ld -shared -expect_unresolved "*"'
	SHLIB_LD_FLAGS='-shared -expect_unresolved "*"'
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-Wl,-rpath,${LIB_INSTALL_DIR}'
	;;
    RISCos-*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX="..o"
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS=""
	;;
    SCO_SV-3.2*)
        # Note, dlopen is available only on SCO 3.2.5 and greater.  However,
        # this test works, since "uname -s" was non-standard in 3.2.4 and
        # below.
	SHLIB_CFLAGS="-Kpic -belf"
	SHLIB_LD="ld -G"
	SHLIB_LD_FLAGS="-G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	LD_FLAGS="-belf -Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
     SINIX*5.4*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_FLAGS="-G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS=""
	;;
    SunOS-4*)
	SHLIB_CFLAGS="-PIC"
	SHLIB_LD="ld"
	SHLIB_LD_FLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-L${LIB_INSTALL_DIR}'

	# SunOS can't handle version numbers with dots in them in library
	# specs, like -ltcl8.0, so use -ltcl80 instead.  Also, it
	# requires an extra version number at the end of .so file names.
	# So, the library has to have a name like libtcl80.so.1.0

	;;
    SunOS-5*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="/usr/ccs/bin/ld -G -z text"
	SHLIB_LD_FLAGS="-G -z text"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	LD_FLAGS=""
	LD_SEARCH_FLAGS='-R ${LIB_INSTALL_DIR}'
	;;
    ULTRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX="..o"
	SHLIB_LD_LIBS=""
	DL_LIBS=""
	LD_FLAGS="-Wl,-D,08000000"
	LD_SEARCH_FLAGS=""
	;;
    UNIX_SV*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD="cc -G"
	SHLIB_LD_FLAGS="-G"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	LD_FLAGS="-Wl,-Bexport"
	LD_SEARCH_FLAGS=""
	;;
esac

AC_SUBST(SWINCLUDE)

# If pseudo-static linking is in use (see K. B. Kenny, "Dynamic Loading for
# Tcl -- What Became of It?".  Proc. 2nd Tcl/Tk Workshop, New Orleans, LA,
# Computerized Processes Unlimited, 1994), then we need to determine which
# of several header files defines the a.out file format (a.out.h, sys/exec.h,
# or sys/exec_aout.h).  At present, we support only a file format that
# is more or less version-7-compatible.  In particular,
#	- a.out files must begin with `struct exec'.
#	- the N_TXTOFF on the `struct exec' must compute the seek address
#	  of the text segment
#	- The `struct exec' must contain a_magic, a_text, a_data, a_bss
#	  and a_entry fields.
# The following compilation should succeed if and only if either sys/exec.h
# or a.out.h is usable for the purpose.
#
# Note that the modified COFF format used on MIPS Ultrix 4.x is usable; the
# `struct exec' includes a second header that contains information that
# duplicates the v7 fields that are needed.

if test "x$DL_OBJS" = "xtclLoadAout.o" ; then
    AC_MSG_CHECKING(sys/exec.h)
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/exec.h>]], [[
	struct exec foo;
	unsigned long seek;
	int flag;
#if defined(__mips) || defined(mips)
	seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
	seek = N_TXTOFF (foo);
#endif
	flag = (foo.a_magic == OMAGIC);
	return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
]])],[tcl_ok=usable],[tcl_ok=unusable])
    AC_MSG_RESULT($tcl_ok)
    if test $tcl_ok = usable; then
	AC_DEFINE(USE_SYS_EXEC_H)
    else
	AC_MSG_CHECKING(a.out.h)
	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <a.out.h>]], [[
	    struct exec foo;
	    unsigned long seek;
	    int flag;
#if defined(__mips) || defined(mips)
	    seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
	    seek = N_TXTOFF (foo);
#endif
	    flag = (foo.a_magic == OMAGIC);
	    return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
	]])],[tcl_ok=usable],[tcl_ok=unusable])
	AC_MSG_RESULT($tcl_ok)
	if test $tcl_ok = usable; then
	    AC_DEFINE(USE_A_OUT_H)
	else
	    AC_MSG_CHECKING(sys/exec_aout.h)
	    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/exec_aout.h>]], [[
		struct exec foo;
		unsigned long seek;
		int flag;
#if defined(__mips) || defined(mips)
		seek = N_TXTOFF (foo.ex_f, foo.ex_o);
#else
		seek = N_TXTOFF (foo);
#endif
		flag = (foo.a_midmag == OMAGIC);
		return foo.a_text + foo.a_data + foo.a_bss + foo.a_entry;
	    ]])],[tcl_ok=usable],[tcl_ok=unusable])
	    AC_MSG_RESULT($tcl_ok)
	    if test $tcl_ok = usable; then
		AC_DEFINE(USE_SYS_EXEC_AOUT_H)
	    else
		DL_OBJS=""
	    fi
	fi
    fi
fi

if test "x$DL_OBJS" != "x" ; then
    BUILD_DLTEST="\$(DLTEST_TARGETS)"
else
    echo "Can't figure out how to do dynamic loading or shared libraries"
    echo "on this system."
    SHLIB_CFLAGS=""
    SHLIB_LD=""
    SHLIB_SUFFIX=""
    DL_LIBS=""
    LD_FLAGS=""
    LD_SEARCH_FLAGS=""
    BUILD_DLTEST=""
fi

if test "$SHLIB_SUFFIX" = ""; then
    DYNAMIC_LOADING="FALSE"
else
    DYNAMIC_LOADING="TRUE"
fi

# If we're running gcc, then change the C flags for compiling shared
# libraries to the right flags for gcc, instead of those for the
# standard manufacturer compiler.

if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
    SHLIB_CFLAGS="-fPIC"
    SHLIB_LD_FLAGS="-shared -Xlinker --whole-archive"
fi

#--------------------------------------------------------------------
#       Try to find the Perl5 Library
#--------------------------------------------------------------------
AS_MESSAGE([checking for Perl5 library...])
INCLUDE_PERL=FALSE

if test `which perl` != "0"; then
    if test `perl -v 2>&1 | grep -c 5.003_26` != "0" ; then
        INCLUDE_PERL=TRUE
        PERL_CORE=`perl -MConfig -e 'print $Config{archlib}'`
	PERL_CCOPTS=`perl -MExtUtils::Embed -e ccopts`
	PERL_LDOPTS=`perl -MExtUtils::Embed -e ldopts`


        AC_SUBST(INCLUDE_PERL)
        AC_SUBST(PERL_CCOPTS)
        AC_SUBST(PERL_LDOPTS)

        echo "   Using Perl at: " $PERL_CORE
    fi
fi
    
#--------------------------------------------------------------------
#	Try to find the freetype2 includes directory.  
#--------------------------------------------------------------------
AS_MESSAGE([checking for freetype2 include...])
  if test -d /usr/include/freetype2; then
    FT2INCLUDE=-I/usr/include/freetype2
  elif test -d /usr/X11R6/include/freetype2; then
    FT2INCLUDE=-I/usr/X11R6/include/freetype2
  fi
  if test "$FT2INCLUDE" = ""; then
    AC_MSG_WARN(freetype2 directory missing)
  fi
AC_SUBST(FT2INCLUDE)

#--------------------------------------------------------------------
# Check for db header file, because hashtab uses it
# instead of Tcl_Hash routines
#--------------------------------------------------------------------
AC_CHECK_HEADER([db.h], DB=found, DB=missing)
if test "$DB" = "missing"; then
  AC_MSG_ERROR(db.h not found)
fi

#--------------------------------------------------------------------
#	Try to find the ImageMagick library.  
#         First see if it was specified on the configure command line
#         Then, check some normal places.
#--------------------------------------------------------------------

PKG_CHECK_MODULES(MAGICKCORE, [MagickCore])
AC_SUBST(MAGICKCORE_CFLAGS)
AC_SUBST(MAGICKCORE_LIBS)

#--------------------------------------------------------------------
#       For some reason, AC.PROG.AWK is giving the wrong answer on AIX
#--------------------------------------------------------------------
AS_MESSAGE([checking for best version of awk to use...])
if test -n "$AWK"; then
  :
else
  if test "$OS" = "AIX"; then
    AWK=awk
    AC_SUBST(AWK)dnl
  else
    AC_PROG_AWK
  fi
fi

#--------------------------------------------------------------------
#       Check for prototype for gettimeofday
#--------------------------------------------------------------------
AS_MESSAGE([checking for gettimeofday prototype...])
AC_EGREP_HEADER([int(.)*gettimeofday], sys/time.h, 
	AC_DEFINE(HAVE_GETTIMEOFDAY_PROTO, 1))

#--------------------------------------------------------------------
#       Check for prototype for strcasecmp
#--------------------------------------------------------------------
AS_MESSAGE([checking for strcasecmp prototype...])
AC_EGREP_HEADER([extern(.)*int(.)*strcasecmp], string.h, 
	AC_DEFINE(HAVE_STRCASECMP_PROTO, 1))

#--------------------------------------------------------------------
#       Check for prototype for strncasecmp
#--------------------------------------------------------------------
AS_MESSAGE([checking for strncasecmp prototype...])
AC_EGREP_HEADER([extern(.)*int(.)*strncasecmp], string.h, 
	AC_DEFINE(HAVE_STRNCASECMP_PROTO, 1))

#--------------------------------------------------------------------
#       Check for prototype for lstat
#--------------------------------------------------------------------
AS_MESSAGE([checking for lstat prototype...])
AC_EGREP_HEADER([int(.)*lstat], sys/stat.h, 
	AC_DEFINE(HAVE_LSTAT_PROTO, 1))

#--------------------------------------------------------------------
#       Stuff to help smooth out the differences among Unixes
#--------------------------------------------------------------------
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_CHECK_HEADERS(string.h memory.h stdlib.h unistd.h sys/time.h ulocks.h gl/image.h device.h sys/select.h)
AC_CHECK_FUNCS(lstat)
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_DIAGNOSE([obsolete],[your code may safely assume C89 semantics that RETSIGTYPE is void.
Remove this warning and the `AC_CACHE_CHECK' when you adjust the code.])dnl
AC_CACHE_CHECK([return type of signal handlers],[ac_cv_type_signal],[AC_COMPILE_IFELSE(
[AC_LANG_PROGRAM([#include <sys/types.h>
#include <signal.h>
],
		 [return *(signal (0, 0)) (0) == 1;])],
		   [ac_cv_type_signal=int],
		   [ac_cv_type_signal=void])])
AC_DEFINE_UNQUOTED([RETSIGTYPE],[$ac_cv_type_signal],[Define as the return type of signal handlers
		    (`int' or `void').])

AC_TYPE_SIZE_T
AC_TYPE_UID_T
AC_FUNC_ALLOCA
AC_FUNC_VPRINTF
AC_FUNC_WAIT3
AC_HEADER_TIME
AC_PROG_RANLIB
AC_SUBST(RANLIB)

#--------------------------------------------------------------------
#	Locate the X11 header files and the X11 library archive.  Try
#	the ac_find_x macro first, but if it doesn't find the X stuff
#	(e.g. because there's no xmkmf program) then check through
#	a list of possible directories.
#--------------------------------------------------------------------

AC_CHECK_PROG(tk_ok, xmkmf, yes, no)
if test $tk_ok = "yes"; then
    AC_PATH_X
fi
if test "$XINCLUDE_DIR" != ""; then
    x_includes="$XINCLUDE_DIR"
fi
if test "$x_includes" = /usr/include; then
    XINCLUDES="# no special path needed"
elif test "$x_includes" != "" -a "$x_includes" != "NONE"; then
    XINCLUDES=" -I$x_includes"
else
    AS_MESSAGE([checking for X11 header files...])
    XINCLUDES="# no special path needed"
    AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <X11/Intrinsic.h>]])],[],[XINCLUDES="nope"])
    if test "$XINCLUDES" = nope; then
        dirs="/usr/unsupported/include \
		/usr/local/include \
		/usr/X386/include \
		/usr/X11R4/include \
		/usr/include/X11R4 \
		/usr/X11R5/include \
		/usr/include/X11R5 \
		/usr/X11R6/include \
		/usr/include/X11R6 \
		/usr/local/X11R4/include \
		/usr/local/X11R5/include \
		/usr/local/X11R6/include \
		/usr/openwin/include \
		/usr/X11/include \
		/usr/include"
        for i in $dirs ; do
	    if test -r $i/X11/Intrinsic.h; then
	        XINCLUDES=" -I$i"
		break
	    fi
        done
    fi
fi
if test "$XINCLUDES" = nope; then
  echo "Warning:  couldn't find any X11 include files."
  XINCLUDES="# no include files found"
fi
AC_SUBST(XINCLUDES)

if test "$XLIBRARY_DIR" != ""; then
    x_libraries="$XLIBRARY_DIR"
fi
if test "$x_libraries" = "NONE"; then
    x_libraries=""
fi
if test "$x_libraries" = /usr/lib; then
    XLIBSW="-lXext"
elif test "$x_libraries" != "" -a "$x_libraries" != "NONE"; then
    XLIBSW="-L$x_libraries -lXext"
else
    AS_MESSAGE([checking for X11 library archive...])
    AC_CHECK_LIB(X11, main, XLIBSW="-lXext", XLIBSW=nope)
    if test "$XLIBSW" = nope; then
	dirs="/usr/unsupported/lib \
		/usr/local/lib \
		/usr/X386/lib \
		/usr/X11R4/lib \
		/usr/lib/X11R4 \
		/usr/X11R5/lib \
		/usr/lib/X11R5 \
		/usr/X11R6/lib \
		/usr/lib/X11R6 \
		/usr/local/X11R4/lib \
		/usr/local/X11R5/lib \
		/usr/local/X11R6/lib \
		/usr/openwin/lib \
		/usr/X11/lib"
	for i in $dirs ; do
	    if test -r $i/libX11.a; then
		XLIBSW="-L$i -lXext"
	        x_libraries=$i
	        break
	    fi
	done
    fi
fi
XLIBPATH=$x_libraries
if test "$XLIBSW" = nope ; then
    echo "Warning:  couldn't find the X11 library archive.  Using -lX11."
    XLIBSW="-lXext"
fi
AC_SUBST(XLIBPATH)
AC_SUBST(XLIBSW)

#--------------------------------------------------------------------
#    Pass on environment variables
#--------------------------------------------------------------------
AC_SUBST(PADHOME)
AC_SUBST(CPU)
AC_SUBST(OS)
AC_SUBST(ARCH)
AC_SUBST(SOCKETLIBS)
AC_SUBST(NSLLIBS)
AC_SUBST(DL_LIBS)
AC_SUBST(LD_FLAGS)
AC_SUBST(SHLIB_CFLAGS)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_LD_FLAGS)
AC_SUBST(SHLIB_SUFFIX)
AC_SUBST(DYNAMIC_LOADING)

#--------------------------------------------------------------------
#    Create configured files
#--------------------------------------------------------------------
AC_CONFIG_FILES([../pad ../paddraw ../paddraw.install Makefile])
AC_OUTPUT
mv Makefile $SRC/Makefile
chmod a+x ../pad ../paddraw
